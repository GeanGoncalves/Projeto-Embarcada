

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jul 27 23:12:03 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	text20,global,reloc=2,class=CODE,delta=1
    29                           	psect	text21,global,reloc=2,class=CODE,delta=1
    30                           	psect	text22,global,reloc=2,class=CODE,delta=1
    31                           	psect	text23,global,reloc=2,class=CODE,delta=1
    32                           	psect	text24,global,reloc=2,class=CODE,delta=1
    33                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 12/02/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4520 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     _PORTEbits	set	3972
    76  0000                     _TRISE	set	3990
    77  0000                     _TRISD	set	3989
    78  0000                     _TRISC	set	3988
    79  0000                     _TRISB	set	3987
    80  0000                     _TRISA	set	3986
    81  0000                     _PORTE	set	3972
    82  0000                     _PORTD	set	3971
    83  0000                     _PORTC	set	3970
    84  0000                     _PORTB	set	3969
    85  0000                     _PORTA	set	3968
    86                           
    87                           ; #config settings
    88                           
    89                           	psect	cinit
    90  006B3E                     __pcinit:
    91                           	callstack 0
    92  006B3E                     start_initialization:
    93                           	callstack 0
    94  006B3E                     __initialization:
    95                           	callstack 0
    96                           
    97                           ; Clear objects allocated to COMRAM (7 bytes)
    98  006B3E  EE00  F030         	lfsr	0,__pbssCOMRAM
    99  006B42  0E07               	movlw	7
   100  006B44                     clear_0:
   101  006B44  6AEE               	clrf	postinc0,c
   102  006B46  06E8               	decf	wreg,f,c
   103  006B48  E1FD               	bnz	clear_0
   104  006B4A                     end_of_initialization:
   105                           	callstack 0
   106  006B4A                     __end_of__initialization:
   107                           	callstack 0
   108  006B4A  0100               	movlb	0
   109  006B4C  EF6B  F03D         	goto	_main	;jump to C main() function
   110                           
   111                           	psect	bssCOMRAM
   112  000030                     __pbssCOMRAM:
   113                           	callstack 0
   114  000030                     kpDebounce@valorAntigo:
   115                           	callstack 0
   116  000030                     	ds	2
   117  000032                     kpDebounce@valorNovo:
   118                           	callstack 0
   119  000032                     	ds	2
   120  000034                     _valor:
   121                           	callstack 0
   122  000034                     	ds	2
   123  000036                     kpDebounce@tempo:
   124                           	callstack 0
   125  000036                     	ds	1
   126                           
   127                           	psect	cstackCOMRAM
   128  000001                     __pcstackCOMRAM:
   129                           	callstack 0
   130  000001                     ??_kpDebounce:
   131  000001                     ?_kpRead:
   132                           	callstack 0
   133  000001                     ?___wmul:
   134                           	callstack 0
   135  000001                     ?___lwdiv:
   136                           	callstack 0
   137  000001                     ?___lmul:
   138                           	callstack 0
   139  000001                     ?___lldiv:
   140                           	callstack 0
   141  000001                     ?___aldiv:
   142                           	callstack 0
   143  000001                     lcd_wr@val:
   144                           	callstack 0
   145  000001                     Delay40us@i:
   146                           	callstack 0
   147  000001                     tempo@x:
   148                           	callstack 0
   149  000001                     digitalWrite@pin:
   150                           	callstack 0
   151  000001                     pinMode@pin:
   152                           	callstack 0
   153  000001                     atraso_ms@valor:
   154                           	callstack 0
   155  000001                     ___wmul@multiplier:
   156                           	callstack 0
   157  000001                     ___lwdiv@dividend:
   158                           	callstack 0
   159  000001                     ___lmul@multiplier:
   160                           	callstack 0
   161  000001                     ___lldiv@dividend:
   162                           	callstack 0
   163  000001                     ___aldiv@dividend:
   164                           	callstack 0
   165                           
   166                           ; 4 bytes @ 0x0
   167  000001                     	ds	1
   168  000002                     Delay2ms@i:
   169                           	callstack 0
   170  000002                     tempo@n:
   171                           	callstack 0
   172                           
   173                           ; 1 bytes @ 0x1
   174  000002                     	ds	1
   175  000003                     tempo@j:
   176                           	callstack 0
   177  000003                     digitalWrite@value:
   178                           	callstack 0
   179  000003                     pinMode@type:
   180                           	callstack 0
   181  000003                     atraso_ms@i:
   182                           	callstack 0
   183  000003                     ___wmul@multiplicand:
   184                           	callstack 0
   185  000003                     ___lwdiv@divisor:
   186                           	callstack 0
   187                           
   188                           ; 2 bytes @ 0x2
   189  000003                     	ds	1
   190  000004                     tempo@k:
   191                           	callstack 0
   192                           
   193                           ; 1 bytes @ 0x3
   194  000004                     	ds	1
   195  000005                     ??_digitalWrite:
   196  000005                     ??_pinMode:
   197  000005                     tempo@m:
   198                           	callstack 0
   199  000005                     atraso_ms@j:
   200                           	callstack 0
   201  000005                     ___wmul@product:
   202                           	callstack 0
   203  000005                     ___lwdiv@quotient:
   204                           	callstack 0
   205  000005                     ___lmul@multiplicand:
   206                           	callstack 0
   207  000005                     ___lldiv@divisor:
   208                           	callstack 0
   209  000005                     ___aldiv@divisor:
   210                           	callstack 0
   211                           
   212                           ; 4 bytes @ 0x4
   213  000005                     	ds	1
   214  000006                     lcd_cmd@val:
   215                           	callstack 0
   216  000006                     kpDebounce@old_D:
   217                           	callstack 0
   218                           
   219                           ; 1 bytes @ 0x5
   220  000006                     	ds	1
   221  000007                     lcdCommand@old_D:
   222                           	callstack 0
   223  000007                     lcdData@valor:
   224                           	callstack 0
   225  000007                     ___lwdiv@counter:
   226                           	callstack 0
   227  000007                     kpDebounce@k:
   228                           	callstack 0
   229                           
   230                           ; 2 bytes @ 0x6
   231  000007                     	ds	1
   232  000008                     ??_pwmSet1:
   233  000008                     lcdCommand@cmd:
   234                           	callstack 0
   235  000008                     lcdData@old_D:
   236                           	callstack 0
   237                           
   238                           ; 1 bytes @ 0x7
   239  000008                     	ds	1
   240  000009                     lcdPosition@coluna:
   241                           	callstack 0
   242  000009                     kpDebounce@j:
   243                           	callstack 0
   244  000009                     ___aldiv@counter:
   245                           	callstack 0
   246  000009                     ___lmul@product:
   247                           	callstack 0
   248  000009                     ___lldiv@quotient:
   249                           	callstack 0
   250                           
   251                           ; 4 bytes @ 0x8
   252  000009                     	ds	1
   253  00000A                     lcdPosition@comando:
   254                           	callstack 0
   255  00000A                     kpDebounce@i:
   256                           	callstack 0
   257  00000A                     pwmSet1@porcento:
   258                           	callstack 0
   259  00000A                     ___aldiv@sign:
   260                           	callstack 0
   261                           
   262                           ; 1 bytes @ 0x9
   263  00000A                     	ds	1
   264  00000B                     lcdPosition@linha:
   265                           	callstack 0
   266  00000B                     pwmSet1@val:
   267                           	callstack 0
   268  00000B                     ___aldiv@quotient:
   269                           	callstack 0
   270                           
   271                           ; 4 bytes @ 0xA
   272  00000B                     	ds	1
   273  00000C                     
   274                           ; 1 bytes @ 0xB
   275  00000C                     	ds	1
   276  00000D                     ___lldiv@counter:
   277                           	callstack 0
   278                           
   279                           ; 1 bytes @ 0xC
   280  00000D                     	ds	1
   281  00000E                     ?___llmod:
   282                           	callstack 0
   283  00000E                     ___llmod@dividend:
   284                           	callstack 0
   285                           
   286                           ; 4 bytes @ 0xD
   287  00000E                     	ds	1
   288  00000F                     pwmFrequency@freq:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0xE
   292  00000F                     	ds	2
   293  000011                     
   294                           ; 1 bytes @ 0x10
   295  000011                     	ds	1
   296  000012                     ___llmod@divisor:
   297                           	callstack 0
   298                           
   299                           ; 4 bytes @ 0x11
   300  000012                     	ds	4
   301  000016                     ___llmod@counter:
   302                           	callstack 0
   303                           
   304                           ; 1 bytes @ 0x15
   305  000016                     	ds	1
   306  000017                     _main$981:
   307                           	callstack 0
   308                           
   309                           ; 4 bytes @ 0x16
   310  000017                     	ds	4
   311  00001B                     main@aux:
   312                           	callstack 0
   313                           
   314                           ; 1 bytes @ 0x1A
   315  00001B                     	ds	1
   316  00001C                     main@i:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0x1B
   320  00001C                     	ds	1
   321  00001D                     main@k:
   322                           	callstack 0
   323                           
   324                           ; 1 bytes @ 0x1C
   325  00001D                     	ds	1
   326  00001E                     main@contponto:
   327                           	callstack 0
   328                           
   329                           ; 4 bytes @ 0x1D
   330  00001E                     	ds	4
   331  000022                     main@contipo:
   332                           	callstack 0
   333                           
   334                           ; 4 bytes @ 0x21
   335  000022                     	ds	4
   336  000026                     main@posicao:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x25
   340  000026                     	ds	1
   341  000027                     main@teclay:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x26
   345  000027                     	ds	2
   346  000029                     main@tecla:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x28
   350  000029                     	ds	2
   351  00002B                     main@j:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0x2A
   355  00002B                     	ds	1
   356  00002C                     main@cont:
   357                           	callstack 0
   358                           
   359                           ; 4 bytes @ 0x2B
   360  00002C                     	ds	4
   361                           
   362 ;;
   363 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   364 ;;
   365 ;; *************** function _main *****************
   366 ;; Defined at:
   367 ;;		line 160 in file "main.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;		None
   370 ;; Auto vars:     Size  Location     Type
   371 ;;  cont            4   43[COMRAM] unsigned long 
   372 ;;  contipo         4   33[COMRAM] unsigned long 
   373 ;;  contponto       4   29[COMRAM] unsigned long 
   374 ;;  tecla           2   40[COMRAM] unsigned int 
   375 ;;  teclay          2   38[COMRAM] unsigned int 
   376 ;;  j               1   42[COMRAM] unsigned char 
   377 ;;  posicao         1   37[COMRAM] unsigned char 
   378 ;;  k               1   28[COMRAM] unsigned char 
   379 ;;  i               1   27[COMRAM] unsigned char 
   380 ;;  aux             1   26[COMRAM] unsigned char 
   381 ;; Return value:  Size  Location     Type
   382 ;;                  1    wreg      void 
   383 ;; Registers used:
   384 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   385 ;; Tracked objects:
   386 ;;		On entry : 0/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   390 ;;      Params:         0       0       0       0       0       0       0
   391 ;;      Locals:        25       0       0       0       0       0       0
   392 ;;      Temps:          0       0       0       0       0       0       0
   393 ;;      Totals:        25       0       0       0       0       0       0
   394 ;;Total ram usage:       25 bytes
   395 ;; Hardware stack levels required when called: 5
   396 ;; This function calls:
   397 ;;		___lldiv
   398 ;;		___llmod
   399 ;;		___lmul
   400 ;;		_atraso_ms
   401 ;;		_impressao
   402 ;;		_impressaoponto
   403 ;;		_inicio
   404 ;;		_kpDebounce
   405 ;;		_kpInit
   406 ;;		_kpRead
   407 ;;		_lcdData
   408 ;;		_lcdInit
   409 ;;		_lcdPosition
   410 ;;		_pwmFrequency
   411 ;;		_pwmInit
   412 ;;		_pwmSet1
   413 ;;		_tempo
   414 ;; This function is called by:
   415 ;;		Startup code after reset
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           	psect	text0
   420  007AD6                     __ptext0:
   421                           	callstack 0
   422  007AD6                     _main:
   423                           	callstack 26
   424  007AD6                     
   425                           ;main.c: 161:     unsigned long int contipo = 0;
   426  007AD6  0E00               	movlw	0
   427  007AD8  6E22               	movwf	main@contipo^0,c
   428  007ADA  0E00               	movlw	0
   429  007ADC  6E23               	movwf	(main@contipo+1)^0,c
   430  007ADE  0E00               	movlw	0
   431  007AE0  6E24               	movwf	(main@contipo+2)^0,c
   432  007AE2  0E00               	movlw	0
   433  007AE4  6E25               	movwf	(main@contipo+3)^0,c
   434                           
   435                           ;main.c: 162:     unsigned long int contponto = 0;
   436  007AE6  0E00               	movlw	0
   437  007AE8  6E1E               	movwf	main@contponto^0,c
   438  007AEA  0E00               	movlw	0
   439  007AEC  6E1F               	movwf	(main@contponto+1)^0,c
   440  007AEE  0E00               	movlw	0
   441  007AF0  6E20               	movwf	(main@contponto+2)^0,c
   442  007AF2  0E00               	movlw	0
   443  007AF4  6E21               	movwf	(main@contponto+3)^0,c
   444                           
   445                           ;main.c: 164:     unsigned int tecla = 16;
   446  007AF6  0E00               	movlw	0
   447  007AF8  6E2A               	movwf	(main@tecla+1)^0,c
   448  007AFA  0E10               	movlw	16
   449  007AFC  6E29               	movwf	main@tecla^0,c
   450                           
   451                           ;main.c: 165:     unsigned int teclay = 16;
   452  007AFE  0E00               	movlw	0
   453  007B00  6E28               	movwf	(main@teclay+1)^0,c
   454  007B02  0E10               	movlw	16
   455  007B04  6E27               	movwf	main@teclay^0,c
   456                           
   457                           ;main.c: 166:     unsigned char posicao, aux, i;;main.c: 167:     unsigned char k, j;;ma
      +                          in.c: 169:     (*(volatile __near unsigned char*)0xF95) = 0X00;
   458  007B06  0E00               	movlw	0
   459  007B08  6E95               	movwf	149,c	;volatile
   460                           
   461                           ;main.c: 170:     (*(volatile __near unsigned char*)0xF83) = 0X00;
   462  007B0A  0E00               	movlw	0
   463  007B0C  6E83               	movwf	131,c	;volatile
   464  007B0E                     
   465                           ;main.c: 172:     inicio();
   466  007B0E  EC66  F037         	call	_inicio	;wreg free
   467  007B12                     
   468                           ;main.c: 173:     kpInit();
   469  007B12  EC95  F035         	call	_kpInit	;wreg free
   470  007B16                     
   471                           ;main.c: 174:     impressao();
   472  007B16  ECB9  F039         	call	_impressao	;wreg free
   473  007B1A                     l2137:
   474                           
   475                           ;main.c: 177:         kpDebounce();
   476  007B1A  EC60  F03A         	call	_kpDebounce	;wreg free
   477  007B1E                     
   478                           ;main.c: 179:         if (kpRead() != tecla) {
   479  007B1E  EC9A  F035         	call	_kpRead	;wreg free
   480  007B22  5029               	movf	main@tecla^0,w,c
   481  007B24  1801               	xorwf	?_kpRead^0,w,c
   482  007B26  E109               	bnz	u1910
   483  007B28  502A               	movf	(main@tecla+1)^0,w,c
   484  007B2A  1802               	xorwf	(?_kpRead+1)^0,w,c
   485  007B2C  B4D8               	btfsc	status,2,c
   486  007B2E  EF9B  F03D         	goto	u1911
   487  007B32  EF9D  F03D         	goto	u1910
   488  007B36                     u1911:
   489  007B36  EFDF  F03D         	goto	l2159
   490  007B3A                     u1910:
   491  007B3A                     
   492                           ;main.c: 180:             tecla = kpRead();
   493  007B3A  EC9A  F035         	call	_kpRead	;wreg free
   494  007B3E  C001  F029         	movff	?_kpRead,main@tecla
   495  007B42  C002  F02A         	movff	?_kpRead+1,main@tecla+1
   496  007B46                     
   497                           ;main.c: 182:             if (((tecla) & (1<<3))) {
   498  007B46  A629               	btfss	main@tecla^0,3,c
   499  007B48  EFA8  F03D         	goto	u1921
   500  007B4C  EFAA  F03D         	goto	u1920
   501  007B50                     u1921:
   502  007B50  EFB2  F03D         	goto	l2147
   503  007B54                     u1920:
   504  007B54                     
   505                           ;main.c: 183:                 contipo = 10;
   506  007B54  0E0A               	movlw	10
   507  007B56  6E22               	movwf	main@contipo^0,c
   508  007B58  0E00               	movlw	0
   509  007B5A  6E23               	movwf	(main@contipo+1)^0,c
   510  007B5C  0E00               	movlw	0
   511  007B5E  6E24               	movwf	(main@contipo+2)^0,c
   512  007B60  0E00               	movlw	0
   513  007B62  6E25               	movwf	(main@contipo+3)^0,c
   514  007B64                     l2147:
   515                           
   516                           ;main.c: 185:             if (((tecla) & (1<<7))) {
   517  007B64  AE29               	btfss	main@tecla^0,7,c
   518  007B66  EFB7  F03D         	goto	u1931
   519  007B6A  EFB9  F03D         	goto	u1930
   520  007B6E                     u1931:
   521  007B6E  EFC1  F03D         	goto	l2151
   522  007B72                     u1930:
   523  007B72                     
   524                           ;main.c: 186:                 contipo = 7.5;
   525  007B72  0E07               	movlw	7
   526  007B74  6E22               	movwf	main@contipo^0,c
   527  007B76  0E00               	movlw	0
   528  007B78  6E23               	movwf	(main@contipo+1)^0,c
   529  007B7A  0E00               	movlw	0
   530  007B7C  6E24               	movwf	(main@contipo+2)^0,c
   531  007B7E  0E00               	movlw	0
   532  007B80  6E25               	movwf	(main@contipo+3)^0,c
   533  007B82                     l2151:
   534                           
   535                           ;main.c: 188:             if (((tecla) & (1<<11))) {
   536  007B82  A62A               	btfss	(main@tecla+1)^0,3,c
   537  007B84  EFC6  F03D         	goto	u1941
   538  007B88  EFC8  F03D         	goto	u1940
   539  007B8C                     u1941:
   540  007B8C  EFD0  F03D         	goto	l2155
   541  007B90                     u1940:
   542  007B90                     
   543                           ;main.c: 189:                 contipo = 8;
   544  007B90  0E08               	movlw	8
   545  007B92  6E22               	movwf	main@contipo^0,c
   546  007B94  0E00               	movlw	0
   547  007B96  6E23               	movwf	(main@contipo+1)^0,c
   548  007B98  0E00               	movlw	0
   549  007B9A  6E24               	movwf	(main@contipo+2)^0,c
   550  007B9C  0E00               	movlw	0
   551  007B9E  6E25               	movwf	(main@contipo+3)^0,c
   552  007BA0                     l2155:
   553                           
   554                           ;main.c: 191:             if (((tecla) & (1<<2))) {
   555  007BA0  A429               	btfss	main@tecla^0,2,c
   556  007BA2  EFD5  F03D         	goto	u1951
   557  007BA6  EFD7  F03D         	goto	u1950
   558  007BAA                     u1951:
   559  007BAA  EFDF  F03D         	goto	l2159
   560  007BAE                     u1950:
   561  007BAE                     
   562                           ;main.c: 192:                 contipo = 9;
   563  007BAE  0E09               	movlw	9
   564  007BB0  6E22               	movwf	main@contipo^0,c
   565  007BB2  0E00               	movlw	0
   566  007BB4  6E23               	movwf	(main@contipo+1)^0,c
   567  007BB6  0E00               	movlw	0
   568  007BB8  6E24               	movwf	(main@contipo+2)^0,c
   569  007BBA  0E00               	movlw	0
   570  007BBC  6E25               	movwf	(main@contipo+3)^0,c
   571  007BBE                     l2159:
   572                           
   573                           ;main.c: 196:         if (contipo != 0) {
   574  007BBE  5022               	movf	main@contipo^0,w,c
   575  007BC0  1023               	iorwf	(main@contipo+1)^0,w,c
   576  007BC2  1024               	iorwf	(main@contipo+2)^0,w,c
   577  007BC4  1025               	iorwf	(main@contipo+3)^0,w,c
   578  007BC6  B4D8               	btfsc	status,2,c
   579  007BC8  EFE8  F03D         	goto	u1961
   580  007BCC  EFEA  F03D         	goto	u1960
   581  007BD0                     u1961:
   582  007BD0  EF8D  F03D         	goto	l2137
   583  007BD4                     u1960:
   584  007BD4                     
   585                           ;main.c: 198:             kpInit();
   586  007BD4  EC95  F035         	call	_kpInit	;wreg free
   587                           
   588                           ;main.c: 199:             impressaoponto();
   589  007BD8  ECB5  F038         	call	_impressaoponto	;wreg free
   590  007BDC                     l2163:
   591                           
   592                           ;main.c: 201:             kpDebounce();
   593  007BDC  EC60  F03A         	call	_kpDebounce	;wreg free
   594  007BE0                     
   595                           ;main.c: 202:             if (kpRead() != teclay) {
   596  007BE0  EC9A  F035         	call	_kpRead	;wreg free
   597  007BE4  5027               	movf	main@teclay^0,w,c
   598  007BE6  1801               	xorwf	?_kpRead^0,w,c
   599  007BE8  E109               	bnz	u1970
   600  007BEA  5028               	movf	(main@teclay+1)^0,w,c
   601  007BEC  1802               	xorwf	(?_kpRead+1)^0,w,c
   602  007BEE  B4D8               	btfsc	status,2,c
   603  007BF0  EFFC  F03D         	goto	u1971
   604  007BF4  EFFE  F03D         	goto	u1970
   605  007BF8                     u1971:
   606  007BF8  EF31  F03E         	goto	l2181
   607  007BFC                     u1970:
   608  007BFC                     
   609                           ;main.c: 203:                 teclay = kpRead();
   610  007BFC  EC9A  F035         	call	_kpRead	;wreg free
   611  007C00  C001  F027         	movff	?_kpRead,main@teclay
   612  007C04  C002  F028         	movff	?_kpRead+1,main@teclay+1
   613  007C08                     
   614                           ;main.c: 205:                 if (((teclay) & (1<<1))) {
   615  007C08  A227               	btfss	main@teclay^0,1,c
   616  007C0A  EF09  F03E         	goto	u1981
   617  007C0E  EF0B  F03E         	goto	u1980
   618  007C12                     u1981:
   619  007C12  EF13  F03E         	goto	l2173
   620  007C16                     u1980:
   621  007C16                     
   622                           ;main.c: 206:                     contponto = 2;
   623  007C16  0E02               	movlw	2
   624  007C18  6E1E               	movwf	main@contponto^0,c
   625  007C1A  0E00               	movlw	0
   626  007C1C  6E1F               	movwf	(main@contponto+1)^0,c
   627  007C1E  0E00               	movlw	0
   628  007C20  6E20               	movwf	(main@contponto+2)^0,c
   629  007C22  0E00               	movlw	0
   630  007C24  6E21               	movwf	(main@contponto+3)^0,c
   631  007C26                     l2173:
   632                           
   633                           ;main.c: 208:                 if (((teclay) & (1<<5))) {
   634  007C26  AA27               	btfss	main@teclay^0,5,c
   635  007C28  EF18  F03E         	goto	u1991
   636  007C2C  EF1A  F03E         	goto	u1990
   637  007C30                     u1991:
   638  007C30  EF22  F03E         	goto	l2177
   639  007C34                     u1990:
   640  007C34                     
   641                           ;main.c: 209:                     contponto = 3;
   642  007C34  0E03               	movlw	3
   643  007C36  6E1E               	movwf	main@contponto^0,c
   644  007C38  0E00               	movlw	0
   645  007C3A  6E1F               	movwf	(main@contponto+1)^0,c
   646  007C3C  0E00               	movlw	0
   647  007C3E  6E20               	movwf	(main@contponto+2)^0,c
   648  007C40  0E00               	movlw	0
   649  007C42  6E21               	movwf	(main@contponto+3)^0,c
   650  007C44                     l2177:
   651                           
   652                           ;main.c: 211:                 if (((teclay) & (1<<9))) {
   653  007C44  A228               	btfss	(main@teclay+1)^0,1,c
   654  007C46  EF27  F03E         	goto	u2001
   655  007C4A  EF29  F03E         	goto	u2000
   656  007C4E                     u2001:
   657  007C4E  EF31  F03E         	goto	l2181
   658  007C52                     u2000:
   659  007C52                     
   660                           ;main.c: 212:                     contponto = 4;
   661  007C52  0E04               	movlw	4
   662  007C54  6E1E               	movwf	main@contponto^0,c
   663  007C56  0E00               	movlw	0
   664  007C58  6E1F               	movwf	(main@contponto+1)^0,c
   665  007C5A  0E00               	movlw	0
   666  007C5C  6E20               	movwf	(main@contponto+2)^0,c
   667  007C5E  0E00               	movlw	0
   668  007C60  6E21               	movwf	(main@contponto+3)^0,c
   669  007C62                     l2181:
   670                           
   671                           ;main.c: 216:         if (contponto != 0) {
   672  007C62  501E               	movf	main@contponto^0,w,c
   673  007C64  101F               	iorwf	(main@contponto+1)^0,w,c
   674  007C66  1020               	iorwf	(main@contponto+2)^0,w,c
   675  007C68  1021               	iorwf	(main@contponto+3)^0,w,c
   676  007C6A  B4D8               	btfsc	status,2,c
   677  007C6C  EF3A  F03E         	goto	u2011
   678  007C70  EF3C  F03E         	goto	u2010
   679  007C74                     u2011:
   680  007C74  EFEE  F03D         	goto	l2163
   681  007C78                     u2010:
   682  007C78                     
   683                           ;main.c: 217:         cont = (contipo * contponto) * 6000;
   684  007C78  C022  F001         	movff	main@contipo,___lmul@multiplier
   685  007C7C  C023  F002         	movff	main@contipo+1,___lmul@multiplier+1
   686  007C80  C024  F003         	movff	main@contipo+2,___lmul@multiplier+2
   687  007C84  C025  F004         	movff	main@contipo+3,___lmul@multiplier+3
   688  007C88  C01E  F005         	movff	main@contponto,___lmul@multiplicand
   689  007C8C  C01F  F006         	movff	main@contponto+1,___lmul@multiplicand+1
   690  007C90  C020  F007         	movff	main@contponto+2,___lmul@multiplicand+2
   691  007C94  C021  F008         	movff	main@contponto+3,___lmul@multiplicand+3
   692  007C98  EC50  F036         	call	___lmul	;wreg free
   693  007C9C  C001  F017         	movff	?___lmul,_main$981
   694  007CA0  C002  F018         	movff	?___lmul+1,_main$981+1
   695  007CA4  C003  F019         	movff	?___lmul+2,_main$981+2
   696  007CA8  C004  F01A         	movff	?___lmul+3,_main$981+3
   697                           
   698                           ;main.c: 217:         cont = (contipo * contponto) * 6000;
   699  007CAC  C017  F001         	movff	_main$981,___lmul@multiplier
   700  007CB0  C018  F002         	movff	_main$981+1,___lmul@multiplier+1
   701  007CB4  C019  F003         	movff	_main$981+2,___lmul@multiplier+2
   702  007CB8  C01A  F004         	movff	_main$981+3,___lmul@multiplier+3
   703  007CBC  0E70               	movlw	112
   704  007CBE  6E05               	movwf	___lmul@multiplicand^0,c
   705  007CC0  0E17               	movlw	23
   706  007CC2  6E06               	movwf	(___lmul@multiplicand+1)^0,c
   707  007CC4  0E00               	movlw	0
   708  007CC6  6E07               	movwf	(___lmul@multiplicand+2)^0,c
   709  007CC8  0E00               	movlw	0
   710  007CCA  6E08               	movwf	(___lmul@multiplicand+3)^0,c
   711  007CCC  EC50  F036         	call	___lmul	;wreg free
   712  007CD0  C001  F02C         	movff	?___lmul,main@cont
   713  007CD4  C002  F02D         	movff	?___lmul+1,main@cont+1
   714  007CD8  C003  F02E         	movff	?___lmul+2,main@cont+2
   715  007CDC  C004  F02F         	movff	?___lmul+3,main@cont+3
   716                           
   717                           ;main.c: 218:         lcdInit();
   718  007CE0  EC2A  F037         	call	_lcdInit	;wreg free
   719  007CE4                     
   720                           ;main.c: 220:         (*(volatile __near unsigned char*)0xF95) = 0X00;
   721  007CE4  0E00               	movlw	0
   722  007CE6  6E95               	movwf	149,c	;volatile
   723  007CE8                     
   724                           ;main.c: 221:         (*(volatile __near unsigned char*)0xF83) = 0X00;
   725  007CE8  0E00               	movlw	0
   726  007CEA  6E83               	movwf	131,c	;volatile
   727  007CEC                     l241:
   728                           
   729                           ;main.c: 223:         lcdPosition(1, 3);
   730  007CEC  0E03               	movlw	3
   731  007CEE  6E09               	movwf	lcdPosition@coluna^0,c
   732  007CF0  0E01               	movlw	1
   733  007CF2  EC85  F036         	call	_lcdPosition
   734                           
   735                           ;main.c: 224:         lcdData('G');
   736  007CF6  0E47               	movlw	71
   737  007CF8  EC26  F036         	call	_lcdData
   738                           
   739                           ;main.c: 225:         lcdData('R');
   740  007CFC  0E52               	movlw	82
   741  007CFE  EC26  F036         	call	_lcdData
   742                           
   743                           ;main.c: 226:         lcdData('E');
   744  007D02  0E45               	movlw	69
   745  007D04  EC26  F036         	call	_lcdData
   746                           
   747                           ;main.c: 227:         lcdData('L');
   748  007D08  0E4C               	movlw	76
   749  007D0A  EC26  F036         	call	_lcdData
   750                           
   751                           ;main.c: 228:         lcdData('H');
   752  007D0E  0E48               	movlw	72
   753  007D10  EC26  F036         	call	_lcdData
   754                           
   755                           ;main.c: 229:         lcdData('A');
   756  007D14  0E41               	movlw	65
   757  007D16  EC26  F036         	call	_lcdData
   758                           
   759                           ;main.c: 230:         lcdData('N');
   760  007D1A  0E4E               	movlw	78
   761  007D1C  EC26  F036         	call	_lcdData
   762                           
   763                           ;main.c: 231:         lcdData('D');
   764  007D20  0E44               	movlw	68
   765  007D22  EC26  F036         	call	_lcdData
   766                           
   767                           ;main.c: 232:         lcdData('O');
   768  007D26  0E4F               	movlw	79
   769  007D28  EC26  F036         	call	_lcdData
   770                           
   771                           ;main.c: 234:         while (cont > 0){
   772  007D2C  EF4A  F03F         	goto	l2207
   773  007D30                     l2189:
   774                           
   775                           ;main.c: 235:             cont--;
   776  007D30  062C               	decf	main@cont^0,f,c
   777  007D32  0E00               	movlw	0
   778  007D34  5A2D               	subwfb	(main@cont+1)^0,f,c
   779  007D36  5A2E               	subwfb	(main@cont+2)^0,f,c
   780  007D38  5A2F               	subwfb	(main@cont+3)^0,f,c
   781  007D3A                     
   782                           ;main.c: 236:             lcdPosition(2, 5);
   783  007D3A  0E05               	movlw	5
   784  007D3C  6E09               	movwf	lcdPosition@coluna^0,c
   785  007D3E  0E02               	movlw	2
   786  007D40  EC85  F036         	call	_lcdPosition
   787  007D44                     
   788                           ;main.c: 238:             lcdData((cont / 60000) % 6 + 48);
   789  007D44  0E60               	movlw	96
   790  007D46  6E05               	movwf	___lldiv@divisor^0,c
   791  007D48  0EEA               	movlw	234
   792  007D4A  6E06               	movwf	(___lldiv@divisor+1)^0,c
   793  007D4C  0E00               	movlw	0
   794  007D4E  6E07               	movwf	(___lldiv@divisor+2)^0,c
   795  007D50  0E00               	movlw	0
   796  007D52  6E08               	movwf	(___lldiv@divisor+3)^0,c
   797  007D54  C02C  F001         	movff	main@cont,___lldiv@dividend
   798  007D58  C02D  F002         	movff	main@cont+1,___lldiv@dividend+1
   799  007D5C  C02E  F003         	movff	main@cont+2,___lldiv@dividend+2
   800  007D60  C02F  F004         	movff	main@cont+3,___lldiv@dividend+3
   801  007D64  EC63  F038         	call	___lldiv	;wreg free
   802  007D68  C001  F00E         	movff	?___lldiv,___llmod@dividend
   803  007D6C  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
   804  007D70  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
   805  007D74  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
   806  007D78  0E06               	movlw	6
   807  007D7A  6E12               	movwf	___llmod@divisor^0,c
   808  007D7C  0E00               	movlw	0
   809  007D7E  6E13               	movwf	(___llmod@divisor+1)^0,c
   810  007D80  0E00               	movlw	0
   811  007D82  6E14               	movwf	(___llmod@divisor+2)^0,c
   812  007D84  0E00               	movlw	0
   813  007D86  6E15               	movwf	(___llmod@divisor+3)^0,c
   814  007D88  EC1F  F038         	call	___llmod	;wreg free
   815  007D8C  500E               	movf	?___llmod^0,w,c
   816  007D8E  0F30               	addlw	48
   817  007D90  EC26  F036         	call	_lcdData
   818  007D94                     
   819                           ;main.c: 239:             lcdData((cont / 6000) % 10 + 48);
   820  007D94  0E70               	movlw	112
   821  007D96  6E05               	movwf	___lldiv@divisor^0,c
   822  007D98  0E17               	movlw	23
   823  007D9A  6E06               	movwf	(___lldiv@divisor+1)^0,c
   824  007D9C  0E00               	movlw	0
   825  007D9E  6E07               	movwf	(___lldiv@divisor+2)^0,c
   826  007DA0  0E00               	movlw	0
   827  007DA2  6E08               	movwf	(___lldiv@divisor+3)^0,c
   828  007DA4  C02C  F001         	movff	main@cont,___lldiv@dividend
   829  007DA8  C02D  F002         	movff	main@cont+1,___lldiv@dividend+1
   830  007DAC  C02E  F003         	movff	main@cont+2,___lldiv@dividend+2
   831  007DB0  C02F  F004         	movff	main@cont+3,___lldiv@dividend+3
   832  007DB4  EC63  F038         	call	___lldiv	;wreg free
   833  007DB8  C001  F00E         	movff	?___lldiv,___llmod@dividend
   834  007DBC  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
   835  007DC0  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
   836  007DC4  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
   837  007DC8  0E0A               	movlw	10
   838  007DCA  6E12               	movwf	___llmod@divisor^0,c
   839  007DCC  0E00               	movlw	0
   840  007DCE  6E13               	movwf	(___llmod@divisor+1)^0,c
   841  007DD0  0E00               	movlw	0
   842  007DD2  6E14               	movwf	(___llmod@divisor+2)^0,c
   843  007DD4  0E00               	movlw	0
   844  007DD6  6E15               	movwf	(___llmod@divisor+3)^0,c
   845  007DD8  EC1F  F038         	call	___llmod	;wreg free
   846  007DDC  500E               	movf	?___llmod^0,w,c
   847  007DDE  0F30               	addlw	48
   848  007DE0  EC26  F036         	call	_lcdData
   849  007DE4                     
   850                           ;main.c: 240:             lcdData(':');
   851  007DE4  0E3A               	movlw	58
   852  007DE6  EC26  F036         	call	_lcdData
   853  007DEA                     
   854                           ;main.c: 241:             lcdData((cont / 1000) % 6 + 48);
   855  007DEA  0EE8               	movlw	232
   856  007DEC  6E05               	movwf	___lldiv@divisor^0,c
   857  007DEE  0E03               	movlw	3
   858  007DF0  6E06               	movwf	(___lldiv@divisor+1)^0,c
   859  007DF2  0E00               	movlw	0
   860  007DF4  6E07               	movwf	(___lldiv@divisor+2)^0,c
   861  007DF6  0E00               	movlw	0
   862  007DF8  6E08               	movwf	(___lldiv@divisor+3)^0,c
   863  007DFA  C02C  F001         	movff	main@cont,___lldiv@dividend
   864  007DFE  C02D  F002         	movff	main@cont+1,___lldiv@dividend+1
   865  007E02  C02E  F003         	movff	main@cont+2,___lldiv@dividend+2
   866  007E06  C02F  F004         	movff	main@cont+3,___lldiv@dividend+3
   867  007E0A  EC63  F038         	call	___lldiv	;wreg free
   868  007E0E  C001  F00E         	movff	?___lldiv,___llmod@dividend
   869  007E12  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
   870  007E16  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
   871  007E1A  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
   872  007E1E  0E06               	movlw	6
   873  007E20  6E12               	movwf	___llmod@divisor^0,c
   874  007E22  0E00               	movlw	0
   875  007E24  6E13               	movwf	(___llmod@divisor+1)^0,c
   876  007E26  0E00               	movlw	0
   877  007E28  6E14               	movwf	(___llmod@divisor+2)^0,c
   878  007E2A  0E00               	movlw	0
   879  007E2C  6E15               	movwf	(___llmod@divisor+3)^0,c
   880  007E2E  EC1F  F038         	call	___llmod	;wreg free
   881  007E32  500E               	movf	?___llmod^0,w,c
   882  007E34  0F30               	addlw	48
   883  007E36  EC26  F036         	call	_lcdData
   884  007E3A                     
   885                           ;main.c: 242:             lcdData((cont / 100) % 10 + 48);
   886  007E3A  0E64               	movlw	100
   887  007E3C  6E05               	movwf	___lldiv@divisor^0,c
   888  007E3E  0E00               	movlw	0
   889  007E40  6E06               	movwf	(___lldiv@divisor+1)^0,c
   890  007E42  0E00               	movlw	0
   891  007E44  6E07               	movwf	(___lldiv@divisor+2)^0,c
   892  007E46  0E00               	movlw	0
   893  007E48  6E08               	movwf	(___lldiv@divisor+3)^0,c
   894  007E4A  C02C  F001         	movff	main@cont,___lldiv@dividend
   895  007E4E  C02D  F002         	movff	main@cont+1,___lldiv@dividend+1
   896  007E52  C02E  F003         	movff	main@cont+2,___lldiv@dividend+2
   897  007E56  C02F  F004         	movff	main@cont+3,___lldiv@dividend+3
   898  007E5A  EC63  F038         	call	___lldiv	;wreg free
   899  007E5E  C001  F00E         	movff	?___lldiv,___llmod@dividend
   900  007E62  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
   901  007E66  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
   902  007E6A  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
   903  007E6E  0E0A               	movlw	10
   904  007E70  6E12               	movwf	___llmod@divisor^0,c
   905  007E72  0E00               	movlw	0
   906  007E74  6E13               	movwf	(___llmod@divisor+1)^0,c
   907  007E76  0E00               	movlw	0
   908  007E78  6E14               	movwf	(___llmod@divisor+2)^0,c
   909  007E7A  0E00               	movlw	0
   910  007E7C  6E15               	movwf	(___llmod@divisor+3)^0,c
   911  007E7E  EC1F  F038         	call	___llmod	;wreg free
   912  007E82  500E               	movf	?___llmod^0,w,c
   913  007E84  0F30               	addlw	48
   914  007E86  EC26  F036         	call	_lcdData
   915  007E8A                     
   916                           ;main.c: 245:            pwmInit();
   917  007E8A  ECA8  F035         	call	_pwmInit	;wreg free
   918  007E8E                     
   919                           ;main.c: 246:            pwmSet1(96);
   920  007E8E  0E60               	movlw	96
   921  007E90  ECBA  F036         	call	_pwmSet1
   922  007E94                     l2207:
   923                           
   924                           ;main.c: 234:         while (cont > 0){
   925  007E94  502C               	movf	main@cont^0,w,c
   926  007E96  102D               	iorwf	(main@cont+1)^0,w,c
   927  007E98  102E               	iorwf	(main@cont+2)^0,w,c
   928  007E9A  102F               	iorwf	(main@cont+3)^0,w,c
   929  007E9C  A4D8               	btfss	status,2,c
   930  007E9E  EF53  F03F         	goto	u2021
   931  007EA2  EF55  F03F         	goto	u2020
   932  007EA6                     u2021:
   933  007EA6  EF98  F03E         	goto	l2189
   934  007EAA                     u2020:
   935  007EAA                     
   936                           ;main.c: 249:             (*(volatile __near unsigned char*)0xF95) = 0b00000000;
   937  007EAA  0E00               	movlw	0
   938  007EAC  6E95               	movwf	149,c	;volatile
   939                           
   940                           ;main.c: 250:             posicao = 0b00000000;
   941  007EAE  0E00               	movlw	0
   942  007EB0  6E26               	movwf	main@posicao^0,c
   943                           
   944                           ;main.c: 251:             for (i = 0; i < 9; i++) {
   945  007EB2  0E00               	movlw	0
   946  007EB4  6E1C               	movwf	main@i^0,c
   947  007EB6                     l245:
   948                           
   949                           ;main.c: 252:             (*(volatile __near unsigned char*)0xF83) = posicao;
   950  007EB6  C026  FF83         	movff	main@posicao,3971	;volatile
   951  007EBA                     
   952                           ;main.c: 253:             tempo(3);
   953  007EBA  0E03               	movlw	3
   954  007EBC  ECA3  F037         	call	_tempo
   955  007EC0                     
   956                           ;main.c: 254:             aux = posicao + 1;
   957  007EC0  2826               	incf	main@posicao^0,w,c
   958  007EC2  6E1B               	movwf	main@aux^0,c
   959  007EC4                     
   960                           ;main.c: 255:             posicao = posicao + aux;
   961  007EC4  5026               	movf	main@posicao^0,w,c
   962  007EC6  241B               	addwf	main@aux^0,w,c
   963  007EC8  6E26               	movwf	main@posicao^0,c
   964  007ECA                     
   965                           ;main.c: 256:         }
   966  007ECA  2A1C               	incf	main@i^0,f,c
   967  007ECC  0E08               	movlw	8
   968  007ECE  641C               	cpfsgt	main@i^0,c
   969  007ED0  EF6C  F03F         	goto	u2031
   970  007ED4  EF6E  F03F         	goto	u2030
   971  007ED8                     u2031:
   972  007ED8  EF5B  F03F         	goto	l245
   973  007EDC                     u2030:
   974  007EDC                     
   975                           ;main.c: 258:         if(cont==0){
   976  007EDC  502C               	movf	main@cont^0,w,c
   977  007EDE  102D               	iorwf	(main@cont+1)^0,w,c
   978  007EE0  102E               	iorwf	(main@cont+2)^0,w,c
   979  007EE2  102F               	iorwf	(main@cont+3)^0,w,c
   980  007EE4  A4D8               	btfss	status,2,c
   981  007EE6  EF77  F03F         	goto	u2041
   982  007EEA  EF79  F03F         	goto	u2040
   983  007EEE                     u2041:
   984  007EEE  EF76  F03E         	goto	l241
   985  007EF2                     u2040:
   986  007EF2                     
   987                           ;main.c: 259:         pwmSet1(0);
   988  007EF2  0E00               	movlw	0
   989  007EF4  ECBA  F036         	call	_pwmSet1
   990  007EF8                     
   991                           ;main.c: 260:         lcdInit();
   992  007EF8  EC2A  F037         	call	_lcdInit	;wreg free
   993  007EFC                     
   994                           ;main.c: 262:         pwmFrequency(10000);
   995  007EFC  0E27               	movlw	39
   996  007EFE  6E10               	movwf	(pwmFrequency@freq+1)^0,c
   997  007F00  0E10               	movlw	16
   998  007F02  6E0F               	movwf	pwmFrequency@freq^0,c
   999  007F04  ECCC  F035         	call	_pwmFrequency	;wreg free
  1000  007F08                     
  1001                           ;main.c: 264:         for (k = 0; k < 3; k++) {
  1002  007F08  0E00               	movlw	0
  1003  007F0A  6E1D               	movwf	main@k^0,c
  1004  007F0C                     l2235:
  1005  007F0C  0E02               	movlw	2
  1006  007F0E  641D               	cpfsgt	main@k^0,c
  1007  007F10  EF8C  F03F         	goto	u2051
  1008  007F14  EF8E  F03F         	goto	u2050
  1009  007F18                     u2051:
  1010  007F18  EF90  F03F         	goto	l2239
  1011  007F1C                     u2050:
  1012  007F1C  EFB7  F03F         	goto	l2259
  1013  007F20                     l2239:
  1014                           
  1015                           ;main.c: 265:             for (j = 1; j > 0; j = j * 2) {
  1016  007F20  0E01               	movlw	1
  1017  007F22  6E2B               	movwf	main@j^0,c
  1018  007F24  502B               	movf	main@j^0,w,c
  1019  007F26  A4D8               	btfss	status,2,c
  1020  007F28  EF98  F03F         	goto	u2061
  1021  007F2C  EF9A  F03F         	goto	u2060
  1022  007F30                     u2061:
  1023  007F30  EF9C  F03F         	goto	l2243
  1024  007F34                     u2060:
  1025  007F34  EFB3  F03F         	goto	l2255
  1026  007F38                     l2243:
  1027                           
  1028                           ;main.c: 266:                 (((*(volatile __near unsigned char*)0xF94)) |= (1<<(1)));
  1029  007F38  8294               	bsf	148,1,c	;volatile
  1030  007F3A                     
  1031                           ;main.c: 267:                 (*(volatile __near unsigned char*)0xF81) = j;
  1032  007F3A  C02B  FF81         	movff	main@j,3969	;volatile
  1033  007F3E                     
  1034                           ;main.c: 268:                 (*(volatile __near unsigned char*)0xF83) = j;
  1035  007F3E  C02B  FF83         	movff	main@j,3971	;volatile
  1036  007F42                     
  1037                           ;main.c: 269:                 atraso_ms(15);
  1038  007F42  0E00               	movlw	0
  1039  007F44  6E02               	movwf	(atraso_ms@valor+1)^0,c
  1040  007F46  0E0F               	movlw	15
  1041  007F48  6E01               	movwf	atraso_ms@valor^0,c
  1042  007F4A  EC07  F036         	call	_atraso_ms	;wreg free
  1043  007F4E                     
  1044                           ;main.c: 270:             }
  1045  007F4E  502B               	movf	main@j^0,w,c
  1046  007F50  0D02               	mullw	2
  1047  007F52  CFF3 F02B          	movff	prodl,main@j
  1048  007F56  502B               	movf	main@j^0,w,c
  1049  007F58  A4D8               	btfss	status,2,c
  1050  007F5A  EFB1  F03F         	goto	u2071
  1051  007F5E  EFB3  F03F         	goto	u2070
  1052  007F62                     u2071:
  1053  007F62  EF9C  F03F         	goto	l2243
  1054  007F66                     u2070:
  1055  007F66                     l2255:
  1056                           
  1057                           ;main.c: 271:             (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<(1)));
  1058  007F66  9294               	bcf	148,1,c	;volatile
  1059                           
  1060                           ;main.c: 272:         }
  1061  007F68  2A1D               	incf	main@k^0,f,c
  1062  007F6A  EF86  F03F         	goto	l2235
  1063  007F6E                     l2259:
  1064                           
  1065                           ;main.c: 274:         (*(volatile __near unsigned char*)0xF81) = 0;
  1066  007F6E  0E00               	movlw	0
  1067  007F70  6E81               	movwf	129,c	;volatile
  1068                           
  1069                           ;main.c: 275:         (*(volatile __near unsigned char*)0xF83) = 0;
  1070  007F72  0E00               	movlw	0
  1071  007F74  6E83               	movwf	131,c	;volatile
  1072  007F76                     l2261:
  1073                           
  1074                           ;main.c: 280:         lcdPosition(1, 4);
  1075  007F76  0E04               	movlw	4
  1076  007F78  6E09               	movwf	lcdPosition@coluna^0,c
  1077  007F7A  0E01               	movlw	1
  1078  007F7C  EC85  F036         	call	_lcdPosition
  1079  007F80                     
  1080                           ;main.c: 281:         {;main.c: 282:         lcdData('P');
  1081  007F80  0E50               	movlw	80
  1082  007F82  EC26  F036         	call	_lcdData
  1083  007F86                     
  1084                           ;main.c: 283:         lcdData('r');
  1085  007F86  0E72               	movlw	114
  1086  007F88  EC26  F036         	call	_lcdData
  1087  007F8C                     
  1088                           ;main.c: 284:         lcdData('o');
  1089  007F8C  0E6F               	movlw	111
  1090  007F8E  EC26  F036         	call	_lcdData
  1091  007F92                     
  1092                           ;main.c: 285:         lcdData('c');
  1093  007F92  0E63               	movlw	99
  1094  007F94  EC26  F036         	call	_lcdData
  1095  007F98                     
  1096                           ;main.c: 286:         lcdData('e');
  1097  007F98  0E65               	movlw	101
  1098  007F9A  EC26  F036         	call	_lcdData
  1099  007F9E                     
  1100                           ;main.c: 287:         lcdData('s');
  1101  007F9E  0E73               	movlw	115
  1102  007FA0  EC26  F036         	call	_lcdData
  1103  007FA4                     
  1104                           ;main.c: 288:         lcdData('s');
  1105  007FA4  0E73               	movlw	115
  1106  007FA6  EC26  F036         	call	_lcdData
  1107  007FAA                     
  1108                           ;main.c: 289:         lcdData('o');
  1109  007FAA  0E6F               	movlw	111
  1110  007FAC  EC26  F036         	call	_lcdData
  1111  007FB0                     
  1112                           ;main.c: 290:         };main.c: 292:         lcdPosition(2, 3);
  1113  007FB0  0E03               	movlw	3
  1114  007FB2  6E09               	movwf	lcdPosition@coluna^0,c
  1115  007FB4  0E02               	movlw	2
  1116  007FB6  EC85  F036         	call	_lcdPosition
  1117  007FBA                     
  1118                           ;main.c: 293:         {;main.c: 294:         lcdData('F');
  1119  007FBA  0E46               	movlw	70
  1120  007FBC  EC26  F036         	call	_lcdData
  1121  007FC0                     
  1122                           ;main.c: 295:         lcdData('i');
  1123  007FC0  0E69               	movlw	105
  1124  007FC2  EC26  F036         	call	_lcdData
  1125  007FC6                     
  1126                           ;main.c: 296:         lcdData('n');
  1127  007FC6  0E6E               	movlw	110
  1128  007FC8  EC26  F036         	call	_lcdData
  1129  007FCC                     
  1130                           ;main.c: 297:         lcdData('a');
  1131  007FCC  0E61               	movlw	97
  1132  007FCE  EC26  F036         	call	_lcdData
  1133  007FD2                     
  1134                           ;main.c: 298:         lcdData('l');
  1135  007FD2  0E6C               	movlw	108
  1136  007FD4  EC26  F036         	call	_lcdData
  1137  007FD8                     
  1138                           ;main.c: 299:         lcdData('i');
  1139  007FD8  0E69               	movlw	105
  1140  007FDA  EC26  F036         	call	_lcdData
  1141  007FDE                     
  1142                           ;main.c: 300:         lcdData('z');
  1143  007FDE  0E7A               	movlw	122
  1144  007FE0  EC26  F036         	call	_lcdData
  1145  007FE4                     
  1146                           ;main.c: 301:         lcdData('a');
  1147  007FE4  0E61               	movlw	97
  1148  007FE6  EC26  F036         	call	_lcdData
  1149  007FEA                     
  1150                           ;main.c: 302:         lcdData('d');
  1151  007FEA  0E64               	movlw	100
  1152  007FEC  EC26  F036         	call	_lcdData
  1153  007FF0                     
  1154                           ;main.c: 303:         lcdData('o');
  1155  007FF0  0E6F               	movlw	111
  1156  007FF2  EC26  F036         	call	_lcdData
  1157  007FF6                     
  1158                           ;main.c: 305:         };main.c: 306:         (*(volatile __near unsigned char*)0xF83) = 
      +                          0xFF;
  1159  007FF6  6883               	setf	131,c	;volatile
  1160                           
  1161                           ;main.c: 307:         }
  1162  007FF8  EFBB  F03F         	goto	l2261
  1163  007FFC  EF00  F000         	goto	start
  1164  008000                     __end_of_main:
  1165                           	callstack 0
  1166                           
  1167 ;; *************** function _tempo *****************
  1168 ;; Defined at:
  1169 ;;		line 4 in file "delay.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;  x               1    wreg     unsigned char 
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  x               1    0[COMRAM] unsigned char 
  1174 ;;  m               1    4[COMRAM] volatile unsigned char 
  1175 ;;  k               1    3[COMRAM] volatile unsigned char 
  1176 ;;  j               1    2[COMRAM] volatile unsigned char 
  1177 ;;  n               1    1[COMRAM] volatile unsigned char 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, status,2, status,0
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1187 ;;      Params:         0       0       0       0       0       0       0
  1188 ;;      Locals:         5       0       0       0       0       0       0
  1189 ;;      Temps:          0       0       0       0       0       0       0
  1190 ;;      Totals:         5       0       0       0       0       0       0
  1191 ;;Total ram usage:        5 bytes
  1192 ;; Hardware stack levels used: 1
  1193 ;; This function calls:
  1194 ;;		Nothing
  1195 ;; This function is called by:
  1196 ;;		_main
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           	psect	text1
  1201  006F46                     __ptext1:
  1202                           	callstack 0
  1203  006F46                     _tempo:
  1204                           	callstack 30
  1205                           
  1206                           ;incstack = 0
  1207                           ;tempo@x stored from wreg
  1208  006F46  6E01               	movwf	tempo@x^0,c
  1209  006F48                     
  1210                           ;delay.c: 5:     volatile unsigned char j, k, m, n;;delay.c: 6:     for (n = 0; n < x; n
      +                          ++) {
  1211  006F48  0E00               	movlw	0
  1212  006F4A  6E02               	movwf	tempo@n^0,c	;volatile
  1213  006F4C  EFD6  F037         	goto	l2025
  1214  006F50                     l1993:
  1215                           
  1216                           ;delay.c: 7:         for (m = 0; m < 100; m++) {
  1217  006F50  0E00               	movlw	0
  1218  006F52  6E05               	movwf	tempo@m^0,c	;volatile
  1219  006F54                     l1995:
  1220  006F54  0E63               	movlw	99
  1221  006F56  6405               	cpfsgt	tempo@m^0,c	;volatile
  1222  006F58  EFB0  F037         	goto	u1791
  1223  006F5C  EFB2  F037         	goto	u1790
  1224  006F60                     u1791:
  1225  006F60  EFB4  F037         	goto	l1999
  1226  006F64                     u1790:
  1227  006F64  EFD5  F037         	goto	l2023
  1228  006F68                     l1999:
  1229                           
  1230                           ;delay.c: 8:             for (j = 0; j < 41; j++) {
  1231  006F68  0E00               	movlw	0
  1232  006F6A  6E03               	movwf	tempo@j^0,c	;volatile
  1233  006F6C                     l2001:
  1234  006F6C  0E28               	movlw	40
  1235  006F6E  6403               	cpfsgt	tempo@j^0,c	;volatile
  1236  006F70  EFBC  F037         	goto	u1801
  1237  006F74  EFBE  F037         	goto	u1800
  1238  006F78                     u1801:
  1239  006F78  EFC0  F037         	goto	l2005
  1240  006F7C                     u1800:
  1241  006F7C  EFD2  F037         	goto	l2019
  1242  006F80                     l2005:
  1243                           
  1244                           ;delay.c: 9:                 for (k = 0; k < 3; k++);
  1245  006F80  0E00               	movlw	0
  1246  006F82  6E04               	movwf	tempo@k^0,c	;volatile
  1247  006F84                     l2007:
  1248  006F84  0E02               	movlw	2
  1249  006F86  6404               	cpfsgt	tempo@k^0,c	;volatile
  1250  006F88  EFC8  F037         	goto	u1811
  1251  006F8C  EFCA  F037         	goto	u1810
  1252  006F90                     u1811:
  1253  006F90  EFCC  F037         	goto	l2011
  1254  006F94                     u1810:
  1255  006F94  EFCF  F037         	goto	l2015
  1256  006F98                     l2011:
  1257  006F98  2A04               	incf	tempo@k^0,f,c	;volatile
  1258  006F9A  EFC2  F037         	goto	l2007
  1259  006F9E                     l2015:
  1260                           
  1261                           ;delay.c: 10:             }
  1262  006F9E  2A03               	incf	tempo@j^0,f,c	;volatile
  1263  006FA0  EFB6  F037         	goto	l2001
  1264  006FA4                     l2019:
  1265                           
  1266                           ;delay.c: 11:         }
  1267  006FA4  2A05               	incf	tempo@m^0,f,c	;volatile
  1268  006FA6  EFAA  F037         	goto	l1995
  1269  006FAA                     l2023:
  1270                           
  1271                           ;delay.c: 12:     }
  1272  006FAA  2A02               	incf	tempo@n^0,f,c	;volatile
  1273  006FAC                     l2025:
  1274  006FAC  5001               	movf	tempo@x^0,w,c
  1275  006FAE  5C02               	subwf	tempo@n^0,w,c	;volatile
  1276  006FB0  A0D8               	btfss	status,0,c
  1277  006FB2  EFDD  F037         	goto	u1821
  1278  006FB6  EFDF  F037         	goto	u1820
  1279  006FBA                     u1821:
  1280  006FBA  EFA8  F037         	goto	l1993
  1281  006FBE                     u1820:
  1282  006FBE  0012               	return		;funcret
  1283  006FC0                     __end_of_tempo:
  1284                           	callstack 0
  1285                           
  1286 ;; *************** function _pwmSet1 *****************
  1287 ;; Defined at:
  1288 ;;		line 23 in file "pwm.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;  porcento        1    wreg     unsigned char 
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;  porcento        1    9[COMRAM] unsigned char 
  1293 ;;  val             2   10[COMRAM] unsigned int 
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1303 ;;      Params:         0       0       0       0       0       0       0
  1304 ;;      Locals:         3       0       0       0       0       0       0
  1305 ;;      Temps:          2       0       0       0       0       0       0
  1306 ;;      Totals:         5       0       0       0       0       0       0
  1307 ;;Total ram usage:        5 bytes
  1308 ;; Hardware stack levels used: 1
  1309 ;; Hardware stack levels required when called: 1
  1310 ;; This function calls:
  1311 ;;		___lwdiv
  1312 ;;		___wmul
  1313 ;; This function is called by:
  1314 ;;		_main
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           	psect	text2
  1319  006D74                     __ptext2:
  1320                           	callstack 0
  1321  006D74                     _pwmSet1:
  1322                           	callstack 29
  1323                           
  1324                           ;incstack = 0
  1325                           ;pwmSet1@porcento stored from wreg
  1326  006D74  6E0A               	movwf	pwmSet1@porcento^0,c
  1327  006D76                     
  1328                           ;pwm.c: 23: void pwmSet1(unsigned char porcento);pwm.c: 24: {;pwm.c: 30:  unsigned int v
      +                          al = ((unsigned int)porcento) *((*(volatile __near unsigned char*)0xFCB)+1);
  1329  006D76  0E01               	movlw	1
  1330  006D78  24CB               	addwf	203,w,c	;volatile
  1331  006D7A  6E01               	movwf	___wmul@multiplier^0,c
  1332  006D7C  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1333  006D7E  0E00               	movlw	0
  1334  006D80  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  1335  006D82  C00A  F003         	movff	pwmSet1@porcento,___wmul@multiplicand
  1336  006D86  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  1337  006D88  ECDF  F035         	call	___wmul	;wreg free
  1338  006D8C  C001  F00B         	movff	?___wmul,pwmSet1@val
  1339  006D90  C002  F00C         	movff	?___wmul+1,pwmSet1@val+1
  1340  006D94                     
  1341                           ;pwm.c: 31:  val = val / 25;
  1342  006D94  C00B  F001         	movff	pwmSet1@val,___lwdiv@dividend
  1343  006D98  C00C  F002         	movff	pwmSet1@val+1,___lwdiv@dividend+1
  1344  006D9C  0E00               	movlw	0
  1345  006D9E  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1346  006DA0  0E19               	movlw	25
  1347  006DA2  6E03               	movwf	___lwdiv@divisor^0,c
  1348  006DA4  ECF0  F036         	call	___lwdiv	;wreg free
  1349  006DA8  C001  F00B         	movff	?___lwdiv,pwmSet1@val
  1350  006DAC  C002  F00C         	movff	?___lwdiv+1,pwmSet1@val+1
  1351  006DB0                     
  1352                           ;pwm.c: 33:  val &= 0x03ff;
  1353  006DB0  0EFF               	movlw	255
  1354  006DB2  160B               	andwf	pwmSet1@val^0,f,c
  1355  006DB4  0E03               	movlw	3
  1356  006DB6  160C               	andwf	(pwmSet1@val+1)^0,f,c
  1357  006DB8                     
  1358                           ;pwm.c: 35:  (*(volatile __near unsigned char*)0xFBE) = val >> 2;
  1359  006DB8  C00B  F008         	movff	pwmSet1@val,??_pwmSet1
  1360  006DBC  C00C  F009         	movff	pwmSet1@val+1,??_pwmSet1+1
  1361  006DC0  90D8               	bcf	status,0,c
  1362  006DC2  3209               	rrcf	(??_pwmSet1+1)^0,f,c
  1363  006DC4  3208               	rrcf	??_pwmSet1^0,f,c
  1364  006DC6  90D8               	bcf	status,0,c
  1365  006DC8  3209               	rrcf	(??_pwmSet1+1)^0,f,c
  1366  006DCA  3208               	rrcf	??_pwmSet1^0,f,c
  1367  006DCC  5008               	movf	??_pwmSet1^0,w,c
  1368  006DCE  6EBE               	movwf	190,c	;volatile
  1369  006DD0                     
  1370                           ;pwm.c: 37:  (*(volatile __near unsigned char*)0xFBD) |= (val & 0x0003) << 4;
  1371  006DD0  C00B  F008         	movff	pwmSet1@val,??_pwmSet1
  1372  006DD4  0E03               	movlw	3
  1373  006DD6  1608               	andwf	??_pwmSet1^0,f,c
  1374  006DD8  3808               	swapf	??_pwmSet1^0,w,c
  1375  006DDA  0BF0               	andlw	240
  1376  006DDC  12BD               	iorwf	189,f,c	;volatile
  1377  006DDE  0012               	return		;funcret
  1378  006DE0                     __end_of_pwmSet1:
  1379                           	callstack 0
  1380                           
  1381 ;; *************** function ___wmul *****************
  1382 ;; Defined at:
  1383 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  multiplier      2    0[COMRAM] unsigned int 
  1386 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  product         2    4[COMRAM] unsigned int 
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  2    0[COMRAM] unsigned int 
  1391 ;; Registers used:
  1392 ;;		wreg, status,2, status,0, prodl, prodh
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1398 ;;      Params:         4       0       0       0       0       0       0
  1399 ;;      Locals:         2       0       0       0       0       0       0
  1400 ;;      Temps:          0       0       0       0       0       0       0
  1401 ;;      Totals:         6       0       0       0       0       0       0
  1402 ;;Total ram usage:        6 bytes
  1403 ;; Hardware stack levels used: 1
  1404 ;; This function calls:
  1405 ;;		Nothing
  1406 ;; This function is called by:
  1407 ;;		_pwmSet1
  1408 ;;		_pwmSet2
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text3
  1413  006BBE                     __ptext3:
  1414                           	callstack 0
  1415  006BBE                     ___wmul:
  1416                           	callstack 29
  1417  006BBE  5001               	movf	___wmul@multiplier^0,w,c
  1418  006BC0  0203               	mulwf	___wmul@multiplicand^0,c
  1419  006BC2  CFF3 F005          	movff	prodl,___wmul@product
  1420  006BC6  CFF4 F006          	movff	prodh,___wmul@product+1
  1421  006BCA  5001               	movf	___wmul@multiplier^0,w,c
  1422  006BCC  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1423  006BCE  50F3               	movf	243,w,c
  1424  006BD0  2606               	addwf	(___wmul@product+1)^0,f,c
  1425  006BD2  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1426  006BD4  0203               	mulwf	___wmul@multiplicand^0,c
  1427  006BD6  50F3               	movf	243,w,c
  1428  006BD8  2606               	addwf	(___wmul@product+1)^0,f,c
  1429  006BDA  C005  F001         	movff	___wmul@product,?___wmul
  1430  006BDE  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1431  006BE2  0012               	return		;funcret
  1432  006BE4                     __end_of___wmul:
  1433                           	callstack 0
  1434                           
  1435 ;; *************** function ___lwdiv *****************
  1436 ;; Defined at:
  1437 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;  dividend        2    0[COMRAM] unsigned int 
  1440 ;;  divisor         2    2[COMRAM] unsigned int 
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;  quotient        2    4[COMRAM] unsigned int 
  1443 ;;  counter         1    6[COMRAM] unsigned char 
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  2    0[COMRAM] unsigned int 
  1446 ;; Registers used:
  1447 ;;		wreg, status,2, status,0
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1453 ;;      Params:         4       0       0       0       0       0       0
  1454 ;;      Locals:         3       0       0       0       0       0       0
  1455 ;;      Temps:          0       0       0       0       0       0       0
  1456 ;;      Totals:         7       0       0       0       0       0       0
  1457 ;;Total ram usage:        7 bytes
  1458 ;; Hardware stack levels used: 1
  1459 ;; This function calls:
  1460 ;;		Nothing
  1461 ;; This function is called by:
  1462 ;;		_pwmSet1
  1463 ;;		_pwmSet2
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text4
  1468  006DE0                     __ptext4:
  1469                           	callstack 0
  1470  006DE0                     ___lwdiv:
  1471                           	callstack 29
  1472  006DE0  0E00               	movlw	0
  1473  006DE2  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1474  006DE4  0E00               	movlw	0
  1475  006DE6  6E05               	movwf	___lwdiv@quotient^0,c
  1476  006DE8  5003               	movf	___lwdiv@divisor^0,w,c
  1477  006DEA  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1478  006DEC  B4D8               	btfsc	status,2,c
  1479  006DEE  EFFB  F036         	goto	u1651
  1480  006DF2  EFFD  F036         	goto	u1650
  1481  006DF6                     u1651:
  1482  006DF6  EF25  F037         	goto	l759
  1483  006DFA                     u1650:
  1484  006DFA  0E01               	movlw	1
  1485  006DFC  6E07               	movwf	___lwdiv@counter^0,c
  1486  006DFE  EF05  F037         	goto	l1919
  1487  006E02                     l1917:
  1488  006E02  90D8               	bcf	status,0,c
  1489  006E04  3603               	rlcf	___lwdiv@divisor^0,f,c
  1490  006E06  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1491  006E08  2A07               	incf	___lwdiv@counter^0,f,c
  1492  006E0A                     l1919:
  1493  006E0A  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1494  006E0C  EF0A  F037         	goto	u1661
  1495  006E10  EF0C  F037         	goto	u1660
  1496  006E14                     u1661:
  1497  006E14  EF01  F037         	goto	l1917
  1498  006E18                     u1660:
  1499  006E18                     l1921:
  1500  006E18  90D8               	bcf	status,0,c
  1501  006E1A  3605               	rlcf	___lwdiv@quotient^0,f,c
  1502  006E1C  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1503  006E1E  5003               	movf	___lwdiv@divisor^0,w,c
  1504  006E20  5C01               	subwf	___lwdiv@dividend^0,w,c
  1505  006E22  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1506  006E24  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1507  006E26  A0D8               	btfss	status,0,c
  1508  006E28  EF18  F037         	goto	u1671
  1509  006E2C  EF1A  F037         	goto	u1670
  1510  006E30                     u1671:
  1511  006E30  EF1F  F037         	goto	l1929
  1512  006E34                     u1670:
  1513  006E34  5003               	movf	___lwdiv@divisor^0,w,c
  1514  006E36  5E01               	subwf	___lwdiv@dividend^0,f,c
  1515  006E38  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1516  006E3A  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1517  006E3C  8005               	bsf	___lwdiv@quotient^0,0,c
  1518  006E3E                     l1929:
  1519  006E3E  90D8               	bcf	status,0,c
  1520  006E40  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1521  006E42  3203               	rrcf	___lwdiv@divisor^0,f,c
  1522  006E44  2E07               	decfsz	___lwdiv@counter^0,f,c
  1523  006E46  EF0C  F037         	goto	l1921
  1524  006E4A                     l759:
  1525  006E4A  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1526  006E4E  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1527  006E52  0012               	return		;funcret
  1528  006E54                     __end_of___lwdiv:
  1529                           	callstack 0
  1530                           
  1531 ;; *************** function _pwmInit *****************
  1532 ;; Defined at:
  1533 ;;		line 59 in file "pwm.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;		None
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;		None
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      void 
  1540 ;; Registers used:
  1541 ;;		wreg, status,2, status,0
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1547 ;;      Params:         0       0       0       0       0       0       0
  1548 ;;      Locals:         0       0       0       0       0       0       0
  1549 ;;      Temps:          0       0       0       0       0       0       0
  1550 ;;      Totals:         0       0       0       0       0       0       0
  1551 ;;Total ram usage:        0 bytes
  1552 ;; Hardware stack levels used: 1
  1553 ;; This function calls:
  1554 ;;		Nothing
  1555 ;; This function is called by:
  1556 ;;		_main
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           	psect	text5
  1561  006B50                     __ptext5:
  1562                           	callstack 0
  1563  006B50                     _pwmInit:
  1564                           	callstack 30
  1565  006B50                     
  1566                           ;pwm.c: 61:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<1));
  1567  006B50  9294               	bcf	148,1,c	;volatile
  1568                           
  1569                           ;pwm.c: 62:  (((*(volatile __near unsigned char*)0xF94)) &= ~(1<<2));
  1570  006B52  9494               	bcf	148,2,c	;volatile
  1571  006B54                     
  1572                           ;pwm.c: 64:  (*(volatile __near unsigned char*)0xFCA) |= 0b00000011;
  1573  006B54  0E03               	movlw	3
  1574  006B56  12CA               	iorwf	202,f,c	;volatile
  1575  006B58                     
  1576                           ;pwm.c: 65:  (((*(volatile __near unsigned char*)0xFCA)) |= (1<<2));
  1577  006B58  84CA               	bsf	202,2,c	;volatile
  1578                           
  1579                           ;pwm.c: 68:  (*(volatile __near unsigned char*)0xFBD) |= 0b00001100;
  1580  006B5A  0E0C               	movlw	12
  1581  006B5C  12BD               	iorwf	189,f,c	;volatile
  1582                           
  1583                           ;pwm.c: 69:  (*(volatile __near unsigned char*)0xFBA) |= 0b00001100;
  1584  006B5E  0E0C               	movlw	12
  1585  006B60  12BA               	iorwf	186,f,c	;volatile
  1586  006B62  0012               	return		;funcret
  1587  006B64                     __end_of_pwmInit:
  1588                           	callstack 0
  1589                           
  1590 ;; *************** function _pwmFrequency *****************
  1591 ;; Defined at:
  1592 ;;		line 52 in file "pwm.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;  freq            2   14[COMRAM] unsigned int 
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;		None
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      void 
  1599 ;; Registers used:
  1600 ;;		wreg, status,2, status,0, cstack
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1606 ;;      Params:         2       0       0       0       0       0       0
  1607 ;;      Locals:         0       0       0       0       0       0       0
  1608 ;;      Temps:          0       0       0       0       0       0       0
  1609 ;;      Totals:         2       0       0       0       0       0       0
  1610 ;;Total ram usage:        2 bytes
  1611 ;; Hardware stack levels used: 1
  1612 ;; Hardware stack levels required when called: 1
  1613 ;; This function calls:
  1614 ;;		___aldiv
  1615 ;; This function is called by:
  1616 ;;		_main
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           	psect	text6
  1621  006B98                     __ptext6:
  1622                           	callstack 0
  1623  006B98                     _pwmFrequency:
  1624                           	callstack 29
  1625  006B98                     
  1626                           ;pwm.c: 52: void pwmFrequency(unsigned int freq);pwm.c: 53: {;pwm.c: 56:  (*(volatile __
      +                          near unsigned char*)0xFCB) = (125000/(freq)) - 1;
  1627  006B98  0E48               	movlw	72
  1628  006B9A  6E01               	movwf	___aldiv@dividend^0,c
  1629  006B9C  0EE8               	movlw	232
  1630  006B9E  6E02               	movwf	(___aldiv@dividend+1)^0,c
  1631  006BA0  0E01               	movlw	1
  1632  006BA2  6E03               	movwf	(___aldiv@dividend+2)^0,c
  1633  006BA4  0E00               	movlw	0
  1634  006BA6  6E04               	movwf	(___aldiv@dividend+3)^0,c
  1635  006BA8  C00F  F005         	movff	pwmFrequency@freq,___aldiv@divisor
  1636  006BAC  C010  F006         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  1637  006BB0  6A07               	clrf	(___aldiv@divisor+2)^0,c
  1638  006BB2  6A08               	clrf	(___aldiv@divisor+3)^0,c
  1639  006BB4  EC33  F039         	call	___aldiv	;wreg free
  1640  006BB8  0401               	decf	?___aldiv^0,w,c
  1641  006BBA  6ECB               	movwf	203,c	;volatile
  1642  006BBC  0012               	return		;funcret
  1643  006BBE                     __end_of_pwmFrequency:
  1644                           	callstack 0
  1645                           
  1646 ;; *************** function ___aldiv *****************
  1647 ;; Defined at:
  1648 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;  dividend        4    0[COMRAM] long 
  1651 ;;  divisor         4    4[COMRAM] long 
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;  quotient        4   10[COMRAM] long 
  1654 ;;  sign            1    9[COMRAM] unsigned char 
  1655 ;;  counter         1    8[COMRAM] unsigned char 
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  4    0[COMRAM] long 
  1658 ;; Registers used:
  1659 ;;		wreg, status,2, status,0
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1665 ;;      Params:         8       0       0       0       0       0       0
  1666 ;;      Locals:         6       0       0       0       0       0       0
  1667 ;;      Temps:          0       0       0       0       0       0       0
  1668 ;;      Totals:        14       0       0       0       0       0       0
  1669 ;;Total ram usage:       14 bytes
  1670 ;; Hardware stack levels used: 1
  1671 ;; This function calls:
  1672 ;;		Nothing
  1673 ;; This function is called by:
  1674 ;;		_pwmFrequency
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text7
  1679  007266                     __ptext7:
  1680                           	callstack 0
  1681  007266                     ___aldiv:
  1682                           	callstack 29
  1683  007266  0E00               	movlw	0
  1684  007268  6E0A               	movwf	___aldiv@sign^0,c
  1685  00726A  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  1686  00726C  EF3C  F039         	goto	u1590
  1687  007270  EF3A  F039         	goto	u1591
  1688  007274                     u1591:
  1689  007274  EF46  F039         	goto	l1875
  1690  007278                     u1590:
  1691  007278  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  1692  00727A  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  1693  00727C  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  1694  00727E  6C05               	negf	___aldiv@divisor^0,c
  1695  007280  0E00               	movlw	0
  1696  007282  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  1697  007284  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  1698  007286  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  1699  007288  0E01               	movlw	1
  1700  00728A  6E0A               	movwf	___aldiv@sign^0,c
  1701  00728C                     l1875:
  1702  00728C  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  1703  00728E  EF4D  F039         	goto	u1600
  1704  007292  EF4B  F039         	goto	u1601
  1705  007296                     u1601:
  1706  007296  EF57  F039         	goto	l1881
  1707  00729A                     u1600:
  1708  00729A  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  1709  00729C  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  1710  00729E  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  1711  0072A0  6C01               	negf	___aldiv@dividend^0,c
  1712  0072A2  0E00               	movlw	0
  1713  0072A4  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  1714  0072A6  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  1715  0072A8  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  1716  0072AA  0E01               	movlw	1
  1717  0072AC  1A0A               	xorwf	___aldiv@sign^0,f,c
  1718  0072AE                     l1881:
  1719  0072AE  0E00               	movlw	0
  1720  0072B0  6E0B               	movwf	___aldiv@quotient^0,c
  1721  0072B2  0E00               	movlw	0
  1722  0072B4  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  1723  0072B6  0E00               	movlw	0
  1724  0072B8  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  1725  0072BA  0E00               	movlw	0
  1726  0072BC  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  1727  0072BE  5005               	movf	___aldiv@divisor^0,w,c
  1728  0072C0  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  1729  0072C2  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  1730  0072C4  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  1731  0072C6  B4D8               	btfsc	status,2,c
  1732  0072C8  EF68  F039         	goto	u1611
  1733  0072CC  EF6A  F039         	goto	u1610
  1734  0072D0                     u1611:
  1735  0072D0  EFA0  F039         	goto	l1903
  1736  0072D4                     u1610:
  1737  0072D4  0E01               	movlw	1
  1738  0072D6  6E09               	movwf	___aldiv@counter^0,c
  1739  0072D8  EF74  F039         	goto	l1889
  1740  0072DC                     l1887:
  1741  0072DC  90D8               	bcf	status,0,c
  1742  0072DE  3605               	rlcf	___aldiv@divisor^0,f,c
  1743  0072E0  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  1744  0072E2  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  1745  0072E4  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  1746  0072E6  2A09               	incf	___aldiv@counter^0,f,c
  1747  0072E8                     l1889:
  1748  0072E8  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  1749  0072EA  EF79  F039         	goto	u1621
  1750  0072EE  EF7B  F039         	goto	u1620
  1751  0072F2                     u1621:
  1752  0072F2  EF6E  F039         	goto	l1887
  1753  0072F6                     u1620:
  1754  0072F6                     l1891:
  1755  0072F6  90D8               	bcf	status,0,c
  1756  0072F8  360B               	rlcf	___aldiv@quotient^0,f,c
  1757  0072FA  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  1758  0072FC  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  1759  0072FE  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  1760  007300  5005               	movf	___aldiv@divisor^0,w,c
  1761  007302  5C01               	subwf	___aldiv@dividend^0,w,c
  1762  007304  5006               	movf	(___aldiv@divisor+1)^0,w,c
  1763  007306  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  1764  007308  5007               	movf	(___aldiv@divisor+2)^0,w,c
  1765  00730A  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  1766  00730C  5008               	movf	(___aldiv@divisor+3)^0,w,c
  1767  00730E  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  1768  007310  A0D8               	btfss	status,0,c
  1769  007312  EF8D  F039         	goto	u1631
  1770  007316  EF8F  F039         	goto	u1630
  1771  00731A                     u1631:
  1772  00731A  EF98  F039         	goto	l1899
  1773  00731E                     u1630:
  1774  00731E  5005               	movf	___aldiv@divisor^0,w,c
  1775  007320  5E01               	subwf	___aldiv@dividend^0,f,c
  1776  007322  5006               	movf	(___aldiv@divisor+1)^0,w,c
  1777  007324  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  1778  007326  5007               	movf	(___aldiv@divisor+2)^0,w,c
  1779  007328  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  1780  00732A  5008               	movf	(___aldiv@divisor+3)^0,w,c
  1781  00732C  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  1782  00732E  800B               	bsf	___aldiv@quotient^0,0,c
  1783  007330                     l1899:
  1784  007330  90D8               	bcf	status,0,c
  1785  007332  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  1786  007334  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  1787  007336  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  1788  007338  3205               	rrcf	___aldiv@divisor^0,f,c
  1789  00733A  2E09               	decfsz	___aldiv@counter^0,f,c
  1790  00733C  EF7B  F039         	goto	l1891
  1791  007340                     l1903:
  1792  007340  500A               	movf	___aldiv@sign^0,w,c
  1793  007342  B4D8               	btfsc	status,2,c
  1794  007344  EFA6  F039         	goto	u1641
  1795  007348  EFA8  F039         	goto	u1640
  1796  00734C                     u1641:
  1797  00734C  EFB0  F039         	goto	l1907
  1798  007350                     u1640:
  1799  007350  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  1800  007352  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  1801  007354  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  1802  007356  6C0B               	negf	___aldiv@quotient^0,c
  1803  007358  0E00               	movlw	0
  1804  00735A  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  1805  00735C  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  1806  00735E  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  1807  007360                     l1907:
  1808  007360  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  1809  007364  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  1810  007368  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  1811  00736C  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  1812  007370  0012               	return		;funcret
  1813  007372                     __end_of___aldiv:
  1814                           	callstack 0
  1815                           
  1816 ;; *************** function _kpRead *****************
  1817 ;; Defined at:
  1818 ;;		line 35 in file "keypad.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;		None
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;		None
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  2    0[COMRAM] unsigned int 
  1825 ;; Registers used:
  1826 ;;		None
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1832 ;;      Params:         2       0       0       0       0       0       0
  1833 ;;      Locals:         0       0       0       0       0       0       0
  1834 ;;      Temps:          0       0       0       0       0       0       0
  1835 ;;      Totals:         2       0       0       0       0       0       0
  1836 ;;Total ram usage:        2 bytes
  1837 ;; Hardware stack levels used: 1
  1838 ;; This function calls:
  1839 ;;		Nothing
  1840 ;; This function is called by:
  1841 ;;		_main
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           	psect	text8
  1846  006B34                     __ptext8:
  1847                           	callstack 0
  1848  006B34                     _kpRead:
  1849                           	callstack 30
  1850  006B34                     
  1851                           ;keypad.c: 36:     return valor;
  1852  006B34  C034  F001         	movff	_valor,?_kpRead
  1853  006B38  C035  F002         	movff	_valor+1,?_kpRead+1
  1854  006B3C  0012               	return		;funcret
  1855  006B3E                     __end_of_kpRead:
  1856                           	callstack 0
  1857                           
  1858 ;; *************** function _kpInit *****************
  1859 ;; Defined at:
  1860 ;;		line 87 in file "keypad.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;		None
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;		None
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  1    wreg      void 
  1867 ;; Registers used:
  1868 ;;		wreg, status,2, status,0
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1874 ;;      Params:         0       0       0       0       0       0       0
  1875 ;;      Locals:         0       0       0       0       0       0       0
  1876 ;;      Temps:          0       0       0       0       0       0       0
  1877 ;;      Totals:         0       0       0       0       0       0       0
  1878 ;;Total ram usage:        0 bytes
  1879 ;; Hardware stack levels used: 1
  1880 ;; This function calls:
  1881 ;;		Nothing
  1882 ;; This function is called by:
  1883 ;;		_main
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           	psect	text9
  1888  006B2A                     __ptext9:
  1889                           	callstack 0
  1890  006B2A                     _kpInit:
  1891                           	callstack 30
  1892  006B2A                     
  1893                           ;keypad.c: 89:     TRISB &= 0x07;
  1894  006B2A  0E07               	movlw	7
  1895  006B2C  1693               	andwf	147,f,c	;volatile
  1896                           
  1897                           ;keypad.c: 91:     TRISD |= 0x0f;
  1898  006B2E  0E0F               	movlw	15
  1899  006B30  1295               	iorwf	149,f,c	;volatile
  1900  006B32  0012               	return		;funcret
  1901  006B34                     __end_of_kpInit:
  1902                           	callstack 0
  1903                           
  1904 ;; *************** function _kpDebounce *****************
  1905 ;; Defined at:
  1906 ;;		line 39 in file "keypad.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;		None
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;  k               2    6[COMRAM] int 
  1911 ;;  i               1    9[COMRAM] unsigned char 
  1912 ;;  j               1    8[COMRAM] unsigned char 
  1913 ;;  old_D           1    5[COMRAM] unsigned char 
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  1    wreg      void 
  1916 ;; Registers used:
  1917 ;;		wreg, status,2, status,0, prodl, prodh
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1923 ;;      Params:         0       0       0       0       0       0       0
  1924 ;;      Locals:         5       0       0       0       0       0       0
  1925 ;;      Temps:          5       0       0       0       0       0       0
  1926 ;;      Totals:        10       0       0       0       0       0       0
  1927 ;;Total ram usage:       10 bytes
  1928 ;; Hardware stack levels used: 1
  1929 ;; This function calls:
  1930 ;;		Nothing
  1931 ;; This function is called by:
  1932 ;;		_main
  1933 ;; This function uses a non-reentrant model
  1934 ;;
  1935                           
  1936                           	psect	text10
  1937  0074C0                     __ptext10:
  1938                           	callstack 0
  1939  0074C0                     _kpDebounce:
  1940                           	callstack 30
  1941  0074C0                     
  1942                           ;keypad.c: 40:     unsigned char i, j;;keypad.c: 41:     static unsigned char tempo;;key
      +                          pad.c: 42:     static unsigned int valorNovo = 0x0000;;keypad.c: 43:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 46:     unsigned char old_D;;keypad.c: 47:     old_
      +                          D = PORTD;
  1943  0074C0  CF83 F006          	movff	3971,kpDebounce@old_D	;volatile
  1944  0074C4                     
  1945                           ;keypad.c: 51:     TRISD |= 0x0f;
  1946  0074C4  0E0F               	movlw	15
  1947  0074C6  1295               	iorwf	149,f,c	;volatile
  1948  0074C8                     
  1949                           ;keypad.c: 53:     for (i = 0; i < 3; i++) {
  1950  0074C8  0E00               	movlw	0
  1951  0074CA  6E0A               	movwf	kpDebounce@i^0,c
  1952  0074CC                     l1945:
  1953                           
  1954                           ;keypad.c: 55:         TRISB &= 0xF8;
  1955  0074CC  0EF8               	movlw	248
  1956  0074CE  1693               	andwf	147,f,c	;volatile
  1957                           
  1958                           ;keypad.c: 57:         ((TRISB) |= (1<<(i)));
  1959  0074D0  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  1960  0074D4  0E01               	movlw	1
  1961  0074D6  6E02               	movwf	(??_kpDebounce+1)^0,c
  1962  0074D8  2A01               	incf	??_kpDebounce^0,f,c
  1963  0074DA  EF71  F03A         	goto	u1684
  1964  0074DE                     u1685:
  1965  0074DE  90D8               	bcf	status,0,c
  1966  0074E0  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  1967  0074E2                     u1684:
  1968  0074E2  2E01               	decfsz	??_kpDebounce^0,f,c
  1969  0074E4  EF6F  F03A         	goto	u1685
  1970  0074E8  5002               	movf	(??_kpDebounce+1)^0,w,c
  1971  0074EA  1293               	iorwf	147,f,c	;volatile
  1972                           
  1973                           ;keypad.c: 59:         PORTB |= 0x07;
  1974  0074EC  0E07               	movlw	7
  1975  0074EE  1281               	iorwf	129,f,c	;volatile
  1976                           
  1977                           ;keypad.c: 60:         ((PORTB) &= ~(1<<(i)));
  1978  0074F0  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  1979  0074F4  0E01               	movlw	1
  1980  0074F6  6E02               	movwf	(??_kpDebounce+1)^0,c
  1981  0074F8  2A01               	incf	??_kpDebounce^0,f,c
  1982  0074FA  EF81  F03A         	goto	u1694
  1983  0074FE                     u1695:
  1984  0074FE  90D8               	bcf	status,0,c
  1985  007500  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  1986  007502                     u1694:
  1987  007502  2E01               	decfsz	??_kpDebounce^0,f,c
  1988  007504  EF7F  F03A         	goto	u1695
  1989  007508  5002               	movf	(??_kpDebounce+1)^0,w,c
  1990  00750A  0AFF               	xorlw	255
  1991  00750C  1681               	andwf	129,f,c	;volatile
  1992  00750E                     
  1993                           ;keypad.c: 63:         for (int k = 0; k < 10; k++);
  1994  00750E  0E00               	movlw	0
  1995  007510  6E08               	movwf	(kpDebounce@k+1)^0,c
  1996  007512  0E00               	movlw	0
  1997  007514  6E07               	movwf	kpDebounce@k^0,c
  1998  007516                     l1953:
  1999  007516  4A07               	infsnz	kpDebounce@k^0,f,c
  2000  007518  2A08               	incf	(kpDebounce@k+1)^0,f,c
  2001  00751A  BE08               	btfsc	(kpDebounce@k+1)^0,7,c
  2002  00751C  EF99  F03A         	goto	u1701
  2003  007520  5008               	movf	(kpDebounce@k+1)^0,w,c
  2004  007522  E109               	bnz	u1700
  2005  007524  0E0A               	movlw	10
  2006  007526  5C07               	subwf	kpDebounce@k^0,w,c
  2007  007528  A0D8               	btfss	status,0,c
  2008  00752A  EF99  F03A         	goto	u1701
  2009  00752E  EF9B  F03A         	goto	u1700
  2010  007532                     u1701:
  2011  007532  EF8B  F03A         	goto	l1953
  2012  007536                     u1700:
  2013  007536                     
  2014                           ;keypad.c: 66:         for (j = 0; j < 4; j++) {
  2015  007536  0E00               	movlw	0
  2016  007538  6E09               	movwf	kpDebounce@j^0,c
  2017  00753A                     l1963:
  2018                           
  2019                           ;keypad.c: 67:             if (!((PORTD) & (1<<(j)))) {
  2020  00753A  C009  F001         	movff	kpDebounce@j,??_kpDebounce
  2021  00753E  0E01               	movlw	1
  2022  007540  6E02               	movwf	(??_kpDebounce+1)^0,c
  2023  007542  2A01               	incf	??_kpDebounce^0,f,c
  2024  007544  EFA6  F03A         	goto	u1714
  2025  007548                     u1715:
  2026  007548  90D8               	bcf	status,0,c
  2027  00754A  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  2028  00754C                     u1714:
  2029  00754C  2E01               	decfsz	??_kpDebounce^0,f,c
  2030  00754E  EFA4  F03A         	goto	u1715
  2031  007552  5002               	movf	(??_kpDebounce+1)^0,w,c
  2032  007554  1483               	andwf	131,w,c	;volatile
  2033  007556  0900               	iorlw	0
  2034  007558  A4D8               	btfss	status,2,c
  2035  00755A  EFB1  F03A         	goto	u1721
  2036  00755E  EFB3  F03A         	goto	u1720
  2037  007562                     u1721:
  2038  007562  EFCB  F03A         	goto	l1967
  2039  007566                     u1720:
  2040  007566                     
  2041                           ;keypad.c: 68:                 ((valorNovo) |= (1<<((i * 4) + j)));
  2042  007566  500A               	movf	kpDebounce@i^0,w,c
  2043  007568  0D04               	mullw	4
  2044  00756A  50F3               	movf	243,w,c
  2045  00756C  2409               	addwf	kpDebounce@j^0,w,c
  2046  00756E  6E01               	movwf	??_kpDebounce^0,c
  2047  007570  0E01               	movlw	1
  2048  007572  6E02               	movwf	(??_kpDebounce+1)^0,c
  2049  007574  0E00               	movlw	0
  2050  007576  6E03               	movwf	(??_kpDebounce+2)^0,c
  2051  007578  2A01               	incf	??_kpDebounce^0,f,c
  2052  00757A  EFC2  F03A         	goto	u1734
  2053  00757E                     u1735:
  2054  00757E  90D8               	bcf	status,0,c
  2055  007580  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  2056  007582  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  2057  007584                     u1734:
  2058  007584  2E01               	decfsz	??_kpDebounce^0,f,c
  2059  007586  EFBF  F03A         	goto	u1735
  2060  00758A  5002               	movf	(??_kpDebounce+1)^0,w,c
  2061  00758C  1232               	iorwf	kpDebounce@valorNovo^0,f,c
  2062  00758E  5003               	movf	(??_kpDebounce+2)^0,w,c
  2063  007590  1233               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  2064                           
  2065                           ;keypad.c: 69:             } else {
  2066  007592  EFE5  F03A         	goto	l1969
  2067  007596                     l1967:
  2068                           
  2069                           ;keypad.c: 70:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  2070  007596  500A               	movf	kpDebounce@i^0,w,c
  2071  007598  0D04               	mullw	4
  2072  00759A  50F3               	movf	243,w,c
  2073  00759C  2409               	addwf	kpDebounce@j^0,w,c
  2074  00759E  6E01               	movwf	??_kpDebounce^0,c
  2075  0075A0  0E01               	movlw	1
  2076  0075A2  6E02               	movwf	(??_kpDebounce+1)^0,c
  2077  0075A4  0E00               	movlw	0
  2078  0075A6  6E03               	movwf	(??_kpDebounce+2)^0,c
  2079  0075A8  2A01               	incf	??_kpDebounce^0,f,c
  2080  0075AA  EFDA  F03A         	goto	u1744
  2081  0075AE                     u1745:
  2082  0075AE  90D8               	bcf	status,0,c
  2083  0075B0  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  2084  0075B2  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  2085  0075B4                     u1744:
  2086  0075B4  2E01               	decfsz	??_kpDebounce^0,f,c
  2087  0075B6  EFD7  F03A         	goto	u1745
  2088  0075BA  1C02               	comf	(??_kpDebounce+1)^0,w,c
  2089  0075BC  6E04               	movwf	(??_kpDebounce+3)^0,c
  2090  0075BE  1C03               	comf	(??_kpDebounce+2)^0,w,c
  2091  0075C0  6E05               	movwf	(??_kpDebounce+4)^0,c
  2092  0075C2  5004               	movf	(??_kpDebounce+3)^0,w,c
  2093  0075C4  1632               	andwf	kpDebounce@valorNovo^0,f,c
  2094  0075C6  5005               	movf	(??_kpDebounce+4)^0,w,c
  2095  0075C8  1633               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  2096  0075CA                     l1969:
  2097                           
  2098                           ;keypad.c: 72:         }
  2099  0075CA  2A09               	incf	kpDebounce@j^0,f,c
  2100  0075CC  0E03               	movlw	3
  2101  0075CE  6409               	cpfsgt	kpDebounce@j^0,c
  2102  0075D0  EFEC  F03A         	goto	u1751
  2103  0075D4  EFEE  F03A         	goto	u1750
  2104  0075D8                     u1751:
  2105  0075D8  EF9D  F03A         	goto	l1963
  2106  0075DC                     u1750:
  2107  0075DC                     
  2108                           ;keypad.c: 73:     }
  2109  0075DC  2A0A               	incf	kpDebounce@i^0,f,c
  2110  0075DE  0E02               	movlw	2
  2111  0075E0  640A               	cpfsgt	kpDebounce@i^0,c
  2112  0075E2  EFF5  F03A         	goto	u1761
  2113  0075E6  EFF7  F03A         	goto	u1760
  2114  0075EA                     u1761:
  2115  0075EA  EF66  F03A         	goto	l1945
  2116  0075EE                     u1760:
  2117  0075EE                     
  2118                           ;keypad.c: 74:     if (valorAntigo == valorNovo) {
  2119  0075EE  5032               	movf	kpDebounce@valorNovo^0,w,c
  2120  0075F0  1830               	xorwf	kpDebounce@valorAntigo^0,w,c
  2121  0075F2  E107               	bnz	u1771
  2122  0075F4  5033               	movf	(kpDebounce@valorNovo+1)^0,w,c
  2123  0075F6  1831               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  2124  0075F8  A4D8               	btfss	status,2,c
  2125  0075FA  EF01  F03B         	goto	u1771
  2126  0075FE  EF03  F03B         	goto	u1770
  2127  007602                     u1771:
  2128  007602  EF06  F03B         	goto	l1981
  2129  007606                     u1770:
  2130  007606                     
  2131                           ;keypad.c: 75:         tempo--;
  2132  007606  0636               	decf	kpDebounce@tempo^0,f,c
  2133                           
  2134                           ;keypad.c: 76:     } else {
  2135  007608  EF0C  F03B         	goto	l161
  2136  00760C                     l1981:
  2137                           
  2138                           ;keypad.c: 77:         tempo = 10;
  2139  00760C  0E0A               	movlw	10
  2140  00760E  6E36               	movwf	kpDebounce@tempo^0,c
  2141  007610                     
  2142                           ;keypad.c: 78:         valorAntigo = valorNovo;
  2143  007610  C032  F030         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  2144  007614  C033  F031         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  2145  007618                     l161:
  2146                           
  2147                           ;keypad.c: 80:     if (tempo == 0) {
  2148  007618  5036               	movf	kpDebounce@tempo^0,w,c
  2149  00761A  A4D8               	btfss	status,2,c
  2150  00761C  EF12  F03B         	goto	u1781
  2151  007620  EF14  F03B         	goto	u1780
  2152  007624                     u1781:
  2153  007624  EF18  F03B         	goto	l162
  2154  007628                     u1780:
  2155  007628                     
  2156                           ;keypad.c: 81:         valor = valorAntigo;
  2157  007628  C030  F034         	movff	kpDebounce@valorAntigo,_valor
  2158  00762C  C031  F035         	movff	kpDebounce@valorAntigo+1,_valor+1
  2159  007630                     l162:
  2160                           
  2161                           ;keypad.c: 83:     PORTD = old_D;
  2162  007630  C006  FF83         	movff	kpDebounce@old_D,3971	;volatile
  2163  007634                     
  2164                           ;keypad.c: 84:     TRISD = 0x00;
  2165  007634  0E00               	movlw	0
  2166  007636  6E95               	movwf	149,c	;volatile
  2167  007638  0012               	return		;funcret
  2168  00763A                     __end_of_kpDebounce:
  2169                           	callstack 0
  2170                           
  2171 ;; *************** function _inicio *****************
  2172 ;; Defined at:
  2173 ;;		line 17 in file "main.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;		None
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;		None
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		wreg, status,2, status,0, cstack
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2187 ;;      Params:         0       0       0       0       0       0       0
  2188 ;;      Locals:         0       0       0       0       0       0       0
  2189 ;;      Temps:          0       0       0       0       0       0       0
  2190 ;;      Totals:         0       0       0       0       0       0       0
  2191 ;;Total ram usage:        0 bytes
  2192 ;; Hardware stack levels used: 1
  2193 ;; Hardware stack levels required when called: 4
  2194 ;; This function calls:
  2195 ;;		_atraso_ms
  2196 ;;		_lcdData
  2197 ;;		_lcdInit
  2198 ;;		_lcdPosition
  2199 ;;		_lcd_cmd
  2200 ;; This function is called by:
  2201 ;;		_main
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           	psect	text11
  2206  006ECC                     __ptext11:
  2207                           	callstack 0
  2208  006ECC                     _inicio:
  2209                           	callstack 26
  2210  006ECC                     
  2211                           ;main.c: 18:     lcdInit();
  2212  006ECC  EC2A  F037         	call	_lcdInit	;wreg free
  2213                           
  2214                           ;main.c: 19:     lcdPosition(1, 5);
  2215  006ED0  0E05               	movlw	5
  2216  006ED2  6E09               	movwf	lcdPosition@coluna^0,c
  2217  006ED4  0E01               	movlw	1
  2218  006ED6  EC85  F036         	call	_lcdPosition
  2219                           
  2220                           ;main.c: 20:     lcdData('G');
  2221  006EDA  0E47               	movlw	71
  2222  006EDC  EC26  F036         	call	_lcdData
  2223                           
  2224                           ;main.c: 21:     lcdData('r');
  2225  006EE0  0E72               	movlw	114
  2226  006EE2  EC26  F036         	call	_lcdData
  2227                           
  2228                           ;main.c: 22:     lcdData('i');
  2229  006EE6  0E69               	movlw	105
  2230  006EE8  EC26  F036         	call	_lcdData
  2231                           
  2232                           ;main.c: 23:     lcdData('l');
  2233  006EEC  0E6C               	movlw	108
  2234  006EEE  EC26  F036         	call	_lcdData
  2235                           
  2236                           ;main.c: 24:     lcdData('l');
  2237  006EF2  0E6C               	movlw	108
  2238  006EF4  EC26  F036         	call	_lcdData
  2239                           
  2240                           ;main.c: 26:     lcdPosition(2, 4);
  2241  006EF8  0E04               	movlw	4
  2242  006EFA  6E09               	movwf	lcdPosition@coluna^0,c
  2243  006EFC  0E02               	movlw	2
  2244  006EFE  EC85  F036         	call	_lcdPosition
  2245                           
  2246                           ;main.c: 27:     lcdData('E');
  2247  006F02  0E45               	movlw	69
  2248  006F04  EC26  F036         	call	_lcdData
  2249                           
  2250                           ;main.c: 28:     lcdData('l');
  2251  006F08  0E6C               	movlw	108
  2252  006F0A  EC26  F036         	call	_lcdData
  2253                           
  2254                           ;main.c: 29:     lcdData('e');
  2255  006F0E  0E65               	movlw	101
  2256  006F10  EC26  F036         	call	_lcdData
  2257                           
  2258                           ;main.c: 30:     lcdData('t');
  2259  006F14  0E74               	movlw	116
  2260  006F16  EC26  F036         	call	_lcdData
  2261                           
  2262                           ;main.c: 31:     lcdData('r');
  2263  006F1A  0E72               	movlw	114
  2264  006F1C  EC26  F036         	call	_lcdData
  2265                           
  2266                           ;main.c: 32:     lcdData('i');
  2267  006F20  0E69               	movlw	105
  2268  006F22  EC26  F036         	call	_lcdData
  2269                           
  2270                           ;main.c: 33:     lcdData('c');
  2271  006F26  0E63               	movlw	99
  2272  006F28  EC26  F036         	call	_lcdData
  2273                           
  2274                           ;main.c: 34:     lcdData('o');
  2275  006F2C  0E6F               	movlw	111
  2276  006F2E  EC26  F036         	call	_lcdData
  2277                           
  2278                           ;main.c: 35:     atraso_ms(3500);
  2279  006F32  0E0D               	movlw	13
  2280  006F34  6E02               	movwf	(atraso_ms@valor+1)^0,c
  2281  006F36  0EAC               	movlw	172
  2282  006F38  6E01               	movwf	atraso_ms@valor^0,c
  2283  006F3A  EC07  F036         	call	_atraso_ms	;wreg free
  2284                           
  2285                           ;main.c: 36:     lcd_cmd(0x01);
  2286  006F3E  0E01               	movlw	1
  2287  006F40  ECF2  F035         	call	_lcd_cmd
  2288  006F44  0012               	return		;funcret
  2289  006F46                     __end_of_inicio:
  2290                           	callstack 0
  2291                           
  2292 ;; *************** function _lcd_cmd *****************
  2293 ;; Defined at:
  2294 ;;		line 41 in file "lcd.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;  val             1    wreg     unsigned char 
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;  val             1    5[COMRAM] unsigned char 
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  1    wreg      void 
  2301 ;; Registers used:
  2302 ;;		wreg, status,2, status,0, cstack
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2308 ;;      Params:         0       0       0       0       0       0       0
  2309 ;;      Locals:         1       0       0       0       0       0       0
  2310 ;;      Temps:          0       0       0       0       0       0       0
  2311 ;;      Totals:         1       0       0       0       0       0       0
  2312 ;;Total ram usage:        1 bytes
  2313 ;; Hardware stack levels used: 1
  2314 ;; Hardware stack levels required when called: 1
  2315 ;; This function calls:
  2316 ;;		_atraso_ms
  2317 ;;		_lcd_wr
  2318 ;; This function is called by:
  2319 ;;		_inicio
  2320 ;;		_lcd_init
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           	psect	text12
  2325  006BE4                     __ptext12:
  2326                           	callstack 0
  2327  006BE4                     _lcd_cmd:
  2328                           	callstack 28
  2329                           
  2330                           ;incstack = 0
  2331                           ;lcd_cmd@val stored from wreg
  2332  006BE4  6E06               	movwf	lcd_cmd@val^0,c
  2333  006BE6                     
  2334                           ;lcd.c: 42:     PORTEbits.RE1 = 1;
  2335  006BE6  8284               	bsf	132,1,c	;volatile
  2336  006BE8                     
  2337                           ;lcd.c: 43:     lcd_wr(val);
  2338  006BE8  5006               	movf	lcd_cmd@val^0,w,c
  2339  006BEA  EC91  F035         	call	_lcd_wr
  2340  006BEE                     
  2341                           ;lcd.c: 44:     PORTEbits.RE2 = 0;
  2342  006BEE  9484               	bcf	132,2,c	;volatile
  2343  006BF0                     
  2344                           ;lcd.c: 45:     atraso_ms(3);
  2345  006BF0  0E00               	movlw	0
  2346  006BF2  6E02               	movwf	(atraso_ms@valor+1)^0,c
  2347  006BF4  0E03               	movlw	3
  2348  006BF6  6E01               	movwf	atraso_ms@valor^0,c
  2349  006BF8  EC07  F036         	call	_atraso_ms	;wreg free
  2350  006BFC                     
  2351                           ;lcd.c: 46:     PORTEbits.RE1 = 0;
  2352  006BFC  9284               	bcf	132,1,c	;volatile
  2353  006BFE                     
  2354                           ;lcd.c: 47:     atraso_ms(3);
  2355  006BFE  0E00               	movlw	0
  2356  006C00  6E02               	movwf	(atraso_ms@valor+1)^0,c
  2357  006C02  0E03               	movlw	3
  2358  006C04  6E01               	movwf	atraso_ms@valor^0,c
  2359  006C06  EC07  F036         	call	_atraso_ms	;wreg free
  2360  006C0A                     
  2361                           ;lcd.c: 48:     PORTEbits.RE1 = 1;
  2362  006C0A  8284               	bsf	132,1,c	;volatile
  2363  006C0C  0012               	return		;funcret
  2364  006C0E                     __end_of_lcd_cmd:
  2365                           	callstack 0
  2366                           
  2367 ;; *************** function _lcd_wr *****************
  2368 ;; Defined at:
  2369 ;;		line 37 in file "lcd.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;  val             1    wreg     unsigned char 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  val             1    0[COMRAM] unsigned char 
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  1    wreg      void 
  2376 ;; Registers used:
  2377 ;;		wreg
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2383 ;;      Params:         0       0       0       0       0       0       0
  2384 ;;      Locals:         1       0       0       0       0       0       0
  2385 ;;      Temps:          0       0       0       0       0       0       0
  2386 ;;      Totals:         1       0       0       0       0       0       0
  2387 ;;Total ram usage:        1 bytes
  2388 ;; Hardware stack levels used: 1
  2389 ;; This function calls:
  2390 ;;		Nothing
  2391 ;; This function is called by:
  2392 ;;		_lcd_cmd
  2393 ;;		_lcd_dat
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           	psect	text13
  2398  006B22                     __ptext13:
  2399                           	callstack 0
  2400  006B22                     _lcd_wr:
  2401                           	callstack 28
  2402                           
  2403                           ;incstack = 0
  2404                           ;lcd_wr@val stored from wreg
  2405  006B22  6E01               	movwf	lcd_wr@val^0,c
  2406  006B24                     
  2407                           ;lcd.c: 38:     PORTD = val;
  2408  006B24  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  2409  006B28  0012               	return		;funcret
  2410  006B2A                     __end_of_lcd_wr:
  2411                           	callstack 0
  2412                           
  2413 ;; *************** function _atraso_ms *****************
  2414 ;; Defined at:
  2415 ;;		line 26 in file "atraso.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  valor           2    0[COMRAM] unsigned int 
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;  i               2    2[COMRAM] unsigned int 
  2420 ;;  j               1    4[COMRAM] unsigned char 
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      void 
  2423 ;; Registers used:
  2424 ;;		wreg, status,2, status,0
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2430 ;;      Params:         2       0       0       0       0       0       0
  2431 ;;      Locals:         3       0       0       0       0       0       0
  2432 ;;      Temps:          0       0       0       0       0       0       0
  2433 ;;      Totals:         5       0       0       0       0       0       0
  2434 ;;Total ram usage:        5 bytes
  2435 ;; Hardware stack levels used: 1
  2436 ;; This function calls:
  2437 ;;		Nothing
  2438 ;; This function is called by:
  2439 ;;		_lcd_cmd
  2440 ;;		_inicio
  2441 ;;		_main
  2442 ;;		_lcd_dat
  2443 ;;		_lcd_init
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           	psect	text14
  2448  006C0E                     __ptext14:
  2449                           	callstack 0
  2450  006C0E                     _atraso_ms:
  2451                           	callstack 28
  2452  006C0E                     
  2453                           ;atraso.c: 26: void atraso_ms(unsigned int valor);atraso.c: 27: {;atraso.c: 28: unsigned
      +                           int i;;atraso.c: 29: unsigned char j;;atraso.c: 31:  for (i =0; i< valor; i++)
  2454  006C0E  0E00               	movlw	0
  2455  006C10  6E04               	movwf	(atraso_ms@i+1)^0,c
  2456  006C12  0E00               	movlw	0
  2457  006C14  6E03               	movwf	atraso_ms@i^0,c
  2458  006C16  EF1A  F036         	goto	l1759
  2459  006C1A                     l1747:
  2460                           
  2461                           ;atraso.c: 32:  {;atraso.c: 34:   for (j =0 ; j < 200; j++)
  2462  006C1A  0E00               	movlw	0
  2463  006C1C  6E05               	movwf	atraso_ms@j^0,c
  2464  006C1E                     l1753:
  2465                           
  2466                           ;atraso.c: 35:    {;atraso.c: 38:    }
  2467  006C1E  2A05               	incf	atraso_ms@j^0,f,c
  2468  006C20  0EC7               	movlw	199
  2469  006C22  6405               	cpfsgt	atraso_ms@j^0,c
  2470  006C24  EF16  F036         	goto	u1511
  2471  006C28  EF18  F036         	goto	u1510
  2472  006C2C                     u1511:
  2473  006C2C  EF0F  F036         	goto	l1753
  2474  006C30                     u1510:
  2475  006C30                     
  2476                           ;atraso.c: 39:  }
  2477  006C30  4A03               	infsnz	atraso_ms@i^0,f,c
  2478  006C32  2A04               	incf	(atraso_ms@i+1)^0,f,c
  2479  006C34                     l1759:
  2480  006C34  5001               	movf	atraso_ms@valor^0,w,c
  2481  006C36  5C03               	subwf	atraso_ms@i^0,w,c
  2482  006C38  5002               	movf	(atraso_ms@valor+1)^0,w,c
  2483  006C3A  5804               	subwfb	(atraso_ms@i+1)^0,w,c
  2484  006C3C  A0D8               	btfss	status,0,c
  2485  006C3E  EF23  F036         	goto	u1521
  2486  006C42  EF25  F036         	goto	u1520
  2487  006C46                     u1521:
  2488  006C46  EF0D  F036         	goto	l1747
  2489  006C4A                     u1520:
  2490  006C4A  0012               	return		;funcret
  2491  006C4C                     __end_of_atraso_ms:
  2492                           	callstack 0
  2493                           
  2494 ;; *************** function _impressaoponto *****************
  2495 ;; Defined at:
  2496 ;;		line 109 in file "main.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;		None
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;		None
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, status,0, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2510 ;;      Params:         0       0       0       0       0       0       0
  2511 ;;      Locals:         0       0       0       0       0       0       0
  2512 ;;      Temps:          0       0       0       0       0       0       0
  2513 ;;      Totals:         0       0       0       0       0       0       0
  2514 ;;Total ram usage:        0 bytes
  2515 ;; Hardware stack levels used: 1
  2516 ;; Hardware stack levels required when called: 4
  2517 ;; This function calls:
  2518 ;;		_lcdData
  2519 ;;		_lcdInit
  2520 ;;		_lcdPosition
  2521 ;; This function is called by:
  2522 ;;		_main
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           	psect	text15
  2527  00716A                     __ptext15:
  2528                           	callstack 0
  2529  00716A                     _impressaoponto:
  2530                           	callstack 26
  2531  00716A                     
  2532                           ;main.c: 110:     lcdInit();
  2533  00716A  EC2A  F037         	call	_lcdInit	;wreg free
  2534                           
  2535                           ;main.c: 111:     lcdPosition(0, 0);
  2536  00716E  0E00               	movlw	0
  2537  007170  6E09               	movwf	lcdPosition@coluna^0,c
  2538  007172  0E00               	movlw	0
  2539  007174  EC85  F036         	call	_lcdPosition
  2540                           
  2541                           ;main.c: 112:     {;main.c: 113:         lcdData('7');
  2542  007178  0E37               	movlw	55
  2543  00717A  EC26  F036         	call	_lcdData
  2544                           
  2545                           ;main.c: 114:         lcdData('-');
  2546  00717E  0E2D               	movlw	45
  2547  007180  EC26  F036         	call	_lcdData
  2548                           
  2549                           ;main.c: 115:         lcdData('M');
  2550  007184  0E4D               	movlw	77
  2551  007186  EC26  F036         	call	_lcdData
  2552                           
  2553                           ;main.c: 116:         lcdData('a');
  2554  00718A  0E61               	movlw	97
  2555  00718C  EC26  F036         	call	_lcdData
  2556                           
  2557                           ;main.c: 117:         lcdData('l');
  2558  007190  0E6C               	movlw	108
  2559  007192  EC26  F036         	call	_lcdData
  2560                           
  2561                           ;main.c: 118:         lcdData(' ');
  2562  007196  0E20               	movlw	32
  2563  007198  EC26  F036         	call	_lcdData
  2564                           
  2565                           ;main.c: 119:         lcdData('p');
  2566  00719C  0E70               	movlw	112
  2567  00719E  EC26  F036         	call	_lcdData
  2568                           
  2569                           ;main.c: 120:         lcdData('a');
  2570  0071A2  0E61               	movlw	97
  2571  0071A4  EC26  F036         	call	_lcdData
  2572                           
  2573                           ;main.c: 121:         lcdData('s');
  2574  0071A8  0E73               	movlw	115
  2575  0071AA  EC26  F036         	call	_lcdData
  2576                           
  2577                           ;main.c: 122:         lcdData('s');
  2578  0071AE  0E73               	movlw	115
  2579  0071B0  EC26  F036         	call	_lcdData
  2580                           
  2581                           ;main.c: 123:         lcdData('a');
  2582  0071B4  0E61               	movlw	97
  2583  0071B6  EC26  F036         	call	_lcdData
  2584                           
  2585                           ;main.c: 124:         lcdData('d');
  2586  0071BA  0E64               	movlw	100
  2587  0071BC  EC26  F036         	call	_lcdData
  2588                           
  2589                           ;main.c: 125:         lcdData('a');
  2590  0071C0  0E61               	movlw	97
  2591  0071C2  EC26  F036         	call	_lcdData
  2592                           
  2593                           ;main.c: 126:     };main.c: 128:     lcdPosition(1, 0);
  2594  0071C6  0E00               	movlw	0
  2595  0071C8  6E09               	movwf	lcdPosition@coluna^0,c
  2596  0071CA  0E01               	movlw	1
  2597  0071CC  EC85  F036         	call	_lcdPosition
  2598                           
  2599                           ;main.c: 129:     {;main.c: 130:         lcdData('8');
  2600  0071D0  0E38               	movlw	56
  2601  0071D2  EC26  F036         	call	_lcdData
  2602                           
  2603                           ;main.c: 131:         lcdData('-');
  2604  0071D6  0E2D               	movlw	45
  2605  0071D8  EC26  F036         	call	_lcdData
  2606                           
  2607                           ;main.c: 132:         lcdData('A');
  2608  0071DC  0E41               	movlw	65
  2609  0071DE  EC26  F036         	call	_lcdData
  2610                           
  2611                           ;main.c: 133:         lcdData('o');
  2612  0071E2  0E6F               	movlw	111
  2613  0071E4  EC26  F036         	call	_lcdData
  2614                           
  2615                           ;main.c: 134:         lcdData(' ');
  2616  0071E8  0E20               	movlw	32
  2617  0071EA  EC26  F036         	call	_lcdData
  2618                           
  2619                           ;main.c: 135:         lcdData('p');
  2620  0071EE  0E70               	movlw	112
  2621  0071F0  EC26  F036         	call	_lcdData
  2622                           
  2623                           ;main.c: 136:         lcdData('o');
  2624  0071F4  0E6F               	movlw	111
  2625  0071F6  EC26  F036         	call	_lcdData
  2626                           
  2627                           ;main.c: 137:         lcdData('n');
  2628  0071FA  0E6E               	movlw	110
  2629  0071FC  EC26  F036         	call	_lcdData
  2630                           
  2631                           ;main.c: 138:         lcdData('t');
  2632  007200  0E74               	movlw	116
  2633  007202  EC26  F036         	call	_lcdData
  2634                           
  2635                           ;main.c: 139:         lcdData('o');
  2636  007206  0E6F               	movlw	111
  2637  007208  EC26  F036         	call	_lcdData
  2638                           
  2639                           ;main.c: 140:     };main.c: 141:     lcdPosition(2, 0);
  2640  00720C  0E00               	movlw	0
  2641  00720E  6E09               	movwf	lcdPosition@coluna^0,c
  2642  007210  0E02               	movlw	2
  2643  007212  EC85  F036         	call	_lcdPosition
  2644                           
  2645                           ;main.c: 142:     {;main.c: 143:         lcdData('9');
  2646  007216  0E39               	movlw	57
  2647  007218  EC26  F036         	call	_lcdData
  2648                           
  2649                           ;main.c: 144:         lcdData('-');
  2650  00721C  0E2D               	movlw	45
  2651  00721E  EC26  F036         	call	_lcdData
  2652                           
  2653                           ;main.c: 145:         lcdData('B');
  2654  007222  0E42               	movlw	66
  2655  007224  EC26  F036         	call	_lcdData
  2656                           
  2657                           ;main.c: 146:         lcdData('e');
  2658  007228  0E65               	movlw	101
  2659  00722A  EC26  F036         	call	_lcdData
  2660                           
  2661                           ;main.c: 147:         lcdData('m');
  2662  00722E  0E6D               	movlw	109
  2663  007230  EC26  F036         	call	_lcdData
  2664                           
  2665                           ;main.c: 148:         lcdData(' ');
  2666  007234  0E20               	movlw	32
  2667  007236  EC26  F036         	call	_lcdData
  2668                           
  2669                           ;main.c: 149:         lcdData('p');
  2670  00723A  0E70               	movlw	112
  2671  00723C  EC26  F036         	call	_lcdData
  2672                           
  2673                           ;main.c: 150:         lcdData('a');
  2674  007240  0E61               	movlw	97
  2675  007242  EC26  F036         	call	_lcdData
  2676                           
  2677                           ;main.c: 151:         lcdData('s');
  2678  007246  0E73               	movlw	115
  2679  007248  EC26  F036         	call	_lcdData
  2680                           
  2681                           ;main.c: 152:         lcdData('s');
  2682  00724C  0E73               	movlw	115
  2683  00724E  EC26  F036         	call	_lcdData
  2684                           
  2685                           ;main.c: 153:         lcdData('a');
  2686  007252  0E61               	movlw	97
  2687  007254  EC26  F036         	call	_lcdData
  2688                           
  2689                           ;main.c: 154:         lcdData('d');
  2690  007258  0E64               	movlw	100
  2691  00725A  EC26  F036         	call	_lcdData
  2692                           
  2693                           ;main.c: 155:         lcdData('a');
  2694  00725E  0E61               	movlw	97
  2695  007260  EC26  F036         	call	_lcdData
  2696  007264  0012               	return		;funcret
  2697  007266                     __end_of_impressaoponto:
  2698                           	callstack 0
  2699                           
  2700 ;; *************** function _impressao *****************
  2701 ;; Defined at:
  2702 ;;		line 40 in file "main.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;		None
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;		None
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  1    wreg      void 
  2709 ;; Registers used:
  2710 ;;		wreg, status,2, status,0, cstack
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2716 ;;      Params:         0       0       0       0       0       0       0
  2717 ;;      Locals:         0       0       0       0       0       0       0
  2718 ;;      Temps:          0       0       0       0       0       0       0
  2719 ;;      Totals:         0       0       0       0       0       0       0
  2720 ;;Total ram usage:        0 bytes
  2721 ;; Hardware stack levels used: 1
  2722 ;; Hardware stack levels required when called: 4
  2723 ;; This function calls:
  2724 ;;		_lcdData
  2725 ;;		_lcdInit
  2726 ;;		_lcdPosition
  2727 ;; This function is called by:
  2728 ;;		_main
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text16
  2733  007372                     __ptext16:
  2734                           	callstack 0
  2735  007372                     _impressao:
  2736                           	callstack 26
  2737  007372                     
  2738                           ;main.c: 41:     lcdInit();
  2739  007372  EC2A  F037         	call	_lcdInit	;wreg free
  2740                           
  2741                           ;main.c: 42:     lcdPosition(0, 0);
  2742  007376  0E00               	movlw	0
  2743  007378  6E09               	movwf	lcdPosition@coluna^0,c
  2744  00737A  0E00               	movlw	0
  2745  00737C  EC85  F036         	call	_lcdPosition
  2746                           
  2747                           ;main.c: 43:     {;main.c: 44:         lcdData('1');
  2748  007380  0E31               	movlw	49
  2749  007382  EC26  F036         	call	_lcdData
  2750                           
  2751                           ;main.c: 45:         lcdData('-');
  2752  007386  0E2D               	movlw	45
  2753  007388  EC26  F036         	call	_lcdData
  2754                           
  2755                           ;main.c: 46:         lcdData('C');
  2756  00738C  0E43               	movlw	67
  2757  00738E  EC26  F036         	call	_lcdData
  2758                           
  2759                           ;main.c: 47:         lcdData('a');
  2760  007392  0E61               	movlw	97
  2761  007394  EC26  F036         	call	_lcdData
  2762                           
  2763                           ;main.c: 48:         lcdData('r');
  2764  007398  0E72               	movlw	114
  2765  00739A  EC26  F036         	call	_lcdData
  2766                           
  2767                           ;main.c: 49:         lcdData('n');
  2768  00739E  0E6E               	movlw	110
  2769  0073A0  EC26  F036         	call	_lcdData
  2770                           
  2771                           ;main.c: 50:         lcdData('e');
  2772  0073A4  0E65               	movlw	101
  2773  0073A6  EC26  F036         	call	_lcdData
  2774                           
  2775                           ;main.c: 51:         lcdData(' ');
  2776  0073AA  0E20               	movlw	32
  2777  0073AC  EC26  F036         	call	_lcdData
  2778                           
  2779                           ;main.c: 52:         lcdData('d');
  2780  0073B0  0E64               	movlw	100
  2781  0073B2  EC26  F036         	call	_lcdData
  2782                           
  2783                           ;main.c: 53:         lcdData('e');
  2784  0073B6  0E65               	movlw	101
  2785  0073B8  EC26  F036         	call	_lcdData
  2786                           
  2787                           ;main.c: 54:         lcdData(' ');
  2788  0073BC  0E20               	movlw	32
  2789  0073BE  EC26  F036         	call	_lcdData
  2790                           
  2791                           ;main.c: 55:         lcdData('P');
  2792  0073C2  0E50               	movlw	80
  2793  0073C4  EC26  F036         	call	_lcdData
  2794                           
  2795                           ;main.c: 56:         lcdData('o');
  2796  0073C8  0E6F               	movlw	111
  2797  0073CA  EC26  F036         	call	_lcdData
  2798                           
  2799                           ;main.c: 57:         lcdData('r');
  2800  0073CE  0E72               	movlw	114
  2801  0073D0  EC26  F036         	call	_lcdData
  2802                           
  2803                           ;main.c: 58:         lcdData('c');
  2804  0073D4  0E63               	movlw	99
  2805  0073D6  EC26  F036         	call	_lcdData
  2806                           
  2807                           ;main.c: 59:         lcdData('o');
  2808  0073DA  0E6F               	movlw	111
  2809  0073DC  EC26  F036         	call	_lcdData
  2810                           
  2811                           ;main.c: 60:     };main.c: 62:     lcdPosition(1, 0);
  2812  0073E0  0E00               	movlw	0
  2813  0073E2  6E09               	movwf	lcdPosition@coluna^0,c
  2814  0073E4  0E01               	movlw	1
  2815  0073E6  EC85  F036         	call	_lcdPosition
  2816                           
  2817                           ;main.c: 63:     {;main.c: 64:         lcdData('2');
  2818  0073EA  0E32               	movlw	50
  2819  0073EC  EC26  F036         	call	_lcdData
  2820                           
  2821                           ;main.c: 65:         lcdData('-');
  2822  0073F0  0E2D               	movlw	45
  2823  0073F2  EC26  F036         	call	_lcdData
  2824                           
  2825                           ;main.c: 66:         lcdData('C');
  2826  0073F6  0E43               	movlw	67
  2827  0073F8  EC26  F036         	call	_lcdData
  2828                           
  2829                           ;main.c: 67:         lcdData('a');
  2830  0073FC  0E61               	movlw	97
  2831  0073FE  EC26  F036         	call	_lcdData
  2832                           
  2833                           ;main.c: 68:         lcdData('r');
  2834  007402  0E72               	movlw	114
  2835  007404  EC26  F036         	call	_lcdData
  2836                           
  2837                           ;main.c: 69:         lcdData('n');
  2838  007408  0E6E               	movlw	110
  2839  00740A  EC26  F036         	call	_lcdData
  2840                           
  2841                           ;main.c: 70:         lcdData('e');
  2842  00740E  0E65               	movlw	101
  2843  007410  EC26  F036         	call	_lcdData
  2844                           
  2845                           ;main.c: 71:         lcdData(' ');
  2846  007414  0E20               	movlw	32
  2847  007416  EC26  F036         	call	_lcdData
  2848                           
  2849                           ;main.c: 72:         lcdData('d');
  2850  00741A  0E64               	movlw	100
  2851  00741C  EC26  F036         	call	_lcdData
  2852                           
  2853                           ;main.c: 73:         lcdData('e');
  2854  007420  0E65               	movlw	101
  2855  007422  EC26  F036         	call	_lcdData
  2856                           
  2857                           ;main.c: 74:         lcdData(' ');
  2858  007426  0E20               	movlw	32
  2859  007428  EC26  F036         	call	_lcdData
  2860                           
  2861                           ;main.c: 75:         lcdData('B');
  2862  00742C  0E42               	movlw	66
  2863  00742E  EC26  F036         	call	_lcdData
  2864                           
  2865                           ;main.c: 76:         lcdData('o');
  2866  007432  0E6F               	movlw	111
  2867  007434  EC26  F036         	call	_lcdData
  2868                           
  2869                           ;main.c: 77:         lcdData('i');
  2870  007438  0E69               	movlw	105
  2871  00743A  EC26  F036         	call	_lcdData
  2872                           
  2873                           ;main.c: 78:     };main.c: 80:     lcdPosition(2, 0);
  2874  00743E  0E00               	movlw	0
  2875  007440  6E09               	movwf	lcdPosition@coluna^0,c
  2876  007442  0E02               	movlw	2
  2877  007444  EC85  F036         	call	_lcdPosition
  2878                           
  2879                           ;main.c: 81:     {;main.c: 82:         lcdData('3');
  2880  007448  0E33               	movlw	51
  2881  00744A  EC26  F036         	call	_lcdData
  2882                           
  2883                           ;main.c: 83:         lcdData('-');
  2884  00744E  0E2D               	movlw	45
  2885  007450  EC26  F036         	call	_lcdData
  2886                           
  2887                           ;main.c: 84:         lcdData('L');
  2888  007454  0E4C               	movlw	76
  2889  007456  EC26  F036         	call	_lcdData
  2890                           
  2891                           ;main.c: 85:         lcdData('i');
  2892  00745A  0E69               	movlw	105
  2893  00745C  EC26  F036         	call	_lcdData
  2894                           
  2895                           ;main.c: 86:         lcdData('n');
  2896  007460  0E6E               	movlw	110
  2897  007462  EC26  F036         	call	_lcdData
  2898                           
  2899                           ;main.c: 87:         lcdData('g');
  2900  007466  0E67               	movlw	103
  2901  007468  EC26  F036         	call	_lcdData
  2902                           
  2903                           ;main.c: 88:         lcdData('u');
  2904  00746C  0E75               	movlw	117
  2905  00746E  EC26  F036         	call	_lcdData
  2906                           
  2907                           ;main.c: 89:         lcdData('i');
  2908  007472  0E69               	movlw	105
  2909  007474  EC26  F036         	call	_lcdData
  2910                           
  2911                           ;main.c: 90:         lcdData('c');
  2912  007478  0E63               	movlw	99
  2913  00747A  EC26  F036         	call	_lcdData
  2914                           
  2915                           ;main.c: 91:         lcdData('a');
  2916  00747E  0E61               	movlw	97
  2917  007480  EC26  F036         	call	_lcdData
  2918                           
  2919                           ;main.c: 92:     };main.c: 94:     lcdPosition(3, 0);
  2920  007484  0E00               	movlw	0
  2921  007486  6E09               	movwf	lcdPosition@coluna^0,c
  2922  007488  0E03               	movlw	3
  2923  00748A  EC85  F036         	call	_lcdPosition
  2924                           
  2925                           ;main.c: 95:     {;main.c: 96:         lcdData('4');
  2926  00748E  0E34               	movlw	52
  2927  007490  EC26  F036         	call	_lcdData
  2928                           
  2929                           ;main.c: 97:         lcdData('-');
  2930  007494  0E2D               	movlw	45
  2931  007496  EC26  F036         	call	_lcdData
  2932                           
  2933                           ;main.c: 98:         lcdData('F');
  2934  00749A  0E46               	movlw	70
  2935  00749C  EC26  F036         	call	_lcdData
  2936                           
  2937                           ;main.c: 99:         lcdData('r');
  2938  0074A0  0E72               	movlw	114
  2939  0074A2  EC26  F036         	call	_lcdData
  2940                           
  2941                           ;main.c: 100:         lcdData('a');
  2942  0074A6  0E61               	movlw	97
  2943  0074A8  EC26  F036         	call	_lcdData
  2944                           
  2945                           ;main.c: 101:         lcdData('n');
  2946  0074AC  0E6E               	movlw	110
  2947  0074AE  EC26  F036         	call	_lcdData
  2948                           
  2949                           ;main.c: 102:         lcdData('g');
  2950  0074B2  0E67               	movlw	103
  2951  0074B4  EC26  F036         	call	_lcdData
  2952                           
  2953                           ;main.c: 103:         lcdData('o');
  2954  0074B8  0E6F               	movlw	111
  2955  0074BA  EC26  F036         	call	_lcdData
  2956  0074BE  0012               	return		;funcret
  2957  0074C0                     __end_of_impressao:
  2958                           	callstack 0
  2959                           
  2960 ;; *************** function _lcdPosition *****************
  2961 ;; Defined at:
  2962 ;;		line 165 in file "lcd.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  linha           1    wreg     unsigned char 
  2965 ;;  coluna          1    8[COMRAM] unsigned char 
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;  linha           1   10[COMRAM] unsigned char 
  2968 ;;  comando         1    9[COMRAM] unsigned char 
  2969 ;; Return value:  Size  Location     Type
  2970 ;;                  1    wreg      void 
  2971 ;; Registers used:
  2972 ;;		wreg, status,2, status,0, cstack
  2973 ;; Tracked objects:
  2974 ;;		On entry : 0/0
  2975 ;;		On exit  : 0/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2978 ;;      Params:         1       0       0       0       0       0       0
  2979 ;;      Locals:         2       0       0       0       0       0       0
  2980 ;;      Temps:          0       0       0       0       0       0       0
  2981 ;;      Totals:         3       0       0       0       0       0       0
  2982 ;;Total ram usage:        3 bytes
  2983 ;; Hardware stack levels used: 1
  2984 ;; Hardware stack levels required when called: 3
  2985 ;; This function calls:
  2986 ;;		_lcdCommand
  2987 ;; This function is called by:
  2988 ;;		_inicio
  2989 ;;		_impressao
  2990 ;;		_impressaoponto
  2991 ;;		_main
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           	psect	text17
  2996  006D0A                     __ptext17:
  2997                           	callstack 0
  2998  006D0A                     _lcdPosition:
  2999                           	callstack 27
  3000                           
  3001                           ;incstack = 0
  3002                           ;lcdPosition@linha stored from wreg
  3003  006D0A  6E0B               	movwf	lcdPosition@linha^0,c
  3004  006D0C                     
  3005                           ;lcd.c: 166:     char comando = 0;
  3006  006D0C  0E00               	movlw	0
  3007  006D0E  6E0A               	movwf	lcdPosition@comando^0,c
  3008  006D10                     
  3009                           ;lcd.c: 168:     if(linha == 0) comando = 0x80 + coluna;
  3010  006D10  500B               	movf	lcdPosition@linha^0,w,c
  3011  006D12  A4D8               	btfss	status,2,c
  3012  006D14  EF8E  F036         	goto	u1551
  3013  006D18  EF90  F036         	goto	u1550
  3014  006D1C                     u1551:
  3015  006D1C  EF93  F036         	goto	l126
  3016  006D20                     u1550:
  3017  006D20  5009               	movf	lcdPosition@coluna^0,w,c
  3018  006D22  0F80               	addlw	128
  3019  006D24  6E0A               	movwf	lcdPosition@comando^0,c
  3020  006D26                     l126:
  3021                           
  3022                           ;lcd.c: 169:     if(linha == 1) comando = 0xC0 + coluna;
  3023  006D26  040B               	decf	lcdPosition@linha^0,w,c
  3024  006D28  A4D8               	btfss	status,2,c
  3025  006D2A  EF99  F036         	goto	u1561
  3026  006D2E  EF9B  F036         	goto	u1560
  3027  006D32                     u1561:
  3028  006D32  EF9E  F036         	goto	l127
  3029  006D36                     u1560:
  3030  006D36  5009               	movf	lcdPosition@coluna^0,w,c
  3031  006D38  0FC0               	addlw	192
  3032  006D3A  6E0A               	movwf	lcdPosition@comando^0,c
  3033  006D3C                     l127:
  3034                           
  3035                           ;lcd.c: 170:     if(linha == 2) comando = 0x90 + coluna;
  3036  006D3C  0E02               	movlw	2
  3037  006D3E  180B               	xorwf	lcdPosition@linha^0,w,c
  3038  006D40  A4D8               	btfss	status,2,c
  3039  006D42  EFA5  F036         	goto	u1571
  3040  006D46  EFA7  F036         	goto	u1570
  3041  006D4A                     u1571:
  3042  006D4A  EFAA  F036         	goto	l128
  3043  006D4E                     u1570:
  3044  006D4E  5009               	movf	lcdPosition@coluna^0,w,c
  3045  006D50  0F90               	addlw	144
  3046  006D52  6E0A               	movwf	lcdPosition@comando^0,c
  3047  006D54                     l128:
  3048                           
  3049                           ;lcd.c: 171:     if(linha == 3) comando = 0xD0 + coluna;
  3050  006D54  0E03               	movlw	3
  3051  006D56  180B               	xorwf	lcdPosition@linha^0,w,c
  3052  006D58  A4D8               	btfss	status,2,c
  3053  006D5A  EFB1  F036         	goto	u1581
  3054  006D5E  EFB3  F036         	goto	u1580
  3055  006D62                     u1581:
  3056  006D62  EFB6  F036         	goto	l1859
  3057  006D66                     u1580:
  3058  006D66  5009               	movf	lcdPosition@coluna^0,w,c
  3059  006D68  0FD0               	addlw	208
  3060  006D6A  6E0A               	movwf	lcdPosition@comando^0,c
  3061  006D6C                     l1859:
  3062                           
  3063                           ;lcd.c: 173:     lcdCommand(comando);
  3064  006D6C  500A               	movf	lcdPosition@comando^0,w,c
  3065  006D6E  ECE0  F037         	call	_lcdCommand
  3066  006D72  0012               	return		;funcret
  3067  006D74                     __end_of_lcdPosition:
  3068                           	callstack 0
  3069                           
  3070 ;; *************** function _lcdInit *****************
  3071 ;; Defined at:
  3072 ;;		line 143 in file "lcd.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;		None
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;		None
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  1    wreg      void 
  3079 ;; Registers used:
  3080 ;;		wreg, status,2, status,0, cstack
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3086 ;;      Params:         0       0       0       0       0       0       0
  3087 ;;      Locals:         0       0       0       0       0       0       0
  3088 ;;      Temps:          0       0       0       0       0       0       0
  3089 ;;      Totals:         0       0       0       0       0       0       0
  3090 ;;Total ram usage:        0 bytes
  3091 ;; Hardware stack levels used: 1
  3092 ;; Hardware stack levels required when called: 3
  3093 ;; This function calls:
  3094 ;;		_Delay2ms
  3095 ;;		_lcdCommand
  3096 ;;		_pinMode
  3097 ;; This function is called by:
  3098 ;;		_inicio
  3099 ;;		_impressao
  3100 ;;		_impressaoponto
  3101 ;;		_main
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           	psect	text18
  3106  006E54                     __ptext18:
  3107                           	callstack 0
  3108  006E54                     _lcdInit:
  3109                           	callstack 27
  3110  006E54                     
  3111                           ;lcd.c: 145:     pinMode(PIN_E2, 0);
  3112  006E54  0E00               	movlw	0
  3113  006E56  6E02               	movwf	(pinMode@pin+1)^0,c
  3114  006E58  0E22               	movlw	34
  3115  006E5A  6E01               	movwf	pinMode@pin^0,c
  3116  006E5C  0E00               	movlw	0
  3117  006E5E  6E04               	movwf	(pinMode@type+1)^0,c
  3118  006E60  0E00               	movlw	0
  3119  006E62  6E03               	movwf	pinMode@type^0,c
  3120  006E64  EC44  F03C         	call	_pinMode	;wreg free
  3121                           
  3122                           ;lcd.c: 146:     pinMode(PIN_E1, 0);
  3123  006E68  0E00               	movlw	0
  3124  006E6A  6E02               	movwf	(pinMode@pin+1)^0,c
  3125  006E6C  0E21               	movlw	33
  3126  006E6E  6E01               	movwf	pinMode@pin^0,c
  3127  006E70  0E00               	movlw	0
  3128  006E72  6E04               	movwf	(pinMode@type+1)^0,c
  3129  006E74  0E00               	movlw	0
  3130  006E76  6E03               	movwf	pinMode@type^0,c
  3131  006E78  EC44  F03C         	call	_pinMode	;wreg free
  3132  006E7C                     
  3133                           ;lcd.c: 147:  TRISD = 0x00;
  3134  006E7C  0E00               	movlw	0
  3135  006E7E  6E95               	movwf	149,c	;volatile
  3136  006E80                     
  3137                           ;lcd.c: 150:  Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms();
  3138  006E80  ECBE  F035         	call	_Delay2ms	;wreg free
  3139  006E84  ECBE  F035         	call	_Delay2ms	;wreg free
  3140  006E88  ECBE  F035         	call	_Delay2ms	;wreg free
  3141  006E8C  ECBE  F035         	call	_Delay2ms	;wreg free
  3142  006E90  ECBE  F035         	call	_Delay2ms	;wreg free
  3143  006E94                     
  3144                           ;lcd.c: 152:     lcdCommand(0x38);
  3145  006E94  0E38               	movlw	56
  3146  006E96  ECE0  F037         	call	_lcdCommand
  3147  006E9A                     
  3148                           ;lcd.c: 153:     Delay2ms(); Delay2ms();
  3149  006E9A  ECBE  F035         	call	_Delay2ms	;wreg free
  3150  006E9E  ECBE  F035         	call	_Delay2ms	;wreg free
  3151  006EA2                     
  3152                           ;lcd.c: 154:     lcdCommand(0x38);
  3153  006EA2  0E38               	movlw	56
  3154  006EA4  ECE0  F037         	call	_lcdCommand
  3155  006EA8                     
  3156                           ;lcd.c: 155:     Delay2ms();
  3157  006EA8  ECBE  F035         	call	_Delay2ms	;wreg free
  3158  006EAC                     
  3159                           ;lcd.c: 156:     lcdCommand(0x38);
  3160  006EAC  0E38               	movlw	56
  3161  006EAE  ECE0  F037         	call	_lcdCommand
  3162  006EB2                     
  3163                           ;lcd.c: 158:     lcdCommand(0x38);
  3164  006EB2  0E38               	movlw	56
  3165  006EB4  ECE0  F037         	call	_lcdCommand
  3166  006EB8                     
  3167                           ;lcd.c: 159:     lcdCommand(0x06);
  3168  006EB8  0E06               	movlw	6
  3169  006EBA  ECE0  F037         	call	_lcdCommand
  3170  006EBE                     
  3171                           ;lcd.c: 162:     lcdCommand(0x0C);
  3172  006EBE  0E0C               	movlw	12
  3173  006EC0  ECE0  F037         	call	_lcdCommand
  3174  006EC4                     
  3175                           ;lcd.c: 163:     lcdCommand(0x01);
  3176  006EC4  0E01               	movlw	1
  3177  006EC6  ECE0  F037         	call	_lcdCommand
  3178  006ECA  0012               	return		;funcret
  3179  006ECC                     __end_of_lcdInit:
  3180                           	callstack 0
  3181                           
  3182 ;; *************** function _pinMode *****************
  3183 ;; Defined at:
  3184 ;;		line 54 in file "io.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;  pin             2    0[COMRAM] int 
  3187 ;;  type            2    2[COMRAM] int 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;		None
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  1    wreg      void 
  3192 ;; Registers used:
  3193 ;;		wreg, status,2, status,0
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3199 ;;      Params:         4       0       0       0       0       0       0
  3200 ;;      Locals:         0       0       0       0       0       0       0
  3201 ;;      Temps:          2       0       0       0       0       0       0
  3202 ;;      Totals:         6       0       0       0       0       0       0
  3203 ;;Total ram usage:        6 bytes
  3204 ;; Hardware stack levels used: 1
  3205 ;; This function calls:
  3206 ;;		Nothing
  3207 ;; This function is called by:
  3208 ;;		_lcdInit
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text19
  3213  007888                     __ptext19:
  3214                           	callstack 0
  3215  007888                     _pinMode:
  3216                           	callstack 29
  3217  007888                     
  3218                           ;io.c: 56:     if(pin <8){
  3219  007888  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3220  00788A  EF52  F03C         	goto	u1310
  3221  00788E  5002               	movf	(pinMode@pin+1)^0,w,c
  3222  007890  E107               	bnz	u1311
  3223  007892  0E08               	movlw	8
  3224  007894  5C01               	subwf	pinMode@pin^0,w,c
  3225  007896  B0D8               	btfsc	status,0,c
  3226  007898  EF50  F03C         	goto	u1311
  3227  00789C  EF52  F03C         	goto	u1310
  3228  0078A0                     u1311:
  3229  0078A0  EF7C  F03C         	goto	l1711
  3230  0078A4                     u1310:
  3231  0078A4                     
  3232                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  3233  0078A4  5003               	movf	pinMode@type^0,w,c
  3234  0078A6  1004               	iorwf	(pinMode@type+1)^0,w,c
  3235  0078A8  B4D8               	btfsc	status,2,c
  3236  0078AA  EF59  F03C         	goto	u1321
  3237  0078AE  EF5B  F03C         	goto	u1320
  3238  0078B2                     u1321:
  3239  0078B2  EF6B  F03C         	goto	l1709
  3240  0078B6                     u1320:
  3241  0078B6  C001  F005         	movff	pinMode@pin,??_pinMode
  3242  0078BA  0E01               	movlw	1
  3243  0078BC  6E06               	movwf	(??_pinMode+1)^0,c
  3244  0078BE  2A05               	incf	??_pinMode^0,f,c
  3245  0078C0  EF64  F03C         	goto	u1334
  3246  0078C4                     u1335:
  3247  0078C4  90D8               	bcf	status,0,c
  3248  0078C6  3606               	rlcf	(??_pinMode+1)^0,f,c
  3249  0078C8                     u1334:
  3250  0078C8  2E05               	decfsz	??_pinMode^0,f,c
  3251  0078CA  EF62  F03C         	goto	u1335
  3252  0078CE  5006               	movf	(??_pinMode+1)^0,w,c
  3253  0078D0  1292               	iorwf	146,f,c	;volatile
  3254  0078D2  EF6A  F03D         	goto	l76
  3255  0078D6                     l1709:
  3256  0078D6  C001  F005         	movff	pinMode@pin,??_pinMode
  3257  0078DA  0E01               	movlw	1
  3258  0078DC  6E06               	movwf	(??_pinMode+1)^0,c
  3259  0078DE  2A05               	incf	??_pinMode^0,f,c
  3260  0078E0  EF74  F03C         	goto	u1344
  3261  0078E4                     u1345:
  3262  0078E4  90D8               	bcf	status,0,c
  3263  0078E6  3606               	rlcf	(??_pinMode+1)^0,f,c
  3264  0078E8                     u1344:
  3265  0078E8  2E05               	decfsz	??_pinMode^0,f,c
  3266  0078EA  EF72  F03C         	goto	u1345
  3267  0078EE  5006               	movf	(??_pinMode+1)^0,w,c
  3268  0078F0  0AFF               	xorlw	255
  3269  0078F2  1692               	andwf	146,f,c	;volatile
  3270  0078F4  EF6A  F03D         	goto	l76
  3271  0078F8                     l1711:
  3272  0078F8  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3273  0078FA  EF8A  F03C         	goto	u1350
  3274  0078FE  5002               	movf	(pinMode@pin+1)^0,w,c
  3275  007900  E107               	bnz	u1351
  3276  007902  0E10               	movlw	16
  3277  007904  5C01               	subwf	pinMode@pin^0,w,c
  3278  007906  B0D8               	btfsc	status,0,c
  3279  007908  EF88  F03C         	goto	u1351
  3280  00790C  EF8A  F03C         	goto	u1350
  3281  007910                     u1351:
  3282  007910  EFB8  F03C         	goto	l1719
  3283  007914                     u1350:
  3284  007914                     
  3285                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  3286  007914  5003               	movf	pinMode@type^0,w,c
  3287  007916  1004               	iorwf	(pinMode@type+1)^0,w,c
  3288  007918  B4D8               	btfsc	status,2,c
  3289  00791A  EF91  F03C         	goto	u1361
  3290  00791E  EF93  F03C         	goto	u1360
  3291  007922                     u1361:
  3292  007922  EFA5  F03C         	goto	l1717
  3293  007926                     u1360:
  3294  007926  C001  F005         	movff	pinMode@pin,??_pinMode
  3295  00792A  0EF8               	movlw	-8
  3296  00792C  2605               	addwf	??_pinMode^0,f,c
  3297  00792E  0E01               	movlw	1
  3298  007930  6E06               	movwf	(??_pinMode+1)^0,c
  3299  007932  2A05               	incf	??_pinMode^0,f,c
  3300  007934  EF9E  F03C         	goto	u1374
  3301  007938                     u1375:
  3302  007938  90D8               	bcf	status,0,c
  3303  00793A  3606               	rlcf	(??_pinMode+1)^0,f,c
  3304  00793C                     u1374:
  3305  00793C  2E05               	decfsz	??_pinMode^0,f,c
  3306  00793E  EF9C  F03C         	goto	u1375
  3307  007942  5006               	movf	(??_pinMode+1)^0,w,c
  3308  007944  1293               	iorwf	147,f,c	;volatile
  3309  007946  EF6A  F03D         	goto	l76
  3310  00794A                     l1717:
  3311  00794A  C001  F005         	movff	pinMode@pin,??_pinMode
  3312  00794E  0EF8               	movlw	-8
  3313  007950  2605               	addwf	??_pinMode^0,f,c
  3314  007952  0E01               	movlw	1
  3315  007954  6E06               	movwf	(??_pinMode+1)^0,c
  3316  007956  2A05               	incf	??_pinMode^0,f,c
  3317  007958  EFB0  F03C         	goto	u1384
  3318  00795C                     u1385:
  3319  00795C  90D8               	bcf	status,0,c
  3320  00795E  3606               	rlcf	(??_pinMode+1)^0,f,c
  3321  007960                     u1384:
  3322  007960  2E05               	decfsz	??_pinMode^0,f,c
  3323  007962  EFAE  F03C         	goto	u1385
  3324  007966  5006               	movf	(??_pinMode+1)^0,w,c
  3325  007968  0AFF               	xorlw	255
  3326  00796A  1693               	andwf	147,f,c	;volatile
  3327  00796C  EF6A  F03D         	goto	l76
  3328  007970                     l1719:
  3329  007970  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3330  007972  EFC6  F03C         	goto	u1390
  3331  007976  5002               	movf	(pinMode@pin+1)^0,w,c
  3332  007978  E107               	bnz	u1391
  3333  00797A  0E18               	movlw	24
  3334  00797C  5C01               	subwf	pinMode@pin^0,w,c
  3335  00797E  B0D8               	btfsc	status,0,c
  3336  007980  EFC4  F03C         	goto	u1391
  3337  007984  EFC6  F03C         	goto	u1390
  3338  007988                     u1391:
  3339  007988  EFF4  F03C         	goto	l1727
  3340  00798C                     u1390:
  3341  00798C                     
  3342                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  3343  00798C  5003               	movf	pinMode@type^0,w,c
  3344  00798E  1004               	iorwf	(pinMode@type+1)^0,w,c
  3345  007990  B4D8               	btfsc	status,2,c
  3346  007992  EFCD  F03C         	goto	u1401
  3347  007996  EFCF  F03C         	goto	u1400
  3348  00799A                     u1401:
  3349  00799A  EFE1  F03C         	goto	l1725
  3350  00799E                     u1400:
  3351  00799E  C001  F005         	movff	pinMode@pin,??_pinMode
  3352  0079A2  0EF0               	movlw	-16
  3353  0079A4  2605               	addwf	??_pinMode^0,f,c
  3354  0079A6  0E01               	movlw	1
  3355  0079A8  6E06               	movwf	(??_pinMode+1)^0,c
  3356  0079AA  2A05               	incf	??_pinMode^0,f,c
  3357  0079AC  EFDA  F03C         	goto	u1414
  3358  0079B0                     u1415:
  3359  0079B0  90D8               	bcf	status,0,c
  3360  0079B2  3606               	rlcf	(??_pinMode+1)^0,f,c
  3361  0079B4                     u1414:
  3362  0079B4  2E05               	decfsz	??_pinMode^0,f,c
  3363  0079B6  EFD8  F03C         	goto	u1415
  3364  0079BA  5006               	movf	(??_pinMode+1)^0,w,c
  3365  0079BC  1294               	iorwf	148,f,c	;volatile
  3366  0079BE  EF6A  F03D         	goto	l76
  3367  0079C2                     l1725:
  3368  0079C2  C001  F005         	movff	pinMode@pin,??_pinMode
  3369  0079C6  0EF0               	movlw	-16
  3370  0079C8  2605               	addwf	??_pinMode^0,f,c
  3371  0079CA  0E01               	movlw	1
  3372  0079CC  6E06               	movwf	(??_pinMode+1)^0,c
  3373  0079CE  2A05               	incf	??_pinMode^0,f,c
  3374  0079D0  EFEC  F03C         	goto	u1424
  3375  0079D4                     u1425:
  3376  0079D4  90D8               	bcf	status,0,c
  3377  0079D6  3606               	rlcf	(??_pinMode+1)^0,f,c
  3378  0079D8                     u1424:
  3379  0079D8  2E05               	decfsz	??_pinMode^0,f,c
  3380  0079DA  EFEA  F03C         	goto	u1425
  3381  0079DE  5006               	movf	(??_pinMode+1)^0,w,c
  3382  0079E0  0AFF               	xorlw	255
  3383  0079E2  1694               	andwf	148,f,c	;volatile
  3384  0079E4  EF6A  F03D         	goto	l76
  3385  0079E8                     l1727:
  3386  0079E8  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3387  0079EA  EF02  F03D         	goto	u1430
  3388  0079EE  5002               	movf	(pinMode@pin+1)^0,w,c
  3389  0079F0  E107               	bnz	u1431
  3390  0079F2  0E20               	movlw	32
  3391  0079F4  5C01               	subwf	pinMode@pin^0,w,c
  3392  0079F6  B0D8               	btfsc	status,0,c
  3393  0079F8  EF00  F03D         	goto	u1431
  3394  0079FC  EF02  F03D         	goto	u1430
  3395  007A00                     u1431:
  3396  007A00  EF30  F03D         	goto	l1735
  3397  007A04                     u1430:
  3398  007A04                     
  3399                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  3400  007A04  5003               	movf	pinMode@type^0,w,c
  3401  007A06  1004               	iorwf	(pinMode@type+1)^0,w,c
  3402  007A08  B4D8               	btfsc	status,2,c
  3403  007A0A  EF09  F03D         	goto	u1441
  3404  007A0E  EF0B  F03D         	goto	u1440
  3405  007A12                     u1441:
  3406  007A12  EF1D  F03D         	goto	l1733
  3407  007A16                     u1440:
  3408  007A16  C001  F005         	movff	pinMode@pin,??_pinMode
  3409  007A1A  0EE8               	movlw	-24
  3410  007A1C  2605               	addwf	??_pinMode^0,f,c
  3411  007A1E  0E01               	movlw	1
  3412  007A20  6E06               	movwf	(??_pinMode+1)^0,c
  3413  007A22  2A05               	incf	??_pinMode^0,f,c
  3414  007A24  EF16  F03D         	goto	u1454
  3415  007A28                     u1455:
  3416  007A28  90D8               	bcf	status,0,c
  3417  007A2A  3606               	rlcf	(??_pinMode+1)^0,f,c
  3418  007A2C                     u1454:
  3419  007A2C  2E05               	decfsz	??_pinMode^0,f,c
  3420  007A2E  EF14  F03D         	goto	u1455
  3421  007A32  5006               	movf	(??_pinMode+1)^0,w,c
  3422  007A34  1295               	iorwf	149,f,c	;volatile
  3423  007A36  EF6A  F03D         	goto	l76
  3424  007A3A                     l1733:
  3425  007A3A  C001  F005         	movff	pinMode@pin,??_pinMode
  3426  007A3E  0EE8               	movlw	-24
  3427  007A40  2605               	addwf	??_pinMode^0,f,c
  3428  007A42  0E01               	movlw	1
  3429  007A44  6E06               	movwf	(??_pinMode+1)^0,c
  3430  007A46  2A05               	incf	??_pinMode^0,f,c
  3431  007A48  EF28  F03D         	goto	u1464
  3432  007A4C                     u1465:
  3433  007A4C  90D8               	bcf	status,0,c
  3434  007A4E  3606               	rlcf	(??_pinMode+1)^0,f,c
  3435  007A50                     u1464:
  3436  007A50  2E05               	decfsz	??_pinMode^0,f,c
  3437  007A52  EF26  F03D         	goto	u1465
  3438  007A56  5006               	movf	(??_pinMode+1)^0,w,c
  3439  007A58  0AFF               	xorlw	255
  3440  007A5A  1695               	andwf	149,f,c	;volatile
  3441  007A5C  EF6A  F03D         	goto	l76
  3442  007A60                     l1735:
  3443  007A60  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3444  007A62  EF3E  F03D         	goto	u1470
  3445  007A66  5002               	movf	(pinMode@pin+1)^0,w,c
  3446  007A68  E107               	bnz	u1471
  3447  007A6A  0E28               	movlw	40
  3448  007A6C  5C01               	subwf	pinMode@pin^0,w,c
  3449  007A6E  B0D8               	btfsc	status,0,c
  3450  007A70  EF3C  F03D         	goto	u1471
  3451  007A74  EF3E  F03D         	goto	u1470
  3452  007A78                     u1471:
  3453  007A78  EF6A  F03D         	goto	l76
  3454  007A7C                     u1470:
  3455  007A7C                     
  3456                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  3457  007A7C  5003               	movf	pinMode@type^0,w,c
  3458  007A7E  1004               	iorwf	(pinMode@type+1)^0,w,c
  3459  007A80  B4D8               	btfsc	status,2,c
  3460  007A82  EF45  F03D         	goto	u1481
  3461  007A86  EF47  F03D         	goto	u1480
  3462  007A8A                     u1481:
  3463  007A8A  EF59  F03D         	goto	l1741
  3464  007A8E                     u1480:
  3465  007A8E  C001  F005         	movff	pinMode@pin,??_pinMode
  3466  007A92  0EE0               	movlw	-32
  3467  007A94  2605               	addwf	??_pinMode^0,f,c
  3468  007A96  0E01               	movlw	1
  3469  007A98  6E06               	movwf	(??_pinMode+1)^0,c
  3470  007A9A  2A05               	incf	??_pinMode^0,f,c
  3471  007A9C  EF52  F03D         	goto	u1494
  3472  007AA0                     u1495:
  3473  007AA0  90D8               	bcf	status,0,c
  3474  007AA2  3606               	rlcf	(??_pinMode+1)^0,f,c
  3475  007AA4                     u1494:
  3476  007AA4  2E05               	decfsz	??_pinMode^0,f,c
  3477  007AA6  EF50  F03D         	goto	u1495
  3478  007AAA  5006               	movf	(??_pinMode+1)^0,w,c
  3479  007AAC  1296               	iorwf	150,f,c	;volatile
  3480  007AAE  EF6A  F03D         	goto	l76
  3481  007AB2                     l1741:
  3482  007AB2  C001  F005         	movff	pinMode@pin,??_pinMode
  3483  007AB6  0EE0               	movlw	-32
  3484  007AB8  2605               	addwf	??_pinMode^0,f,c
  3485  007ABA  0E01               	movlw	1
  3486  007ABC  6E06               	movwf	(??_pinMode+1)^0,c
  3487  007ABE  2A05               	incf	??_pinMode^0,f,c
  3488  007AC0  EF64  F03D         	goto	u1504
  3489  007AC4                     u1505:
  3490  007AC4  90D8               	bcf	status,0,c
  3491  007AC6  3606               	rlcf	(??_pinMode+1)^0,f,c
  3492  007AC8                     u1504:
  3493  007AC8  2E05               	decfsz	??_pinMode^0,f,c
  3494  007ACA  EF62  F03D         	goto	u1505
  3495  007ACE  5006               	movf	(??_pinMode+1)^0,w,c
  3496  007AD0  0AFF               	xorlw	255
  3497  007AD2  1696               	andwf	150,f,c	;volatile
  3498  007AD4                     l76:
  3499  007AD4  0012               	return		;funcret
  3500  007AD6                     __end_of_pinMode:
  3501                           	callstack 0
  3502                           
  3503 ;; *************** function _lcdCommand *****************
  3504 ;; Defined at:
  3505 ;;		line 96 in file "lcd.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;  cmd             1    wreg     unsigned char 
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;  cmd             1    7[COMRAM] unsigned char 
  3510 ;;  old_D           1    6[COMRAM] unsigned char 
  3511 ;; Return value:  Size  Location     Type
  3512 ;;                  1    wreg      void 
  3513 ;; Registers used:
  3514 ;;		wreg, status,2, status,0, cstack
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3520 ;;      Params:         0       0       0       0       0       0       0
  3521 ;;      Locals:         2       0       0       0       0       0       0
  3522 ;;      Temps:          0       0       0       0       0       0       0
  3523 ;;      Totals:         2       0       0       0       0       0       0
  3524 ;;Total ram usage:        2 bytes
  3525 ;; Hardware stack levels used: 1
  3526 ;; Hardware stack levels required when called: 2
  3527 ;; This function calls:
  3528 ;;		_Delay2ms
  3529 ;;		_Delay40us
  3530 ;;		_digitalWrite
  3531 ;; This function is called by:
  3532 ;;		_lcdInit
  3533 ;;		_lcdPosition
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537                           	psect	text20
  3538  006FC0                     __ptext20:
  3539                           	callstack 0
  3540  006FC0                     _lcdCommand:
  3541                           	callstack 27
  3542                           
  3543                           ;incstack = 0
  3544                           ;lcdCommand@cmd stored from wreg
  3545  006FC0  6E08               	movwf	lcdCommand@cmd^0,c
  3546  006FC2                     
  3547                           ;lcd.c: 96: void lcdCommand(unsigned char cmd);lcd.c: 97: {;lcd.c: 98:     unsigned char
      +                           old_D;;lcd.c: 99:     old_D = PORTD;
  3548  006FC2  CF83 F007          	movff	3971,lcdCommand@old_D	;volatile
  3549  006FC6                     
  3550                           ;lcd.c: 102:     TRISD = 0x00;
  3551  006FC6  0E00               	movlw	0
  3552  006FC8  6E95               	movwf	149,c	;volatile
  3553  006FCA                     
  3554                           ;lcd.c: 104:  digitalWrite(PIN_E2, 0);
  3555  006FCA  0E00               	movlw	0
  3556  006FCC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3557  006FCE  0E22               	movlw	34
  3558  006FD0  6E01               	movwf	digitalWrite@pin^0,c
  3559  006FD2  0E00               	movlw	0
  3560  006FD4  6E04               	movwf	(digitalWrite@value+1)^0,c
  3561  006FD6  0E00               	movlw	0
  3562  006FD8  6E03               	movwf	digitalWrite@value^0,c
  3563  006FDA  EC1D  F03B         	call	_digitalWrite	;wreg free
  3564  006FDE                     
  3565                           ;lcd.c: 105:  PORTD = cmd;
  3566  006FDE  C008  FF83         	movff	lcdCommand@cmd,3971	;volatile
  3567  006FE2                     
  3568                           ;lcd.c: 107:     digitalWrite(PIN_E1, 1);
  3569  006FE2  0E00               	movlw	0
  3570  006FE4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3571  006FE6  0E21               	movlw	33
  3572  006FE8  6E01               	movwf	digitalWrite@pin^0,c
  3573  006FEA  0E00               	movlw	0
  3574  006FEC  6E04               	movwf	(digitalWrite@value+1)^0,c
  3575  006FEE  0E01               	movlw	1
  3576  006FF0  6E03               	movwf	digitalWrite@value^0,c
  3577  006FF2  EC1D  F03B         	call	_digitalWrite	;wreg free
  3578  006FF6                     
  3579                           ;lcd.c: 108:  digitalWrite(PIN_E1, 0);
  3580  006FF6  0E00               	movlw	0
  3581  006FF8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3582  006FFA  0E21               	movlw	33
  3583  006FFC  6E01               	movwf	digitalWrite@pin^0,c
  3584  006FFE  0E00               	movlw	0
  3585  007000  6E04               	movwf	(digitalWrite@value+1)^0,c
  3586  007002  0E00               	movlw	0
  3587  007004  6E03               	movwf	digitalWrite@value^0,c
  3588  007006  EC1D  F03B         	call	_digitalWrite	;wreg free
  3589  00700A                     
  3590                           ;lcd.c: 111:     PORTD= old_D;
  3591  00700A  C007  FF83         	movff	lcdCommand@old_D,3971	;volatile
  3592  00700E                     
  3593                           ;lcd.c: 113:     if((cmd == 0x02)||(cmd == 0x01)){
  3594  00700E  0E02               	movlw	2
  3595  007010  1808               	xorwf	lcdCommand@cmd^0,w,c
  3596  007012  B4D8               	btfsc	status,2,c
  3597  007014  EF0E  F038         	goto	u1531
  3598  007018  EF10  F038         	goto	u1530
  3599  00701C                     u1531:
  3600  00701C  EF18  F038         	goto	l1779
  3601  007020                     u1530:
  3602  007020  0408               	decf	lcdCommand@cmd^0,w,c
  3603  007022  A4D8               	btfss	status,2,c
  3604  007024  EF16  F038         	goto	u1541
  3605  007028  EF18  F038         	goto	u1540
  3606  00702C                     u1541:
  3607  00702C  EF1C  F038         	goto	l1781
  3608  007030                     u1540:
  3609  007030                     l1779:
  3610                           
  3611                           ;lcd.c: 114:        Delay2ms();
  3612  007030  ECBE  F035         	call	_Delay2ms	;wreg free
  3613                           
  3614                           ;lcd.c: 115:     }else{
  3615  007034  EF1E  F038         	goto	l117
  3616  007038                     l1781:
  3617                           
  3618                           ;lcd.c: 116:     Delay40us();
  3619  007038  ECB2  F035         	call	_Delay40us	;wreg free
  3620  00703C                     l117:
  3621  00703C  0012               	return		;funcret
  3622  00703E                     __end_of_lcdCommand:
  3623                           	callstack 0
  3624                           
  3625 ;; *************** function _Delay2ms *****************
  3626 ;; Defined at:
  3627 ;;		line 85 in file "lcd.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;		None
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;  i               1    1[COMRAM] unsigned char 
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  1    wreg      void 
  3634 ;; Registers used:
  3635 ;;		wreg, status,2, status,0, cstack
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3641 ;;      Params:         0       0       0       0       0       0       0
  3642 ;;      Locals:         1       0       0       0       0       0       0
  3643 ;;      Temps:          0       0       0       0       0       0       0
  3644 ;;      Totals:         1       0       0       0       0       0       0
  3645 ;;Total ram usage:        1 bytes
  3646 ;; Hardware stack levels used: 1
  3647 ;; Hardware stack levels required when called: 1
  3648 ;; This function calls:
  3649 ;;		_Delay40us
  3650 ;; This function is called by:
  3651 ;;		_lcdCommand
  3652 ;;		_lcdInit
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           	psect	text21
  3657  006B7C                     __ptext21:
  3658                           	callstack 0
  3659  006B7C                     _Delay2ms:
  3660                           	callstack 27
  3661  006B7C                     
  3662                           ;lcd.c: 87:  unsigned char i;;lcd.c: 88:  for(i=0; i < 50; i++)
  3663  006B7C  0E00               	movlw	0
  3664  006B7E  6E02               	movwf	Delay2ms@i^0,c
  3665  006B80                     l1697:
  3666                           
  3667                           ;lcd.c: 89:  {;lcd.c: 90:   Delay40us();
  3668  006B80  ECB2  F035         	call	_Delay40us	;wreg free
  3669  006B84                     
  3670                           ;lcd.c: 91:  }
  3671  006B84  2A02               	incf	Delay2ms@i^0,f,c
  3672  006B86  0E31               	movlw	49
  3673  006B88  6402               	cpfsgt	Delay2ms@i^0,c
  3674  006B8A  EFC9  F035         	goto	u1301
  3675  006B8E  EFCB  F035         	goto	u1300
  3676  006B92                     u1301:
  3677  006B92  EFC0  F035         	goto	l1697
  3678  006B96                     u1300:
  3679  006B96  0012               	return		;funcret
  3680  006B98                     __end_of_Delay2ms:
  3681                           	callstack 0
  3682                           
  3683 ;; *************** function _lcdData *****************
  3684 ;; Defined at:
  3685 ;;		line 122 in file "lcd.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;  valor           1    wreg     unsigned char 
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;  valor           1    6[COMRAM] unsigned char 
  3690 ;;  old_D           1    7[COMRAM] unsigned char 
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  1    wreg      void 
  3693 ;; Registers used:
  3694 ;;		wreg, status,2, status,0, cstack
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3700 ;;      Params:         0       0       0       0       0       0       0
  3701 ;;      Locals:         2       0       0       0       0       0       0
  3702 ;;      Temps:          0       0       0       0       0       0       0
  3703 ;;      Totals:         2       0       0       0       0       0       0
  3704 ;;Total ram usage:        2 bytes
  3705 ;; Hardware stack levels used: 1
  3706 ;; Hardware stack levels required when called: 1
  3707 ;; This function calls:
  3708 ;;		_Delay40us
  3709 ;;		_digitalWrite
  3710 ;; This function is called by:
  3711 ;;		_inicio
  3712 ;;		_impressao
  3713 ;;		_impressaoponto
  3714 ;;		_main
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           
  3718                           	psect	text22
  3719  006C4C                     __ptext22:
  3720                           	callstack 0
  3721  006C4C                     _lcdData:
  3722                           	callstack 29
  3723                           
  3724                           ;incstack = 0
  3725                           ;lcdData@valor stored from wreg
  3726  006C4C  6E07               	movwf	lcdData@valor^0,c
  3727  006C4E                     
  3728                           ;lcd.c: 122: void lcdData(unsigned char valor);lcd.c: 123: {;lcd.c: 125:     unsigned ch
      +                          ar old_D;;lcd.c: 126:     old_D = PORTD;
  3729  006C4E  CF83 F008          	movff	3971,lcdData@old_D	;volatile
  3730  006C52                     
  3731                           ;lcd.c: 128:     TRISD = 0x00;
  3732  006C52  0E00               	movlw	0
  3733  006C54  6E95               	movwf	149,c	;volatile
  3734  006C56                     
  3735                           ;lcd.c: 129:  digitalWrite(PIN_E2, 1);
  3736  006C56  0E00               	movlw	0
  3737  006C58  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3738  006C5A  0E22               	movlw	34
  3739  006C5C  6E01               	movwf	digitalWrite@pin^0,c
  3740  006C5E  0E00               	movlw	0
  3741  006C60  6E04               	movwf	(digitalWrite@value+1)^0,c
  3742  006C62  0E01               	movlw	1
  3743  006C64  6E03               	movwf	digitalWrite@value^0,c
  3744  006C66  EC1D  F03B         	call	_digitalWrite	;wreg free
  3745  006C6A                     
  3746                           ;lcd.c: 131:  PORTD = valor;
  3747  006C6A  C007  FF83         	movff	lcdData@valor,3971	;volatile
  3748  006C6E                     
  3749                           ;lcd.c: 133:     digitalWrite(PIN_E1, 1);
  3750  006C6E  0E00               	movlw	0
  3751  006C70  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3752  006C72  0E21               	movlw	33
  3753  006C74  6E01               	movwf	digitalWrite@pin^0,c
  3754  006C76  0E00               	movlw	0
  3755  006C78  6E04               	movwf	(digitalWrite@value+1)^0,c
  3756  006C7A  0E01               	movlw	1
  3757  006C7C  6E03               	movwf	digitalWrite@value^0,c
  3758  006C7E  EC1D  F03B         	call	_digitalWrite	;wreg free
  3759  006C82                     
  3760                           ;lcd.c: 134:  digitalWrite(PIN_E1, 0);
  3761  006C82  0E00               	movlw	0
  3762  006C84  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3763  006C86  0E21               	movlw	33
  3764  006C88  6E01               	movwf	digitalWrite@pin^0,c
  3765  006C8A  0E00               	movlw	0
  3766  006C8C  6E04               	movwf	(digitalWrite@value+1)^0,c
  3767  006C8E  0E00               	movlw	0
  3768  006C90  6E03               	movwf	digitalWrite@value^0,c
  3769  006C92  EC1D  F03B         	call	_digitalWrite	;wreg free
  3770  006C96                     
  3771                           ;lcd.c: 136:     PORTD= old_D;
  3772  006C96  C008  FF83         	movff	lcdData@old_D,3971	;volatile
  3773  006C9A                     
  3774                           ;lcd.c: 138:  Delay40us();
  3775  006C9A  ECB2  F035         	call	_Delay40us	;wreg free
  3776  006C9E  0012               	return		;funcret
  3777  006CA0                     __end_of_lcdData:
  3778                           	callstack 0
  3779                           
  3780 ;; *************** function _digitalWrite *****************
  3781 ;; Defined at:
  3782 ;;		line 14 in file "io.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;  pin             2    0[COMRAM] int 
  3785 ;;  value           2    2[COMRAM] int 
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;		None
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      void 
  3790 ;; Registers used:
  3791 ;;		wreg, status,2, status,0
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3797 ;;      Params:         4       0       0       0       0       0       0
  3798 ;;      Locals:         0       0       0       0       0       0       0
  3799 ;;      Temps:          2       0       0       0       0       0       0
  3800 ;;      Totals:         6       0       0       0       0       0       0
  3801 ;;Total ram usage:        6 bytes
  3802 ;; Hardware stack levels used: 1
  3803 ;; This function calls:
  3804 ;;		Nothing
  3805 ;; This function is called by:
  3806 ;;		_lcdCommand
  3807 ;;		_lcdData
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           	psect	text23
  3812  00763A                     __ptext23:
  3813                           	callstack 0
  3814  00763A                     _digitalWrite:
  3815                           	callstack 28
  3816  00763A                     
  3817                           ;io.c: 16:     if(pin <8){
  3818  00763A  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3819  00763C  EF2B  F03B         	goto	u1100
  3820  007640  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3821  007642  E107               	bnz	u1101
  3822  007644  0E08               	movlw	8
  3823  007646  5C01               	subwf	digitalWrite@pin^0,w,c
  3824  007648  B0D8               	btfsc	status,0,c
  3825  00764A  EF29  F03B         	goto	u1101
  3826  00764E  EF2B  F03B         	goto	u1100
  3827  007652                     u1101:
  3828  007652  EF55  F03B         	goto	l1659
  3829  007656                     u1100:
  3830  007656                     
  3831                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  3832  007656  5003               	movf	digitalWrite@value^0,w,c
  3833  007658  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3834  00765A  B4D8               	btfsc	status,2,c
  3835  00765C  EF32  F03B         	goto	u1111
  3836  007660  EF34  F03B         	goto	u1110
  3837  007664                     u1111:
  3838  007664  EF44  F03B         	goto	l1657
  3839  007668                     u1110:
  3840  007668  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3841  00766C  0E01               	movlw	1
  3842  00766E  6E06               	movwf	(??_digitalWrite+1)^0,c
  3843  007670  2A05               	incf	??_digitalWrite^0,f,c
  3844  007672  EF3D  F03B         	goto	u1124
  3845  007676                     u1125:
  3846  007676  90D8               	bcf	status,0,c
  3847  007678  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3848  00767A                     u1124:
  3849  00767A  2E05               	decfsz	??_digitalWrite^0,f,c
  3850  00767C  EF3B  F03B         	goto	u1125
  3851  007680  5006               	movf	(??_digitalWrite+1)^0,w,c
  3852  007682  1280               	iorwf	128,f,c	;volatile
  3853  007684  EF43  F03C         	goto	l42
  3854  007688                     l1657:
  3855  007688  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3856  00768C  0E01               	movlw	1
  3857  00768E  6E06               	movwf	(??_digitalWrite+1)^0,c
  3858  007690  2A05               	incf	??_digitalWrite^0,f,c
  3859  007692  EF4D  F03B         	goto	u1134
  3860  007696                     u1135:
  3861  007696  90D8               	bcf	status,0,c
  3862  007698  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3863  00769A                     u1134:
  3864  00769A  2E05               	decfsz	??_digitalWrite^0,f,c
  3865  00769C  EF4B  F03B         	goto	u1135
  3866  0076A0  5006               	movf	(??_digitalWrite+1)^0,w,c
  3867  0076A2  0AFF               	xorlw	255
  3868  0076A4  1680               	andwf	128,f,c	;volatile
  3869  0076A6  EF43  F03C         	goto	l42
  3870  0076AA                     l1659:
  3871  0076AA  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3872  0076AC  EF63  F03B         	goto	u1140
  3873  0076B0  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3874  0076B2  E107               	bnz	u1141
  3875  0076B4  0E10               	movlw	16
  3876  0076B6  5C01               	subwf	digitalWrite@pin^0,w,c
  3877  0076B8  B0D8               	btfsc	status,0,c
  3878  0076BA  EF61  F03B         	goto	u1141
  3879  0076BE  EF63  F03B         	goto	u1140
  3880  0076C2                     u1141:
  3881  0076C2  EF91  F03B         	goto	l1667
  3882  0076C6                     u1140:
  3883  0076C6                     
  3884                           ;io.c: 20:         pin -=8;
  3885  0076C6  0EF8               	movlw	248
  3886  0076C8  2601               	addwf	digitalWrite@pin^0,f,c
  3887  0076CA  0EFF               	movlw	255
  3888  0076CC  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3889                           
  3890                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  3891  0076CE  5003               	movf	digitalWrite@value^0,w,c
  3892  0076D0  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3893  0076D2  B4D8               	btfsc	status,2,c
  3894  0076D4  EF6E  F03B         	goto	u1151
  3895  0076D8  EF70  F03B         	goto	u1150
  3896  0076DC                     u1151:
  3897  0076DC  EF80  F03B         	goto	l1665
  3898  0076E0                     u1150:
  3899  0076E0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3900  0076E4  0E01               	movlw	1
  3901  0076E6  6E06               	movwf	(??_digitalWrite+1)^0,c
  3902  0076E8  2A05               	incf	??_digitalWrite^0,f,c
  3903  0076EA  EF79  F03B         	goto	u1164
  3904  0076EE                     u1165:
  3905  0076EE  90D8               	bcf	status,0,c
  3906  0076F0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3907  0076F2                     u1164:
  3908  0076F2  2E05               	decfsz	??_digitalWrite^0,f,c
  3909  0076F4  EF77  F03B         	goto	u1165
  3910  0076F8  5006               	movf	(??_digitalWrite+1)^0,w,c
  3911  0076FA  1281               	iorwf	129,f,c	;volatile
  3912  0076FC  EF43  F03C         	goto	l42
  3913  007700                     l1665:
  3914  007700  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3915  007704  0E01               	movlw	1
  3916  007706  6E06               	movwf	(??_digitalWrite+1)^0,c
  3917  007708  2A05               	incf	??_digitalWrite^0,f,c
  3918  00770A  EF89  F03B         	goto	u1174
  3919  00770E                     u1175:
  3920  00770E  90D8               	bcf	status,0,c
  3921  007710  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3922  007712                     u1174:
  3923  007712  2E05               	decfsz	??_digitalWrite^0,f,c
  3924  007714  EF87  F03B         	goto	u1175
  3925  007718  5006               	movf	(??_digitalWrite+1)^0,w,c
  3926  00771A  0AFF               	xorlw	255
  3927  00771C  1681               	andwf	129,f,c	;volatile
  3928  00771E  EF43  F03C         	goto	l42
  3929  007722                     l1667:
  3930  007722  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3931  007724  EF9F  F03B         	goto	u1180
  3932  007728  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3933  00772A  E107               	bnz	u1181
  3934  00772C  0E18               	movlw	24
  3935  00772E  5C01               	subwf	digitalWrite@pin^0,w,c
  3936  007730  B0D8               	btfsc	status,0,c
  3937  007732  EF9D  F03B         	goto	u1181
  3938  007736  EF9F  F03B         	goto	u1180
  3939  00773A                     u1181:
  3940  00773A  EFCD  F03B         	goto	l1675
  3941  00773E                     u1180:
  3942  00773E                     
  3943                           ;io.c: 24:         pin -=16;
  3944  00773E  0EF0               	movlw	240
  3945  007740  2601               	addwf	digitalWrite@pin^0,f,c
  3946  007742  0EFF               	movlw	255
  3947  007744  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3948                           
  3949                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  3950  007746  5003               	movf	digitalWrite@value^0,w,c
  3951  007748  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3952  00774A  B4D8               	btfsc	status,2,c
  3953  00774C  EFAA  F03B         	goto	u1191
  3954  007750  EFAC  F03B         	goto	u1190
  3955  007754                     u1191:
  3956  007754  EFBC  F03B         	goto	l1673
  3957  007758                     u1190:
  3958  007758  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3959  00775C  0E01               	movlw	1
  3960  00775E  6E06               	movwf	(??_digitalWrite+1)^0,c
  3961  007760  2A05               	incf	??_digitalWrite^0,f,c
  3962  007762  EFB5  F03B         	goto	u1204
  3963  007766                     u1205:
  3964  007766  90D8               	bcf	status,0,c
  3965  007768  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3966  00776A                     u1204:
  3967  00776A  2E05               	decfsz	??_digitalWrite^0,f,c
  3968  00776C  EFB3  F03B         	goto	u1205
  3969  007770  5006               	movf	(??_digitalWrite+1)^0,w,c
  3970  007772  1282               	iorwf	130,f,c	;volatile
  3971  007774  EF43  F03C         	goto	l42
  3972  007778                     l1673:
  3973  007778  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3974  00777C  0E01               	movlw	1
  3975  00777E  6E06               	movwf	(??_digitalWrite+1)^0,c
  3976  007780  2A05               	incf	??_digitalWrite^0,f,c
  3977  007782  EFC5  F03B         	goto	u1214
  3978  007786                     u1215:
  3979  007786  90D8               	bcf	status,0,c
  3980  007788  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3981  00778A                     u1214:
  3982  00778A  2E05               	decfsz	??_digitalWrite^0,f,c
  3983  00778C  EFC3  F03B         	goto	u1215
  3984  007790  5006               	movf	(??_digitalWrite+1)^0,w,c
  3985  007792  0AFF               	xorlw	255
  3986  007794  1682               	andwf	130,f,c	;volatile
  3987  007796  EF43  F03C         	goto	l42
  3988  00779A                     l1675:
  3989  00779A  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3990  00779C  EFDB  F03B         	goto	u1220
  3991  0077A0  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3992  0077A2  E107               	bnz	u1221
  3993  0077A4  0E20               	movlw	32
  3994  0077A6  5C01               	subwf	digitalWrite@pin^0,w,c
  3995  0077A8  B0D8               	btfsc	status,0,c
  3996  0077AA  EFD9  F03B         	goto	u1221
  3997  0077AE  EFDB  F03B         	goto	u1220
  3998  0077B2                     u1221:
  3999  0077B2  EF09  F03C         	goto	l1683
  4000  0077B6                     u1220:
  4001  0077B6                     
  4002                           ;io.c: 28:         pin -=24;
  4003  0077B6  0EE8               	movlw	232
  4004  0077B8  2601               	addwf	digitalWrite@pin^0,f,c
  4005  0077BA  0EFF               	movlw	255
  4006  0077BC  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4007                           
  4008                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  4009  0077BE  5003               	movf	digitalWrite@value^0,w,c
  4010  0077C0  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4011  0077C2  B4D8               	btfsc	status,2,c
  4012  0077C4  EFE6  F03B         	goto	u1231
  4013  0077C8  EFE8  F03B         	goto	u1230
  4014  0077CC                     u1231:
  4015  0077CC  EFF8  F03B         	goto	l1681
  4016  0077D0                     u1230:
  4017  0077D0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4018  0077D4  0E01               	movlw	1
  4019  0077D6  6E06               	movwf	(??_digitalWrite+1)^0,c
  4020  0077D8  2A05               	incf	??_digitalWrite^0,f,c
  4021  0077DA  EFF1  F03B         	goto	u1244
  4022  0077DE                     u1245:
  4023  0077DE  90D8               	bcf	status,0,c
  4024  0077E0  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4025  0077E2                     u1244:
  4026  0077E2  2E05               	decfsz	??_digitalWrite^0,f,c
  4027  0077E4  EFEF  F03B         	goto	u1245
  4028  0077E8  5006               	movf	(??_digitalWrite+1)^0,w,c
  4029  0077EA  1283               	iorwf	131,f,c	;volatile
  4030  0077EC  EF43  F03C         	goto	l42
  4031  0077F0                     l1681:
  4032  0077F0  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4033  0077F4  0E01               	movlw	1
  4034  0077F6  6E06               	movwf	(??_digitalWrite+1)^0,c
  4035  0077F8  2A05               	incf	??_digitalWrite^0,f,c
  4036  0077FA  EF01  F03C         	goto	u1254
  4037  0077FE                     u1255:
  4038  0077FE  90D8               	bcf	status,0,c
  4039  007800  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4040  007802                     u1254:
  4041  007802  2E05               	decfsz	??_digitalWrite^0,f,c
  4042  007804  EFFF  F03B         	goto	u1255
  4043  007808  5006               	movf	(??_digitalWrite+1)^0,w,c
  4044  00780A  0AFF               	xorlw	255
  4045  00780C  1683               	andwf	131,f,c	;volatile
  4046  00780E  EF43  F03C         	goto	l42
  4047  007812                     l1683:
  4048  007812  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4049  007814  EF17  F03C         	goto	u1260
  4050  007818  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4051  00781A  E107               	bnz	u1261
  4052  00781C  0E28               	movlw	40
  4053  00781E  5C01               	subwf	digitalWrite@pin^0,w,c
  4054  007820  B0D8               	btfsc	status,0,c
  4055  007822  EF15  F03C         	goto	u1261
  4056  007826  EF17  F03C         	goto	u1260
  4057  00782A                     u1261:
  4058  00782A  EF43  F03C         	goto	l42
  4059  00782E                     u1260:
  4060  00782E                     
  4061                           ;io.c: 32:         pin -=32;
  4062  00782E  0EE0               	movlw	224
  4063  007830  2601               	addwf	digitalWrite@pin^0,f,c
  4064  007832  0EFF               	movlw	255
  4065  007834  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4066                           
  4067                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  4068  007836  5003               	movf	digitalWrite@value^0,w,c
  4069  007838  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4070  00783A  B4D8               	btfsc	status,2,c
  4071  00783C  EF22  F03C         	goto	u1271
  4072  007840  EF24  F03C         	goto	u1270
  4073  007844                     u1271:
  4074  007844  EF34  F03C         	goto	l1689
  4075  007848                     u1270:
  4076  007848  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4077  00784C  0E01               	movlw	1
  4078  00784E  6E06               	movwf	(??_digitalWrite+1)^0,c
  4079  007850  2A05               	incf	??_digitalWrite^0,f,c
  4080  007852  EF2D  F03C         	goto	u1284
  4081  007856                     u1285:
  4082  007856  90D8               	bcf	status,0,c
  4083  007858  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4084  00785A                     u1284:
  4085  00785A  2E05               	decfsz	??_digitalWrite^0,f,c
  4086  00785C  EF2B  F03C         	goto	u1285
  4087  007860  5006               	movf	(??_digitalWrite+1)^0,w,c
  4088  007862  1284               	iorwf	132,f,c	;volatile
  4089  007864  EF43  F03C         	goto	l42
  4090  007868                     l1689:
  4091  007868  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4092  00786C  0E01               	movlw	1
  4093  00786E  6E06               	movwf	(??_digitalWrite+1)^0,c
  4094  007870  2A05               	incf	??_digitalWrite^0,f,c
  4095  007872  EF3D  F03C         	goto	u1294
  4096  007876                     u1295:
  4097  007876  90D8               	bcf	status,0,c
  4098  007878  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4099  00787A                     u1294:
  4100  00787A  2E05               	decfsz	??_digitalWrite^0,f,c
  4101  00787C  EF3B  F03C         	goto	u1295
  4102  007880  5006               	movf	(??_digitalWrite+1)^0,w,c
  4103  007882  0AFF               	xorlw	255
  4104  007884  1684               	andwf	132,f,c	;volatile
  4105  007886                     l42:
  4106  007886  0012               	return		;funcret
  4107  007888                     __end_of_digitalWrite:
  4108                           	callstack 0
  4109                           
  4110 ;; *************** function _Delay40us *****************
  4111 ;; Defined at:
  4112 ;;		line 79 in file "lcd.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;		None
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;  i               1    0[COMRAM] unsigned char 
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  1    wreg      void 
  4119 ;; Registers used:
  4120 ;;		wreg, status,2, status,0
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4126 ;;      Params:         0       0       0       0       0       0       0
  4127 ;;      Locals:         1       0       0       0       0       0       0
  4128 ;;      Temps:          0       0       0       0       0       0       0
  4129 ;;      Totals:         1       0       0       0       0       0       0
  4130 ;;Total ram usage:        1 bytes
  4131 ;; Hardware stack levels used: 1
  4132 ;; This function calls:
  4133 ;;		Nothing
  4134 ;; This function is called by:
  4135 ;;		_Delay2ms
  4136 ;;		_lcdCommand
  4137 ;;		_lcdData
  4138 ;; This function uses a non-reentrant model
  4139 ;;
  4140                           
  4141                           	psect	text24
  4142  006B64                     __ptext24:
  4143                           	callstack 0
  4144  006B64                     _Delay40us:
  4145                           	callstack 28
  4146  006B64                     
  4147                           ;lcd.c: 81:  unsigned char i;;lcd.c: 82:  for(i=0; i < 25; i++);
  4148  006B64  0E00               	movlw	0
  4149  006B66  6E01               	movwf	Delay40us@i^0,c
  4150  006B68                     l1647:
  4151  006B68  2A01               	incf	Delay40us@i^0,f,c
  4152  006B6A  0E18               	movlw	24
  4153  006B6C  6401               	cpfsgt	Delay40us@i^0,c
  4154  006B6E  EFBB  F035         	goto	u1091
  4155  006B72  EFBD  F035         	goto	u1090
  4156  006B76                     u1091:
  4157  006B76  EFB4  F035         	goto	l1647
  4158  006B7A                     u1090:
  4159  006B7A  0012               	return		;funcret
  4160  006B7C                     __end_of_Delay40us:
  4161                           	callstack 0
  4162                           
  4163 ;; *************** function ___lmul *****************
  4164 ;; Defined at:
  4165 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul32.c"
  4166 ;; Parameters:    Size  Location     Type
  4167 ;;  multiplier      4    0[COMRAM] unsigned long 
  4168 ;;  multiplicand    4    4[COMRAM] unsigned long 
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;  product         4    8[COMRAM] unsigned long 
  4171 ;; Return value:  Size  Location     Type
  4172 ;;                  4    0[COMRAM] unsigned long 
  4173 ;; Registers used:
  4174 ;;		wreg, status,2, status,0
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4180 ;;      Params:         8       0       0       0       0       0       0
  4181 ;;      Locals:         4       0       0       0       0       0       0
  4182 ;;      Temps:          0       0       0       0       0       0       0
  4183 ;;      Totals:        12       0       0       0       0       0       0
  4184 ;;Total ram usage:       12 bytes
  4185 ;; Hardware stack levels used: 1
  4186 ;; This function calls:
  4187 ;;		Nothing
  4188 ;; This function is called by:
  4189 ;;		_main
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           	psect	text25
  4194  006CA0                     __ptext25:
  4195                           	callstack 0
  4196  006CA0                     ___lmul:
  4197                           	callstack 30
  4198  006CA0  0E00               	movlw	0
  4199  006CA2  6E09               	movwf	___lmul@product^0,c
  4200  006CA4  0E00               	movlw	0
  4201  006CA6  6E0A               	movwf	(___lmul@product+1)^0,c
  4202  006CA8  0E00               	movlw	0
  4203  006CAA  6E0B               	movwf	(___lmul@product+2)^0,c
  4204  006CAC  0E00               	movlw	0
  4205  006CAE  6E0C               	movwf	(___lmul@product+3)^0,c
  4206  006CB0                     l2053:
  4207  006CB0  A001               	btfss	___lmul@multiplier^0,0,c
  4208  006CB2  EF5D  F036         	goto	u1831
  4209  006CB6  EF5F  F036         	goto	u1830
  4210  006CBA                     u1831:
  4211  006CBA  EF67  F036         	goto	l2057
  4212  006CBE                     u1830:
  4213  006CBE  5005               	movf	___lmul@multiplicand^0,w,c
  4214  006CC0  2609               	addwf	___lmul@product^0,f,c
  4215  006CC2  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  4216  006CC4  220A               	addwfc	(___lmul@product+1)^0,f,c
  4217  006CC6  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  4218  006CC8  220B               	addwfc	(___lmul@product+2)^0,f,c
  4219  006CCA  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  4220  006CCC  220C               	addwfc	(___lmul@product+3)^0,f,c
  4221  006CCE                     l2057:
  4222  006CCE  90D8               	bcf	status,0,c
  4223  006CD0  3605               	rlcf	___lmul@multiplicand^0,f,c
  4224  006CD2  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4225  006CD4  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4226  006CD6  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4227  006CD8  90D8               	bcf	status,0,c
  4228  006CDA  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  4229  006CDC  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  4230  006CDE  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  4231  006CE0  3201               	rrcf	___lmul@multiplier^0,f,c
  4232  006CE2  5001               	movf	___lmul@multiplier^0,w,c
  4233  006CE4  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  4234  006CE6  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  4235  006CE8  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  4236  006CEA  A4D8               	btfss	status,2,c
  4237  006CEC  EF7A  F036         	goto	u1841
  4238  006CF0  EF7C  F036         	goto	u1840
  4239  006CF4                     u1841:
  4240  006CF4  EF58  F036         	goto	l2053
  4241  006CF8                     u1840:
  4242  006CF8  C009  F001         	movff	___lmul@product,?___lmul
  4243  006CFC  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  4244  006D00  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  4245  006D04  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  4246  006D08  0012               	return		;funcret
  4247  006D0A                     __end_of___lmul:
  4248                           	callstack 0
  4249                           
  4250 ;; *************** function ___llmod *****************
  4251 ;; Defined at:
  4252 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\llmod.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;  dividend        4   13[COMRAM] unsigned long 
  4255 ;;  divisor         4   17[COMRAM] unsigned long 
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;  counter         1   21[COMRAM] unsigned char 
  4258 ;; Return value:  Size  Location     Type
  4259 ;;                  4   13[COMRAM] unsigned long 
  4260 ;; Registers used:
  4261 ;;		wreg, status,2, status,0
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4267 ;;      Params:         8       0       0       0       0       0       0
  4268 ;;      Locals:         1       0       0       0       0       0       0
  4269 ;;      Temps:          0       0       0       0       0       0       0
  4270 ;;      Totals:         9       0       0       0       0       0       0
  4271 ;;Total ram usage:        9 bytes
  4272 ;; Hardware stack levels used: 1
  4273 ;; This function calls:
  4274 ;;		Nothing
  4275 ;; This function is called by:
  4276 ;;		_main
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text26
  4281  00703E                     __ptext26:
  4282                           	callstack 0
  4283  00703E                     ___llmod:
  4284                           	callstack 30
  4285  00703E  5012               	movf	___llmod@divisor^0,w,c
  4286  007040  1013               	iorwf	(___llmod@divisor+1)^0,w,c
  4287  007042  1014               	iorwf	(___llmod@divisor+2)^0,w,c
  4288  007044  1015               	iorwf	(___llmod@divisor+3)^0,w,c
  4289  007046  B4D8               	btfsc	status,2,c
  4290  007048  EF28  F038         	goto	u1881
  4291  00704C  EF2A  F038         	goto	u1880
  4292  007050                     u1881:
  4293  007050  EF5A  F038         	goto	l688
  4294  007054                     u1880:
  4295  007054  0E01               	movlw	1
  4296  007056  6E16               	movwf	___llmod@counter^0,c
  4297  007058  EF34  F038         	goto	l2089
  4298  00705C                     l2087:
  4299  00705C  90D8               	bcf	status,0,c
  4300  00705E  3612               	rlcf	___llmod@divisor^0,f,c
  4301  007060  3613               	rlcf	(___llmod@divisor+1)^0,f,c
  4302  007062  3614               	rlcf	(___llmod@divisor+2)^0,f,c
  4303  007064  3615               	rlcf	(___llmod@divisor+3)^0,f,c
  4304  007066  2A16               	incf	___llmod@counter^0,f,c
  4305  007068                     l2089:
  4306  007068  AE15               	btfss	(___llmod@divisor+3)^0,7,c
  4307  00706A  EF39  F038         	goto	u1891
  4308  00706E  EF3B  F038         	goto	u1890
  4309  007072                     u1891:
  4310  007072  EF2E  F038         	goto	l2087
  4311  007076                     u1890:
  4312  007076                     l2091:
  4313  007076  5012               	movf	___llmod@divisor^0,w,c
  4314  007078  5C0E               	subwf	___llmod@dividend^0,w,c
  4315  00707A  5013               	movf	(___llmod@divisor+1)^0,w,c
  4316  00707C  580F               	subwfb	(___llmod@dividend+1)^0,w,c
  4317  00707E  5014               	movf	(___llmod@divisor+2)^0,w,c
  4318  007080  5810               	subwfb	(___llmod@dividend+2)^0,w,c
  4319  007082  5015               	movf	(___llmod@divisor+3)^0,w,c
  4320  007084  5811               	subwfb	(___llmod@dividend+3)^0,w,c
  4321  007086  A0D8               	btfss	status,0,c
  4322  007088  EF48  F038         	goto	u1901
  4323  00708C  EF4A  F038         	goto	u1900
  4324  007090                     u1901:
  4325  007090  EF52  F038         	goto	l2095
  4326  007094                     u1900:
  4327  007094  5012               	movf	___llmod@divisor^0,w,c
  4328  007096  5E0E               	subwf	___llmod@dividend^0,f,c
  4329  007098  5013               	movf	(___llmod@divisor+1)^0,w,c
  4330  00709A  5A0F               	subwfb	(___llmod@dividend+1)^0,f,c
  4331  00709C  5014               	movf	(___llmod@divisor+2)^0,w,c
  4332  00709E  5A10               	subwfb	(___llmod@dividend+2)^0,f,c
  4333  0070A0  5015               	movf	(___llmod@divisor+3)^0,w,c
  4334  0070A2  5A11               	subwfb	(___llmod@dividend+3)^0,f,c
  4335  0070A4                     l2095:
  4336  0070A4  90D8               	bcf	status,0,c
  4337  0070A6  3215               	rrcf	(___llmod@divisor+3)^0,f,c
  4338  0070A8  3214               	rrcf	(___llmod@divisor+2)^0,f,c
  4339  0070AA  3213               	rrcf	(___llmod@divisor+1)^0,f,c
  4340  0070AC  3212               	rrcf	___llmod@divisor^0,f,c
  4341  0070AE  2E16               	decfsz	___llmod@counter^0,f,c
  4342  0070B0  EF3B  F038         	goto	l2091
  4343  0070B4                     l688:
  4344  0070B4  C00E  F00E         	movff	___llmod@dividend,?___llmod
  4345  0070B8  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  4346  0070BC  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  4347  0070C0  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  4348  0070C4  0012               	return		;funcret
  4349  0070C6                     __end_of___llmod:
  4350                           	callstack 0
  4351                           
  4352 ;; *************** function ___lldiv *****************
  4353 ;; Defined at:
  4354 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
  4355 ;; Parameters:    Size  Location     Type
  4356 ;;  dividend        4    0[COMRAM] unsigned long 
  4357 ;;  divisor         4    4[COMRAM] unsigned long 
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;  quotient        4    8[COMRAM] unsigned long 
  4360 ;;  counter         1   12[COMRAM] unsigned char 
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  4    0[COMRAM] unsigned long 
  4363 ;; Registers used:
  4364 ;;		wreg, status,2, status,0
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4370 ;;      Params:         8       0       0       0       0       0       0
  4371 ;;      Locals:         5       0       0       0       0       0       0
  4372 ;;      Temps:          0       0       0       0       0       0       0
  4373 ;;      Totals:        13       0       0       0       0       0       0
  4374 ;;Total ram usage:       13 bytes
  4375 ;; Hardware stack levels used: 1
  4376 ;; This function calls:
  4377 ;;		Nothing
  4378 ;; This function is called by:
  4379 ;;		_main
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           	psect	text27
  4384  0070C6                     __ptext27:
  4385                           	callstack 0
  4386  0070C6                     ___lldiv:
  4387                           	callstack 30
  4388  0070C6  0E00               	movlw	0
  4389  0070C8  6E09               	movwf	___lldiv@quotient^0,c
  4390  0070CA  0E00               	movlw	0
  4391  0070CC  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  4392  0070CE  0E00               	movlw	0
  4393  0070D0  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  4394  0070D2  0E00               	movlw	0
  4395  0070D4  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  4396  0070D6  5005               	movf	___lldiv@divisor^0,w,c
  4397  0070D8  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  4398  0070DA  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  4399  0070DC  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  4400  0070DE  B4D8               	btfsc	status,2,c
  4401  0070E0  EF74  F038         	goto	u1851
  4402  0070E4  EF76  F038         	goto	u1850
  4403  0070E8                     u1851:
  4404  0070E8  EFAC  F038         	goto	l295
  4405  0070EC                     u1850:
  4406  0070EC  0E01               	movlw	1
  4407  0070EE  6E0D               	movwf	___lldiv@counter^0,c
  4408  0070F0  EF80  F038         	goto	l2069
  4409  0070F4                     l2067:
  4410  0070F4  90D8               	bcf	status,0,c
  4411  0070F6  3605               	rlcf	___lldiv@divisor^0,f,c
  4412  0070F8  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  4413  0070FA  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  4414  0070FC  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  4415  0070FE  2A0D               	incf	___lldiv@counter^0,f,c
  4416  007100                     l2069:
  4417  007100  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  4418  007102  EF85  F038         	goto	u1861
  4419  007106  EF87  F038         	goto	u1860
  4420  00710A                     u1861:
  4421  00710A  EF7A  F038         	goto	l2067
  4422  00710E                     u1860:
  4423  00710E                     l2071:
  4424  00710E  90D8               	bcf	status,0,c
  4425  007110  3609               	rlcf	___lldiv@quotient^0,f,c
  4426  007112  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  4427  007114  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  4428  007116  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  4429  007118  5005               	movf	___lldiv@divisor^0,w,c
  4430  00711A  5C01               	subwf	___lldiv@dividend^0,w,c
  4431  00711C  5006               	movf	(___lldiv@divisor+1)^0,w,c
  4432  00711E  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  4433  007120  5007               	movf	(___lldiv@divisor+2)^0,w,c
  4434  007122  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  4435  007124  5008               	movf	(___lldiv@divisor+3)^0,w,c
  4436  007126  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  4437  007128  A0D8               	btfss	status,0,c
  4438  00712A  EF99  F038         	goto	u1871
  4439  00712E  EF9B  F038         	goto	u1870
  4440  007132                     u1871:
  4441  007132  EFA4  F038         	goto	l2079
  4442  007136                     u1870:
  4443  007136  5005               	movf	___lldiv@divisor^0,w,c
  4444  007138  5E01               	subwf	___lldiv@dividend^0,f,c
  4445  00713A  5006               	movf	(___lldiv@divisor+1)^0,w,c
  4446  00713C  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  4447  00713E  5007               	movf	(___lldiv@divisor+2)^0,w,c
  4448  007140  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  4449  007142  5008               	movf	(___lldiv@divisor+3)^0,w,c
  4450  007144  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  4451  007146  8009               	bsf	___lldiv@quotient^0,0,c
  4452  007148                     l2079:
  4453  007148  90D8               	bcf	status,0,c
  4454  00714A  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  4455  00714C  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  4456  00714E  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  4457  007150  3205               	rrcf	___lldiv@divisor^0,f,c
  4458  007152  2E0D               	decfsz	___lldiv@counter^0,f,c
  4459  007154  EF87  F038         	goto	l2071
  4460  007158                     l295:
  4461  007158  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4462  00715C  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4463  007160  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4464  007164  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4465  007168  0012               	return		;funcret
  4466  00716A                     __end_of___lldiv:
  4467                           	callstack 0
  4468  0000                     
  4469                           	psect	rparam
  4470  0000                     
  4471                           	psect	idloc
  4472                           
  4473                           ;Config register IDLOC0 @ 0x200000
  4474                           ;	unspecified, using default values
  4475  200000                     	org	2097152
  4476  200000  FF                 	db	255
  4477                           
  4478                           ;Config register IDLOC1 @ 0x200001
  4479                           ;	unspecified, using default values
  4480  200001                     	org	2097153
  4481  200001  FF                 	db	255
  4482                           
  4483                           ;Config register IDLOC2 @ 0x200002
  4484                           ;	unspecified, using default values
  4485  200002                     	org	2097154
  4486  200002  FF                 	db	255
  4487                           
  4488                           ;Config register IDLOC3 @ 0x200003
  4489                           ;	unspecified, using default values
  4490  200003                     	org	2097155
  4491  200003  FF                 	db	255
  4492                           
  4493                           ;Config register IDLOC4 @ 0x200004
  4494                           ;	unspecified, using default values
  4495  200004                     	org	2097156
  4496  200004  FF                 	db	255
  4497                           
  4498                           ;Config register IDLOC5 @ 0x200005
  4499                           ;	unspecified, using default values
  4500  200005                     	org	2097157
  4501  200005  FF                 	db	255
  4502                           
  4503                           ;Config register IDLOC6 @ 0x200006
  4504                           ;	unspecified, using default values
  4505  200006                     	org	2097158
  4506  200006  FF                 	db	255
  4507                           
  4508                           ;Config register IDLOC7 @ 0x200007
  4509                           ;	unspecified, using default values
  4510  200007                     	org	2097159
  4511  200007  FF                 	db	255
  4512                           
  4513                           	psect	config
  4514                           
  4515                           ; Padding undefined space
  4516  300000                     	org	3145728
  4517  300000  FF                 	db	255
  4518                           
  4519                           ;Config register CONFIG1H @ 0x300001
  4520                           ;	Oscillator Selection bits
  4521                           ;	OSC = HS, HS oscillator
  4522                           ;	Fail-Safe Clock Monitor Enable bit
  4523                           ;	FCMEN = 0x0, unprogrammed default
  4524                           ;	Internal/External Oscillator Switchover bit
  4525                           ;	IESO = 0x0, unprogrammed default
  4526  300001                     	org	3145729
  4527  300001  02                 	db	2
  4528                           
  4529                           ;Config register CONFIG2L @ 0x300002
  4530                           ;	unspecified, using default values
  4531                           ;	Power-up Timer Enable bit
  4532                           ;	PWRT = 0x1, unprogrammed default
  4533                           ;	Brown-out Reset Enable bits
  4534                           ;	BOREN = 0x3, unprogrammed default
  4535                           ;	Brown Out Reset Voltage bits
  4536                           ;	BORV = 0x3, unprogrammed default
  4537  300002                     	org	3145730
  4538  300002  1F                 	db	31
  4539                           
  4540                           ;Config register CONFIG2H @ 0x300003
  4541                           ;	Watchdog Timer Enable bit
  4542                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4543                           ;	Watchdog Timer Postscale Select bits
  4544                           ;	WDTPS = 1, 1:1
  4545  300003                     	org	3145731
  4546  300003  00                 	db	0
  4547                           
  4548                           ; Padding undefined space
  4549  300004                     	org	3145732
  4550  300004  FF                 	db	255
  4551                           
  4552                           ;Config register CONFIG3H @ 0x300005
  4553                           ;	CCP2 MUX bit
  4554                           ;	CCP2MX = 0x1, unprogrammed default
  4555                           ;	PORTB A/D Enable bit
  4556                           ;	PBADEN = 0x1, unprogrammed default
  4557                           ;	Low-Power Timer1 Oscillator Enable bit
  4558                           ;	LPT1OSC = 0x0, unprogrammed default
  4559                           ;	MCLR Pin Enable bit
  4560                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4561  300005                     	org	3145733
  4562  300005  83                 	db	131
  4563                           
  4564                           ;Config register CONFIG4L @ 0x300006
  4565                           ;	Stack Full/Underflow Reset Enable bit
  4566                           ;	STVREN = 0x1, unprogrammed default
  4567                           ;	Single-Supply ICSP Enable bit
  4568                           ;	LVP = OFF, Single-Supply ICSP disabled
  4569                           ;	Extended Instruction Set Enable bit
  4570                           ;	XINST = 0x0, unprogrammed default
  4571                           ;	Background Debugger Enable bit
  4572                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4573  300006                     	org	3145734
  4574  300006  81                 	db	129
  4575                           
  4576                           ; Padding undefined space
  4577  300007                     	org	3145735
  4578  300007  FF                 	db	255
  4579                           
  4580                           ;Config register CONFIG5L @ 0x300008
  4581                           ;	unspecified, using default values
  4582                           ;	Code Protection bit
  4583                           ;	CP0 = 0x1, unprogrammed default
  4584                           ;	Code Protection bit
  4585                           ;	CP1 = 0x1, unprogrammed default
  4586                           ;	Code Protection bit
  4587                           ;	CP2 = 0x1, unprogrammed default
  4588                           ;	Code Protection bit
  4589                           ;	CP3 = 0x1, unprogrammed default
  4590  300008                     	org	3145736
  4591  300008  0F                 	db	15
  4592                           
  4593                           ;Config register CONFIG5H @ 0x300009
  4594                           ;	unspecified, using default values
  4595                           ;	Boot Block Code Protection bit
  4596                           ;	CPB = 0x1, unprogrammed default
  4597                           ;	Data EEPROM Code Protection bit
  4598                           ;	CPD = 0x1, unprogrammed default
  4599  300009                     	org	3145737
  4600  300009  C0                 	db	192
  4601                           
  4602                           ;Config register CONFIG6L @ 0x30000A
  4603                           ;	unspecified, using default values
  4604                           ;	Write Protection bit
  4605                           ;	WRT0 = 0x1, unprogrammed default
  4606                           ;	Write Protection bit
  4607                           ;	WRT1 = 0x1, unprogrammed default
  4608                           ;	Write Protection bit
  4609                           ;	WRT2 = 0x1, unprogrammed default
  4610                           ;	Write Protection bit
  4611                           ;	WRT3 = 0x1, unprogrammed default
  4612  30000A                     	org	3145738
  4613  30000A  0F                 	db	15
  4614                           
  4615                           ;Config register CONFIG6H @ 0x30000B
  4616                           ;	unspecified, using default values
  4617                           ;	Configuration Register Write Protection bit
  4618                           ;	WRTC = 0x1, unprogrammed default
  4619                           ;	Boot Block Write Protection bit
  4620                           ;	WRTB = 0x1, unprogrammed default
  4621                           ;	Data EEPROM Write Protection bit
  4622                           ;	WRTD = 0x1, unprogrammed default
  4623  30000B                     	org	3145739
  4624  30000B  E0                 	db	224
  4625                           
  4626                           ;Config register CONFIG7L @ 0x30000C
  4627                           ;	unspecified, using default values
  4628                           ;	Table Read Protection bit
  4629                           ;	EBTR0 = 0x1, unprogrammed default
  4630                           ;	Table Read Protection bit
  4631                           ;	EBTR1 = 0x1, unprogrammed default
  4632                           ;	Table Read Protection bit
  4633                           ;	EBTR2 = 0x1, unprogrammed default
  4634                           ;	Table Read Protection bit
  4635                           ;	EBTR3 = 0x1, unprogrammed default
  4636  30000C                     	org	3145740
  4637  30000C  0F                 	db	15
  4638                           
  4639                           ;Config register CONFIG7H @ 0x30000D
  4640                           ;	unspecified, using default values
  4641                           ;	Boot Block Table Read Protection bit
  4642                           ;	EBTRB = 0x1, unprogrammed default
  4643  30000D                     	org	3145741
  4644  30000D  40                 	db	64
  4645                           tosu	equ	0xFFF
  4646                           tosh	equ	0xFFE
  4647                           tosl	equ	0xFFD
  4648                           stkptr	equ	0xFFC
  4649                           pclatu	equ	0xFFB
  4650                           pclath	equ	0xFFA
  4651                           pcl	equ	0xFF9
  4652                           tblptru	equ	0xFF8
  4653                           tblptrh	equ	0xFF7
  4654                           tblptrl	equ	0xFF6
  4655                           tablat	equ	0xFF5
  4656                           prodh	equ	0xFF4
  4657                           prodl	equ	0xFF3
  4658                           indf0	equ	0xFEF
  4659                           postinc0	equ	0xFEE
  4660                           postdec0	equ	0xFED
  4661                           preinc0	equ	0xFEC
  4662                           plusw0	equ	0xFEB
  4663                           fsr0h	equ	0xFEA
  4664                           fsr0l	equ	0xFE9
  4665                           wreg	equ	0xFE8
  4666                           indf1	equ	0xFE7
  4667                           postinc1	equ	0xFE6
  4668                           postdec1	equ	0xFE5
  4669                           preinc1	equ	0xFE4
  4670                           plusw1	equ	0xFE3
  4671                           fsr1h	equ	0xFE2
  4672                           fsr1l	equ	0xFE1
  4673                           bsr	equ	0xFE0
  4674                           indf2	equ	0xFDF
  4675                           postinc2	equ	0xFDE
  4676                           postdec2	equ	0xFDD
  4677                           preinc2	equ	0xFDC
  4678                           plusw2	equ	0xFDB
  4679                           fsr2h	equ	0xFDA
  4680                           fsr2l	equ	0xFD9
  4681                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     47      54
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___llmod
    _pwmSet1->___lwdiv
    _pwmFrequency->___aldiv
    _inicio->_lcdPosition
    _lcd_cmd->_atraso_ms
    _impressaoponto->_lcdPosition
    _impressao->_lcdPosition
    _lcdPosition->_lcdCommand
    _lcdInit->_lcdCommand
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us
    _lcdData->_digitalWrite
    ___llmod->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0   33812
                                             22 COMRAM    25    25      0
                            ___lldiv
                            ___llmod
                             ___lmul
                          _atraso_ms
                          _impressao
                     _impressaoponto
                             _inicio
                         _kpDebounce
                             _kpInit
                             _kpRead
                            _lcdData
                            _lcdInit
                        _lcdPosition
                       _pwmFrequency
                            _pwmInit
                            _pwmSet1
                              _tempo
 ---------------------------------------------------------------------------------
 (1) _tempo                                                5     5      0     184
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _pwmSet1                                              5     5      0    1020
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwmFrequency                                         2     0      2     550
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                          10    10      0     315
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (1) _inicio                                               0     0      0    8236
                          _atraso_ms
                            _lcdData
                            _lcdInit
                        _lcdPosition
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0     820
                                              5 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                            5     3      2     776
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _impressaoponto                                       0     0      0    6640
                            _lcdData
                            _lcdInit
                        _lcdPosition
 ---------------------------------------------------------------------------------
 (1) _impressao                                            0     0      0    6640
                            _lcdData
                            _lcdInit
                        _lcdPosition
 ---------------------------------------------------------------------------------
 (1) _lcdPosition                                          3     2      1    2774
                                              8 COMRAM     3     2      1
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    2419
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4     744
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           2     2      0    1583
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _Delay2ms                                             1     1      0      92
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (1) _lcdData                                              2     2      0    1447
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    1356
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _Delay40us                                            1     1      0      46
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     522
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     767
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     770
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
   ___llmod
     ___lldiv (ARG)
   ___lmul
   _atraso_ms
   _impressao
     _lcdData
       _Delay40us
       _digitalWrite
     _lcdInit
       _Delay2ms
         _Delay40us
       _lcdCommand
         _Delay2ms
         _Delay40us
         _digitalWrite
       _pinMode
     _lcdPosition
       _lcdCommand
   _impressaoponto
     _lcdData
     _lcdInit
     _lcdPosition
   _inicio
     _atraso_ms
     _lcdData
     _lcdInit
     _lcdPosition
     _lcd_cmd
       _atraso_ms
       _lcd_wr
   _kpDebounce
   _kpInit
   _kpRead
   _lcdData
   _lcdInit
   _lcdPosition
   _pwmFrequency
     ___aldiv
   _pwmInit
   _pwmSet1
     ___lwdiv
     ___wmul
   _tempo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2F      36       1       42.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      36      15        0.0%
DATA                 0      0      36       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jul 27 23:12:03 2021

                     l42 7886                       l91 6B28                       l76 7AD4  
                     l94 6C0C      ___wmul@multiplicand 0003                      l110 6B96  
                    l120 6C9E                      l105 6B7A                      l130 6D72  
                    l123 6ECA                      l220 74BE                      l117 703C  
                    l302 7168                      l126 6D26                      l127 6D3C  
                    l223 7264                      l143 6B3C                      l128 6D54  
                    l217 6F44                      l161 7618                      l241 7CEC  
                    l162 7630                      l163 7638                      l181 6DDE  
                    l245 7EB6                      l166 6B32                      l190 6B62  
                    l280 6D08                      l265 6C4A                      l178 6FBE  
                    l347 7370                      l187 6BBC                      l268 6BE2  
                    l295 7158                      l279 6CF8                      l766 6E52  
                    l695 70C4                      l759 6E4A                      l688 70B4  
                    wreg 000FE8                     l2001 6F6C                     l2011 6F98  
                   l2005 6F80                     l2031 6DB0                     l2015 6F9E  
                   l2007 6F84                     l2023 6FAA                     l2041 6B54  
                   l2033 6DB8                     l2025 6FAC                     l2201 7E3A  
                   l2051 6CA0                     l2043 6B58                     l2035 6DD0  
                   l2027 6D76                     l2019 6FA4                     l2203 7E8A  
                   l2131 7B0E                     l2061 70C6                     l2053 6CB0  
                   l2045 6ECC                     l2037 6B98                     l2029 6D94  
                   l2301 7FF6                     l2221 7ECA                     l2205 7E8E  
                   l2141 7B3A                     l2133 7B12                     l2071 710E  
                   l2063 70D6                     l2055 6CBE                     l2047 7372  
                   l2039 6B50                     l2231 7EFC                     l2223 7ECC  
                   l2215 7EBA                     l2207 7E94                     l2151 7B82  
                   l2143 7B46                     l2135 7B16                     l2081 7152  
                   l2073 7118                     l2065 70EC                     l2057 6CCE  
                   l2049 716A                     l2233 7F08                     l2225 7EDC  
                   l2217 7EC0                     l2209 7EAA                     l2161 7BD4  
                   l2153 7B90                     l2145 7B54                     l2137 7B1A  
                   l2129 7AD6                     l2075 7136                     l2067 70F4  
                   l2091 7076                     l2083 703E                     l2059 6CD8  
                   l2251 7F4E                     l2243 7F38                     l2235 7F0C  
                   l2227 7EF2                     l2219 7EC4                     l2171 7C16  
                   l2163 7BDC                     l2155 7BA0                     l2147 7B64  
                   l2139 7B1E                     l2077 7146                     l2069 7100  
                   l2093 7094                     l2085 7054                     l1701 6B86  
                   l2261 7F76                     l2253 7F56                     l2245 7F3A  
                   l2229 7EF8                     l2173 7C26                     l2181 7C62  
                   l2165 7BE0                     l2157 7BAE                     l2149 7B72  
                   l2079 7148                     l2095 70A4                     l2087 705C  
                   l1711 78F8                     l1703 7888                     l2271 7F98  
                   l2263 7F80                     l2247 7F3E                     l2255 7F66  
                   l2239 7F20                     l2191 7D3A                     l2183 7C78  
                   l2175 7C34                     l2167 7BFC                     l2159 7BBE  
                   l2097 70AE                     l2089 7068                     l1641 6B64  
                   l1801 6C56                     l1721 798C                     l1713 7914  
                   l1705 78A4                     l2281 7FBA                     l2273 7F9E  
                   l2265 7F86                     l2249 7F42                     l2193 7D44  
                   l2185 7CE4                     l2177 7C44                     l2169 7C08  
                   l1651 763A                     l1811 6C9A                     l1803 6C6A  
                   l1731 7A16                     l1723 799E                     l1715 7926  
                   l1707 78B6                     l2291 7FD8                     l2283 7FC0  
                   l2275 7FA4                     l2267 7F8C                     l2259 7F6E  
                   l2195 7D94                     l2187 7CE8                     l2179 7C52  
                   l1661 76C6                     l1653 7656                     l1805 6C6E  
                   l1741 7AB2                     l1733 7A3A                     l1725 79C2  
                   l1717 794A                     l1709 78D6                     l1821 6E88  
                   l1813 6E54                     l1901 733A                     l2293 7FDE  
                   l2285 7FC6                     l2277 7FAA                     l2269 7F92  
                   l2197 7DE4                     l2189 7D30                     l1647 6B68  
                   l1671 7758                     l1663 76E0                     l1655 7668  
                   l1807 6C82                     l1735 7A60                     l1727 79E8  
                   l1719 7970                     l1831 6E9E                     l1823 6E8C  
                   l1815 6E7C                     l1743 6B24                     l1903 7340  
                   l1911 6DE0                     l2295 7FE4                     l2287 7FCC  
                   l2279 7FB0                     l2199 7DEA                     l1649 6B6A  
                   l1681 77F0                     l1673 7778                     l1665 7700  
                   l1657 7688                     l1809 6C96                     l1761 6FC2  
                   l1737 7A7C                     l1729 7A04                     l1841 6EB8  
                   l1833 6EA2                     l1825 6E90                     l1817 6E80  
                   l1753 6C1E                     l1745 6C0E                     l1905 7350  
                   l1921 6E18                     l1913 6DE8                     l2297 7FEA  
                   l2289 7FD2                     l1683 7812                     l1675 779A  
                   l1667 7722                     l1659 76AA                     l1691 6B7C  
                   l1771 6FF6                     l1763 6FC6                     l1739 7A8E  
                   l1843 6EBE                     l1835 6EA8                     l1827 6E94  
                   l1819 6E84                     l1851 6D20                     l1755 6C20  
                   l1747 6C1A                     l1907 7360                     l1931 6E44  
                   l1923 6E1E                     l1915 6DFA                     l2299 7FF0  
                   l1685 782E                     l1677 77B6                     l1669 773E  
                   l1781 7038                     l1773 700A                     l1765 6FCA  
                   l1845 6EC4                     l1837 6EAC                     l1829 6E9A  
                   l1853 6D36                     l1757 6C30                     l1933 6B34  
                   l1925 6E34                     l1917 6E02                     l1861 6BBE  
                   l1687 7848                     l1679 77D0                     l1775 700E  
                   l1767 6FDE                     l1839 6EB2                     l1855 6D4E  
                   l1847 6D0C                     l1759 6C34                     l1791 6BFC  
                   l1783 6BE6                     l1935 74C0                     l1871 7278  
                   l1927 6E3C                     l1919 6E0A                     l1863 6BDA  
                   l1689 7868                     l1697 6B80                     l1777 7020  
                   l1769 6FE2                     l1857 6D66                     l1849 6D10  
                   l1793 6BFE                     l1785 6BE8                     l1953 7516  
                   l1945 74CC                     l1937 74C4                     l1881 72AE  
                   l1873 7288                     l1929 6E3E                     l1699 6B84  
                   l1779 7030                     l1859 6D6C                     l1795 6C0A  
                   l1787 6BEE                     l1971 75CC                     l1963 753A  
                   l1955 751A                     l1947 750E                     l1939 74C8  
                   l1891 72F6                     l1883 72BE                     l1875 728C  
                   l1867 7266                     l1797 6C4E                     l1789 6BF0  
                   l1981 760C                     l1973 75DC                     l1965 7566  
                   l1957 7536                     l1893 7300                     l1885 72D4  
                   l1877 729A                     l1869 726A                     l1799 6C52  
                   l1983 7610                     l1975 75DE                     l1967 7596  
                   l1895 731E                     l1887 72DC                     l1879 72AA  
                   l1991 6F48                     l1985 7628                     l1977 75EE  
                   l1969 75CA                     l1897 732E                     l1889 72E8  
                   l1993 6F50                     l1987 7634                     l1979 7606  
                   l1899 7330                     l1995 6F54                     l1989 6B2A  
                   l1999 6F68              main@contipo 0022                     u1100 7656  
                   u1101 7652                     u1110 7668                     u1111 7664  
                   u2000 7C52                     u2001 7C4E                     u2010 7C78  
                   u2011 7C74                     u1220 77B6                     u1204 776A  
                   u1140 76C6                     u1124 767A                     u1300 6B96  
                   u2020 7EAA                     u1221 77B2                     u1205 7766  
                   u1141 76C2                     u1125 7676                     u1301 6B92  
                   u2021 7EA6                     u1230 77D0                     u1214 778A  
                   u1150 76E0                     u1134 769A                     u1310 78A4  
                   u2030 7EDC                     u1231 77CC                     u1215 7786  
                   u1151 76DC                     u1135 7696                     u1311 78A0  
                   u2031 7ED8                     u1400 799E                     u1320 78B6  
                   u2040 7EF2                     u1401 799A                     u1321 78B2  
                   u2041 7EEE                     u1090 6B7A                     u2050 7F1C  
                   u1091 6B76                     u2051 7F18                     u1260 782E  
                   u1244 77E2                     u1180 773E                     u1164 76F2  
                   u2060 7F34                     u1261 782A                     u1245 77DE  
                   u1181 773A                     u1165 76EE                     u2061 7F30  
                   u1270 7848                     u1254 7802                     u1190 7758  
                   u1174 7712                     u1430 7A04                     u1414 79B4  
                   u1350 7914                     u1334 78C8                     u1510 6C30  
                   u2070 7F66                     u1271 7844                     u1255 77FE  
                   u1191 7754                     u1175 770E                     u1431 7A00  
                   u1415 79B0                     u1351 7910                     u1335 78C4  
                   u1511 6C2C                     u2071 7F62                     u1504 7AC8  
                   u1440 7A16                     u1424 79D8                     u1360 7926  
                   u1344 78E8                     u1520 6C4A                     u1600 729A  
                   u1505 7AC4                     u1441 7A12                     u1425 79D4  
                   u1361 7922                     u1345 78E4                     u1521 6C46  
                   u1601 7296                     u1530 7020                     u1610 72D4  
                   u1531 701C                     u1611 72D0                     u1284 785A  
                   u1540 7030                     u1700 7536                     u1620 72F6  
                   u1285 7856                     u1541 702C                     u1701 7532  
                   u1621 72F2                     u1294 787A                     u1470 7A7C  
                   u1454 7A2C                     u1390 798C                     u1374 793C  
                   u1550 6D20                     u1630 731E                     u1295 7876  
                   u1471 7A78                     u1455 7A28                     u1391 7988  
                   u1375 7938                     u1551 6D1C                     u1631 731A  
                   u1480 7A8E                     u1464 7A50                     u1384 7960  
                   u1560 6D36                     u1720 7566                     u1640 7350  
                   u1800 6F7C                     u1481 7A8A                     u1465 7A4C  
                   u1385 795C                     u1561 6D32                     u1721 7562  
                   u1641 734C                     u1801 6F78                     u1570 6D4E  
                   u1714 754C                     u1650 6DFA                     u1810 6F94  
                   u1571 6D4A                     u1715 7548                     u1651 6DF6  
                   u1811 6F90                     u1900 7094                     u1580 6D66  
                   u1660 6E18                     u1820 6FBE                     u1901 7090  
                   u1581 6D62                     u1661 6E14                     u1821 6FBA  
                   u1830 6CBE                     u1494 7AA4                     u1750 75DC  
                   u1734 7584                     u1590 7278                     u1670 6E34  
                   u1910 7B3A                     u1831 6CBA                     u1495 7AA0  
                   u1751 75D8                     u1735 757E                     u1591 7274  
                   u1671 6E30                     u1911 7B36                     u1840 6CF8  
                   u1760 75EE                     u1744 75B4                     u1920 7B54  
                   u1841 6CF4                     u1761 75EA                     u1745 75AE  
                   u1921 7B50                     u1850 70EC                     u1770 7606  
                   u1930 7B72                     u1851 70E8                     u1771 7602  
                   u1931 7B6E                     u1860 710E                     u1780 7628  
                   u1684 74E2                     u1940 7B90                     u1861 710A  
                   u1781 7624                     u1685 74DE                     u1941 7B8C  
                   u1870 7136                     u1694 7502                     u1790 6F64  
                   u1950 7BAE                     u1871 7132                     u1695 74FE  
                   u1791 6F60                     u1951 7BAA                     u1880 7054  
                   u1960 7BD4                     u1881 7050                     u1961 7BD0  
                   u1890 7076                     u1970 7BFC                     u1891 7072  
                   u1971 7BF8                     u1980 7C16                     u1981 7C12  
                   u1990 7C34                     u1991 7C30                     _main 7AD6  
            main@posicao 0026                     prodh 000FF4                     prodl 000FF3  
                   start 0000             ___param_bank 000000          __end_of___aldiv 7372  
                  ?_main 0001          __end_of___lldiv 716A          __end_of___llmod 70C6  
        __end_of___lwdiv 6E54                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96          __end_of_lcdData 6CA0  
    ___lmul@multiplicand 0005          __end_of_lcdInit 6ECC          __end_of_lcd_cmd 6C0E  
        __end_of_pinMode 7AD6                    _valor 0034                    _tempo 6F46  
                  main@i 001C                    main@j 002B                    main@k 001D  
        __end_of_pwmSet1 6DE0          __end_of_pwmInit 6B64                    status 000FD8  
       __end_of_Delay2ms 6B98     __end_of_digitalWrite 7888          __initialization 6B3E  
           __end_of_main 8000       __size_of_Delay40us 0018                   ??_main 0017  
          __activetblptr 000000         ___llmod@dividend 000E                   ?_tempo 0001  
          main@contponto 001E     __size_of_lcdPosition 006A        lcdPosition@coluna 0009  
                 ___lmul 6CA0                ??___aldiv 0009                   ___wmul 6BBE  
              ??___lldiv 0009                ??___llmod 0016                ??___lwdiv 0005  
                 _kpInit 6B2A                   _kpRead 6B34                   _lcd_wr 6B22  
                 _inicio 6ECC                   clear_0 6B44                ??_lcdData 0007  
                 isa$std 000001                ??_lcdInit 0009                ??_lcd_cmd 0006  
              ??_pinMode 0005                   tempo@j 0003                   tempo@k 0004  
                 tempo@m 0005                   tempo@n 0002                   tempo@x 0001  
       ??_impressaoponto 000C                ??_pwmSet1 0008                ??_pwmInit 0001  
      __end_of_Delay40us 6B7C               __accesstop 0080  __end_of__initialization 6B4A  
          ___rparam_used 000001              pinMode@type 0003           __pcstackCOMRAM 0001  
          __end_of_tempo 6FC0                ?_Delay2ms 0001                  ??_tempo 0001  
     __size_of_atraso_ms 003E    __size_of_digitalWrite 024E       __size_of_impressao 014E  
                ?___lmul 0001               _lcdCommand 6FC0                  ?___wmul 0001  
                ?_kpInit 0001                  ?_kpRead 0001                  ?_lcd_wr 0001  
                ?_inicio 0001           ___lmul@product 0009               _kpDebounce 74C0  
             ??_Delay2ms 0002             _digitalWrite 763A                  __Hparam 0000  
                __Lparam 0000          kpDebounce@old_D 0006       lcdPosition@comando 000A  
        kpDebounce@tempo 0036                  ___aldiv 7266          __size_of___lmul 006A  
                ___lldiv 70C6          __size_of___wmul 0026                  ___llmod 703E  
                ___lwdiv 6DE0        __end_of_atraso_ms 6C4C          __size_of_kpInit 000A  
        __size_of_kpRead 000A          __size_of_lcd_wr 0008          __size_of_inicio 007A  
                __pcinit 6B3E                  _lcdData 6C4C                  __ramtop 0600  
                _lcdInit 6E54                  __ptext0 7AD6                  __ptext1 6F46  
                __ptext2 6D74                  __ptext3 6BBE                  __ptext4 6DE0  
                __ptext5 6B50                  __ptext6 6B98                  __ptext7 7266  
                __ptext8 6B34                  __ptext9 6B2A                  _lcd_cmd 6BE4  
                _pinMode 7888         ___aldiv@dividend 0001        __end_of_impressao 74C0  
                _pwmSet1 6D74                  _pwmInit 6B50                Delay2ms@i 0002  
                main@aux 001B      kpDebounce@valorNovo 0032     end_of_initialization 6B4A  
          ?_pwmFrequency 000F          ___lldiv@divisor 0005          ___lldiv@counter 000D  
       ___aldiv@quotient 000B              ?_lcdCommand 0001                  postinc0 000FEE  
            ?_kpDebounce 0001                _PORTEbits 000F84               lcd_cmd@val 0006  
          ??_lcdPosition 000A           ??_pwmFrequency 0011                _Delay40us 6B64  
             main@teclay 0027               atraso_ms@i 0003               atraso_ms@j 0005  
         __end_of___lmul 6D0A           __end_of___wmul 6BE4           __end_of_kpInit 6B34  
         __end_of_kpRead 6B3E           __end_of_lcd_wr 6B2A           __end_of_inicio 6F46  
    start_initialization 6B3E        __size_of_Delay2ms 001C      __size_of_lcdCommand 007E  
    __size_of_kpDebounce 017A               ?_Delay40us 0001          ___llmod@divisor 0012  
        ___llmod@counter 0016      __end_of_lcdPosition 6D74         lcdPosition@linha 000B  
               ??___lmul 0009                 ??___wmul 0005                 ??_kpInit 0001  
               ??_kpRead 0003                 ??_lcd_wr 0001                 ??_inicio 000C  
            __pbssCOMRAM 0030               pinMode@pin 0001  __size_of_impressaoponto 00FC  
       ___lwdiv@dividend 0001                 ?___aldiv 0001                 ?___lldiv 0001  
               ?___llmod 000E                 ?___lwdiv 0001                 ?_lcdData 0001  
               ?_lcdInit 0001                 ?_lcd_cmd 0001     __end_of_pwmFrequency 6BBE  
          lcdCommand@cmd 0008                _atraso_ms 6C0E                 ?_pinMode 0001  
               ?_pwmSet1 0001                 ?_pwmInit 0001         ___lwdiv@quotient 0005  
         __size_of_tempo 007A              _lcdPosition 6D0A         pwmFrequency@freq 000F  
              _impressao 7372           atraso_ms@valor 0001          ___aldiv@divisor 0005  
        ___aldiv@counter 0009              ??_Delay40us 0001           ___wmul@product 0005  
           ??_lcdCommand 0007               pwmSet1@val 000B             ??_kpDebounce 0001  
      ___wmul@multiplier 0001               ?_atraso_ms 0001          lcdCommand@old_D 0007  
  kpDebounce@valorAntigo 0030                lcd_wr@val 0001                 _Delay2ms 6B7C  
              main@tecla 0029        ___lmul@multiplier 0001       __end_of_lcdCommand 703E  
             ?_impressao 0001             lcdData@old_D 0008             lcdData@valor 0007  
     __end_of_kpDebounce 763A                 __Hrparam 0000                 __Lrparam 0000  
       __size_of___aldiv 010C         __size_of___lldiv 00A4         __size_of___llmod 0088  
       __size_of___lwdiv 0074          pwmSet1@porcento 000A         __size_of_lcdData 0054  
       __size_of_lcdInit 0078         __size_of_lcd_cmd 002A                 _main$981 0017  
       __size_of_pinMode 024E          ___lwdiv@divisor 0003          ___lwdiv@counter 0007  
               __ptext10 74C0                 __ptext11 6ECC                 __ptext20 6FC0  
               __ptext12 6BE4                 __ptext21 6B7C                 __ptext13 6B22  
               __ptext22 6C4C                 __ptext14 6C0E                 __ptext23 763A  
               __ptext15 716A                 __ptext24 6B64                 __ptext16 7372  
               __ptext25 6CA0                 __ptext17 6D0A                 __ptext26 703E  
               __ptext18 6E54                 __ptext27 70C6                 __ptext19 7888  
       __size_of_pwmSet1 006C         __size_of_pwmInit 0014            __size_of_main 052A  
         _impressaoponto 716A               Delay40us@i 0001                 isa$xinst 000000  
  __size_of_pwmFrequency 0026                 main@cont 002C              ??_atraso_ms 0003  
          ?_digitalWrite 0001              ??_impressao 000C   __end_of_impressaoponto 7266  
      digitalWrite@value 0003         ___lldiv@dividend 0001             _pwmFrequency 6B98  
       ___lldiv@quotient 0009              kpDebounce@i 000A              kpDebounce@j 0009  
            kpDebounce@k 0007           ??_digitalWrite 0005             ___aldiv@sign 000A  
           ?_lcdPosition 0009          digitalWrite@pin 0001          ?_impressaoponto 0001  
